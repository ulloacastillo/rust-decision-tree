<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="486" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="469.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="469.00"> </text><svg id="frames" x="10" width="1180" total_samples="8509"><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="0.0000%" y="341" width="0.0118%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="351.50"></text></g><g><title>decision-tree`core::num::dec2flt::dec2flt (2 samples, 0.02%)</title><rect x="0.0118%" y="341" width="0.0235%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="2"/><text x="0.2618%" y="351.50"></text></g><g><title>decision-tree`core::slice::memchr::memchr_aligned (20 samples, 0.24%)</title><rect x="2.5737%" y="293" width="0.2350%" height="15" fill="rgb(221,193,54)" fg:x="219" fg:w="20"/><text x="2.8237%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.04%)</title><rect x="3.0791%" y="277" width="0.0353%" height="15" fill="rgb(248,212,6)" fg:x="262" fg:w="3"/><text x="3.3291%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (59 samples, 0.69%)</title><rect x="4.2426%" y="245" width="0.6934%" height="15" fill="rgb(208,68,35)" fg:x="361" fg:w="59"/><text x="4.4926%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (134 samples, 1.57%)</title><rect x="3.3847%" y="261" width="1.5748%" height="15" fill="rgb(232,128,0)" fg:x="288" fg:w="134"/><text x="3.6347%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.02%)</title><rect x="4.9360%" y="245" width="0.0235%" height="15" fill="rgb(207,160,47)" fg:x="420" fg:w="2"/><text x="5.1860%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (186 samples, 2.19%)</title><rect x="2.8088%" y="293" width="2.1859%" height="15" fill="rgb(228,23,34)" fg:x="239" fg:w="186"/><text x="3.0588%" y="303.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (160 samples, 1.88%)</title><rect x="3.1143%" y="277" width="1.8804%" height="15" fill="rgb(218,30,26)" fg:x="265" fg:w="160"/><text x="3.3643%" y="287.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.04%)</title><rect x="4.9595%" y="261" width="0.0353%" height="15" fill="rgb(220,122,19)" fg:x="422" fg:w="3"/><text x="5.2095%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.04%)</title><rect x="4.9947%" y="293" width="0.0353%" height="15" fill="rgb(250,228,42)" fg:x="425" fg:w="3"/><text x="5.2447%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="5.0300%" y="293" width="0.0235%" height="15" fill="rgb(240,193,28)" fg:x="428" fg:w="2"/><text x="5.2800%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (1 samples, 0.01%)</title><rect x="5.0535%" y="293" width="0.0118%" height="15" fill="rgb(216,20,37)" fg:x="430" fg:w="1"/><text x="5.3035%" y="303.50"></text></g><g><title>decision-tree`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (266 samples, 3.13%)</title><rect x="2.1154%" y="309" width="3.1261%" height="15" fill="rgb(206,188,39)" fg:x="180" fg:w="266"/><text x="2.3654%" y="319.50">dec..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.18%)</title><rect x="5.0652%" y="293" width="0.1763%" height="15" fill="rgb(217,207,13)" fg:x="431" fg:w="15"/><text x="5.3152%" y="303.50"></text></g><g><title>decision-tree`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="5.2415%" y="309" width="0.0118%" height="15" fill="rgb(231,73,38)" fg:x="446" fg:w="1"/><text x="5.4915%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="5.3003%" y="277" width="0.0118%" height="15" fill="rgb(225,20,46)" fg:x="451" fg:w="1"/><text x="5.5503%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.04%)</title><rect x="5.3120%" y="277" width="0.0353%" height="15" fill="rgb(210,31,41)" fg:x="452" fg:w="3"/><text x="5.5620%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (1 samples, 0.01%)</title><rect x="5.3943%" y="261" width="0.0118%" height="15" fill="rgb(221,200,47)" fg:x="459" fg:w="1"/><text x="5.6443%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (2 samples, 0.02%)</title><rect x="5.4413%" y="245" width="0.0235%" height="15" fill="rgb(226,26,5)" fg:x="463" fg:w="2"/><text x="5.6913%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="5.4648%" y="245" width="0.0118%" height="15" fill="rgb(249,33,26)" fg:x="465" fg:w="1"/><text x="5.7148%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.07%)</title><rect x="5.4766%" y="245" width="0.0705%" height="15" fill="rgb(235,183,28)" fg:x="466" fg:w="6"/><text x="5.7266%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (1 samples, 0.01%)</title><rect x="5.5588%" y="229" width="0.0118%" height="15" fill="rgb(221,5,38)" fg:x="473" fg:w="1"/><text x="5.8088%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (15 samples, 0.18%)</title><rect x="5.5706%" y="229" width="0.1763%" height="15" fill="rgb(247,18,42)" fg:x="474" fg:w="15"/><text x="5.8206%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (11 samples, 0.13%)</title><rect x="5.7469%" y="229" width="0.1293%" height="15" fill="rgb(241,131,45)" fg:x="489" fg:w="11"/><text x="5.9969%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.11%)</title><rect x="5.7704%" y="213" width="0.1058%" height="15" fill="rgb(249,31,29)" fg:x="491" fg:w="9"/><text x="6.0204%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="5.8644%" y="197" width="0.0118%" height="15" fill="rgb(225,111,53)" fg:x="499" fg:w="1"/><text x="6.1144%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (14 samples, 0.16%)</title><rect x="5.8761%" y="229" width="0.1645%" height="15" fill="rgb(238,160,17)" fg:x="500" fg:w="14"/><text x="6.1261%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (5 samples, 0.06%)</title><rect x="6.1934%" y="197" width="0.0588%" height="15" fill="rgb(214,148,48)" fg:x="527" fg:w="5"/><text x="6.4434%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.29%)</title><rect x="6.0407%" y="229" width="0.2938%" height="15" fill="rgb(232,36,49)" fg:x="514" fg:w="25"/><text x="6.2907%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (23 samples, 0.27%)</title><rect x="6.0642%" y="213" width="0.2703%" height="15" fill="rgb(209,103,24)" fg:x="516" fg:w="23"/><text x="6.3142%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.08%)</title><rect x="6.2522%" y="197" width="0.0823%" height="15" fill="rgb(229,88,8)" fg:x="532" fg:w="7"/><text x="6.5022%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="6.3110%" y="181" width="0.0235%" height="15" fill="rgb(213,181,19)" fg:x="537" fg:w="2"/><text x="6.5610%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (71 samples, 0.83%)</title><rect x="5.5471%" y="245" width="0.8344%" height="15" fill="rgb(254,191,54)" fg:x="472" fg:w="71"/><text x="5.7971%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.05%)</title><rect x="6.3345%" y="229" width="0.0470%" height="15" fill="rgb(241,83,37)" fg:x="539" fg:w="4"/><text x="6.5845%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (3 samples, 0.04%)</title><rect x="6.3815%" y="245" width="0.0353%" height="15" fill="rgb(233,36,39)" fg:x="543" fg:w="3"/><text x="6.6315%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (87 samples, 1.02%)</title><rect x="5.4060%" y="261" width="1.0224%" height="15" fill="rgb(226,3,54)" fg:x="460" fg:w="87"/><text x="5.6560%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.01%)</title><rect x="6.4167%" y="245" width="0.0118%" height="15" fill="rgb(245,192,40)" fg:x="546" fg:w="1"/><text x="6.6667%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="6.4167%" y="229" width="0.0118%" height="15" fill="rgb(238,167,29)" fg:x="546" fg:w="1"/><text x="6.6667%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.08%)</title><rect x="6.4285%" y="261" width="0.0823%" height="15" fill="rgb(232,182,51)" fg:x="547" fg:w="7"/><text x="6.6785%" y="271.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (108 samples, 1.27%)</title><rect x="5.2533%" y="309" width="1.2692%" height="15" fill="rgb(231,60,39)" fg:x="447" fg:w="108"/><text x="5.5033%" y="319.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (108 samples, 1.27%)</title><rect x="5.2533%" y="293" width="1.2692%" height="15" fill="rgb(208,69,12)" fg:x="447" fg:w="108"/><text x="5.5033%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`realloc (100 samples, 1.18%)</title><rect x="5.3473%" y="277" width="1.1752%" height="15" fill="rgb(235,93,37)" fg:x="455" fg:w="100"/><text x="5.5973%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="6.5108%" y="261" width="0.0118%" height="15" fill="rgb(213,116,39)" fg:x="554" fg:w="1"/><text x="6.7608%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.12%)</title><rect x="6.5225%" y="309" width="0.1175%" height="15" fill="rgb(222,207,29)" fg:x="555" fg:w="10"/><text x="6.7725%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.06%)</title><rect x="6.5813%" y="293" width="0.0588%" height="15" fill="rgb(206,96,30)" fg:x="560" fg:w="5"/><text x="6.8313%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.06%)</title><rect x="6.5813%" y="277" width="0.0588%" height="15" fill="rgb(218,138,4)" fg:x="560" fg:w="5"/><text x="6.8313%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.04%)</title><rect x="6.6048%" y="261" width="0.0353%" height="15" fill="rgb(250,191,14)" fg:x="562" fg:w="3"/><text x="6.8548%" y="271.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.01%)</title><rect x="6.6400%" y="309" width="0.0118%" height="15" fill="rgb(239,60,40)" fg:x="565" fg:w="1"/><text x="6.8900%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (4 samples, 0.05%)</title><rect x="6.6518%" y="309" width="0.0470%" height="15" fill="rgb(206,27,48)" fg:x="566" fg:w="4"/><text x="6.9018%" y="319.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (434 samples, 5.10%)</title><rect x="1.6101%" y="325" width="5.1005%" height="15" fill="rgb(225,35,8)" fg:x="137" fg:w="434"/><text x="1.8601%" y="335.50">decisi..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="6.6988%" y="309" width="0.0118%" height="15" fill="rgb(250,213,24)" fg:x="570" fg:w="1"/><text x="6.9488%" y="319.50"></text></g><g><title>decision-tree`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="6.7105%" y="325" width="0.0353%" height="15" fill="rgb(247,123,22)" fg:x="571" fg:w="3"/><text x="6.9605%" y="335.50"></text></g><g><title>decision-tree`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="6.7458%" y="325" width="0.0118%" height="15" fill="rgb(231,138,38)" fg:x="574" fg:w="1"/><text x="6.9958%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`large_try_realloc_in_place (1 samples, 0.01%)</title><rect x="6.7576%" y="245" width="0.0118%" height="15" fill="rgb(231,145,46)" fg:x="575" fg:w="1"/><text x="7.0076%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (1 samples, 0.01%)</title><rect x="6.7576%" y="229" width="0.0118%" height="15" fill="rgb(251,118,11)" fg:x="575" fg:w="1"/><text x="7.0076%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (1 samples, 0.01%)</title><rect x="6.7576%" y="213" width="0.0118%" height="15" fill="rgb(217,147,25)" fg:x="575" fg:w="1"/><text x="7.0076%" y="223.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.05%)</title><rect x="6.7576%" y="325" width="0.0470%" height="15" fill="rgb(247,81,37)" fg:x="575" fg:w="4"/><text x="7.0076%" y="335.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (4 samples, 0.05%)</title><rect x="6.7576%" y="309" width="0.0470%" height="15" fill="rgb(209,12,38)" fg:x="575" fg:w="4"/><text x="7.0076%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`realloc (4 samples, 0.05%)</title><rect x="6.7576%" y="293" width="0.0470%" height="15" fill="rgb(227,1,9)" fg:x="575" fg:w="4"/><text x="7.0076%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (4 samples, 0.05%)</title><rect x="6.7576%" y="277" width="0.0470%" height="15" fill="rgb(248,47,43)" fg:x="575" fg:w="4"/><text x="7.0076%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (4 samples, 0.05%)</title><rect x="6.7576%" y="261" width="0.0470%" height="15" fill="rgb(221,10,30)" fg:x="575" fg:w="4"/><text x="7.0076%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.04%)</title><rect x="6.7693%" y="245" width="0.0353%" height="15" fill="rgb(210,229,1)" fg:x="576" fg:w="3"/><text x="7.0193%" y="255.50"></text></g><g><title>decision-tree`DYLD-STUB$$realloc (1 samples, 0.01%)</title><rect x="6.8163%" y="309" width="0.0118%" height="15" fill="rgb(222,148,37)" fg:x="580" fg:w="1"/><text x="7.0663%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.01%)</title><rect x="6.9221%" y="277" width="0.0118%" height="15" fill="rgb(234,67,33)" fg:x="589" fg:w="1"/><text x="7.1721%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.08%)</title><rect x="6.9221%" y="293" width="0.0823%" height="15" fill="rgb(247,98,35)" fg:x="589" fg:w="7"/><text x="7.1721%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.07%)</title><rect x="6.9338%" y="277" width="0.0705%" height="15" fill="rgb(247,138,52)" fg:x="590" fg:w="6"/><text x="7.1838%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.07%)</title><rect x="6.9338%" y="261" width="0.0705%" height="15" fill="rgb(213,79,30)" fg:x="590" fg:w="6"/><text x="7.1838%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.02%)</title><rect x="6.9808%" y="245" width="0.0235%" height="15" fill="rgb(246,177,23)" fg:x="594" fg:w="2"/><text x="7.2308%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="7.0043%" y="293" width="0.0118%" height="15" fill="rgb(230,62,27)" fg:x="596" fg:w="1"/><text x="7.2543%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (1 samples, 0.01%)</title><rect x="7.0749%" y="277" width="0.0118%" height="15" fill="rgb(216,154,8)" fg:x="602" fg:w="1"/><text x="7.3249%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.09%)</title><rect x="7.1101%" y="261" width="0.0940%" height="15" fill="rgb(244,35,45)" fg:x="605" fg:w="8"/><text x="7.3601%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (7 samples, 0.08%)</title><rect x="7.2394%" y="245" width="0.0823%" height="15" fill="rgb(251,115,12)" fg:x="616" fg:w="7"/><text x="7.4894%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (15 samples, 0.18%)</title><rect x="7.3217%" y="245" width="0.1763%" height="15" fill="rgb(240,54,50)" fg:x="623" fg:w="15"/><text x="7.5717%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (19 samples, 0.22%)</title><rect x="7.5332%" y="229" width="0.2233%" height="15" fill="rgb(233,84,52)" fg:x="641" fg:w="19"/><text x="7.7832%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (10 samples, 0.12%)</title><rect x="7.6390%" y="213" width="0.1175%" height="15" fill="rgb(207,117,47)" fg:x="650" fg:w="10"/><text x="7.8890%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (23 samples, 0.27%)</title><rect x="7.4979%" y="245" width="0.2703%" height="15" fill="rgb(249,43,39)" fg:x="638" fg:w="23"/><text x="7.7479%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="7.7565%" y="229" width="0.0118%" height="15" fill="rgb(209,38,44)" fg:x="660" fg:w="1"/><text x="8.0065%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (59 samples, 0.69%)</title><rect x="7.2041%" y="261" width="0.6934%" height="15" fill="rgb(236,212,23)" fg:x="613" fg:w="59"/><text x="7.4541%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (11 samples, 0.13%)</title><rect x="7.7682%" y="245" width="0.1293%" height="15" fill="rgb(242,79,21)" fg:x="661" fg:w="11"/><text x="8.0182%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="7.8975%" y="245" width="0.0118%" height="15" fill="rgb(211,96,35)" fg:x="672" fg:w="1"/><text x="8.1475%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`large_try_realloc_in_place (2 samples, 0.02%)</title><rect x="7.9093%" y="245" width="0.0235%" height="15" fill="rgb(253,215,40)" fg:x="673" fg:w="2"/><text x="8.1593%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (2 samples, 0.02%)</title><rect x="7.9093%" y="229" width="0.0235%" height="15" fill="rgb(211,81,21)" fg:x="673" fg:w="2"/><text x="8.1593%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (2 samples, 0.02%)</title><rect x="7.9093%" y="213" width="0.0235%" height="15" fill="rgb(208,190,38)" fg:x="673" fg:w="2"/><text x="8.1593%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (13 samples, 0.15%)</title><rect x="7.8975%" y="261" width="0.1528%" height="15" fill="rgb(235,213,38)" fg:x="672" fg:w="13"/><text x="8.1475%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.12%)</title><rect x="7.9328%" y="245" width="0.1175%" height="15" fill="rgb(237,122,38)" fg:x="675" fg:w="10"/><text x="8.1828%" y="255.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.01%)</title><rect x="8.0503%" y="261" width="0.0118%" height="15" fill="rgb(244,218,35)" fg:x="685" fg:w="1"/><text x="8.3003%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (84 samples, 0.99%)</title><rect x="7.0866%" y="277" width="0.9872%" height="15" fill="rgb(240,68,47)" fg:x="603" fg:w="84"/><text x="7.3366%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="8.0621%" y="261" width="0.0118%" height="15" fill="rgb(210,16,53)" fg:x="686" fg:w="1"/><text x="8.3121%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (20 samples, 0.24%)</title><rect x="8.0738%" y="277" width="0.2350%" height="15" fill="rgb(235,124,12)" fg:x="687" fg:w="20"/><text x="8.3238%" y="287.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (127 samples, 1.49%)</title><rect x="6.8281%" y="309" width="1.4925%" height="15" fill="rgb(224,169,11)" fg:x="581" fg:w="127"/><text x="7.0781%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`realloc (111 samples, 1.30%)</title><rect x="7.0161%" y="293" width="1.3045%" height="15" fill="rgb(250,166,2)" fg:x="597" fg:w="111"/><text x="7.2661%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="8.3088%" y="277" width="0.0118%" height="15" fill="rgb(242,216,29)" fg:x="707" fg:w="1"/><text x="8.5588%" y="287.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (131 samples, 1.54%)</title><rect x="6.8046%" y="325" width="1.5395%" height="15" fill="rgb(230,116,27)" fg:x="579" fg:w="131"/><text x="7.0546%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.02%)</title><rect x="8.3206%" y="309" width="0.0235%" height="15" fill="rgb(228,99,48)" fg:x="708" fg:w="2"/><text x="8.5706%" y="319.50"></text></g><g><title>decision-tree`core::num::dec2flt::dec2flt (46 samples, 0.54%)</title><rect x="8.3441%" y="325" width="0.5406%" height="15" fill="rgb(253,11,6)" fg:x="710" fg:w="46"/><text x="8.5941%" y="335.50"></text></g><g><title>decision-tree`DYLD-STUB$$memcpy (3 samples, 0.04%)</title><rect x="10.9061%" y="309" width="0.0353%" height="15" fill="rgb(247,143,39)" fg:x="928" fg:w="3"/><text x="11.1561%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_large (3 samples, 0.04%)</title><rect x="10.9531%" y="229" width="0.0353%" height="15" fill="rgb(236,97,10)" fg:x="932" fg:w="3"/><text x="11.2031%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (1 samples, 0.01%)</title><rect x="10.9766%" y="213" width="0.0118%" height="15" fill="rgb(233,208,19)" fg:x="934" fg:w="1"/><text x="11.2266%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.01%)</title><rect x="10.9766%" y="197" width="0.0118%" height="15" fill="rgb(216,164,2)" fg:x="934" fg:w="1"/><text x="11.2266%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`large_try_realloc_in_place (1 samples, 0.01%)</title><rect x="10.9884%" y="229" width="0.0118%" height="15" fill="rgb(220,129,5)" fg:x="935" fg:w="1"/><text x="11.2384%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (1 samples, 0.01%)</title><rect x="10.9884%" y="213" width="0.0118%" height="15" fill="rgb(242,17,10)" fg:x="935" fg:w="1"/><text x="11.2384%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (1 samples, 0.01%)</title><rect x="10.9884%" y="197" width="0.0118%" height="15" fill="rgb(242,107,0)" fg:x="935" fg:w="1"/><text x="11.2384%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="11.0001%" y="229" width="0.0118%" height="15" fill="rgb(251,28,31)" fg:x="936" fg:w="1"/><text x="11.2501%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`large_malloc (1 samples, 0.01%)</title><rect x="11.0001%" y="213" width="0.0118%" height="15" fill="rgb(233,223,10)" fg:x="936" fg:w="1"/><text x="11.2501%" y="223.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (45 samples, 0.53%)</title><rect x="10.9414%" y="309" width="0.5289%" height="15" fill="rgb(215,21,27)" fg:x="931" fg:w="45"/><text x="11.1914%" y="319.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (45 samples, 0.53%)</title><rect x="10.9414%" y="293" width="0.5289%" height="15" fill="rgb(232,23,21)" fg:x="931" fg:w="45"/><text x="11.1914%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`realloc (45 samples, 0.53%)</title><rect x="10.9414%" y="277" width="0.5289%" height="15" fill="rgb(244,5,23)" fg:x="931" fg:w="45"/><text x="11.1914%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (45 samples, 0.53%)</title><rect x="10.9414%" y="261" width="0.5289%" height="15" fill="rgb(226,81,46)" fg:x="931" fg:w="45"/><text x="11.1914%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (44 samples, 0.52%)</title><rect x="10.9531%" y="245" width="0.5171%" height="15" fill="rgb(247,70,30)" fg:x="932" fg:w="44"/><text x="11.2031%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (39 samples, 0.46%)</title><rect x="11.0119%" y="229" width="0.4583%" height="15" fill="rgb(212,68,19)" fg:x="937" fg:w="39"/><text x="11.2619%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`large_entry_for_pointer_no_lock (1 samples, 0.01%)</title><rect x="11.4702%" y="277" width="0.0118%" height="15" fill="rgb(240,187,13)" fg:x="976" fg:w="1"/><text x="11.7202%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`madvise (4 samples, 0.05%)</title><rect x="11.4820%" y="245" width="0.0470%" height="15" fill="rgb(223,113,26)" fg:x="977" fg:w="4"/><text x="11.7320%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (38 samples, 0.45%)</title><rect x="11.5290%" y="245" width="0.4466%" height="15" fill="rgb(206,192,2)" fg:x="981" fg:w="38"/><text x="11.7790%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (38 samples, 0.45%)</title><rect x="11.5290%" y="229" width="0.4466%" height="15" fill="rgb(241,108,4)" fg:x="981" fg:w="38"/><text x="11.7790%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_large (1 samples, 0.01%)</title><rect x="11.9756%" y="245" width="0.0118%" height="15" fill="rgb(247,173,49)" fg:x="1019" fg:w="1"/><text x="12.2256%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`large_try_realloc_in_place (10 samples, 0.12%)</title><rect x="11.9873%" y="245" width="0.1175%" height="15" fill="rgb(224,114,35)" fg:x="1020" fg:w="10"/><text x="12.2373%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (10 samples, 0.12%)</title><rect x="11.9873%" y="229" width="0.1175%" height="15" fill="rgb(245,159,27)" fg:x="1020" fg:w="10"/><text x="12.2373%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (10 samples, 0.12%)</title><rect x="11.9873%" y="213" width="0.1175%" height="15" fill="rgb(245,172,44)" fg:x="1020" fg:w="10"/><text x="12.2373%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="12.1048%" y="245" width="0.0235%" height="15" fill="rgb(236,23,11)" fg:x="1030" fg:w="2"/><text x="12.3548%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`large_malloc (2 samples, 0.02%)</title><rect x="12.1048%" y="229" width="0.0235%" height="15" fill="rgb(205,117,38)" fg:x="1030" fg:w="2"/><text x="12.3548%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`mvm_allocate_pages (1 samples, 0.01%)</title><rect x="12.1166%" y="213" width="0.0118%" height="15" fill="rgb(237,72,25)" fg:x="1031" fg:w="1"/><text x="12.3666%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (1 samples, 0.01%)</title><rect x="12.1166%" y="197" width="0.0118%" height="15" fill="rgb(244,70,9)" fg:x="1031" fg:w="1"/><text x="12.3666%" y="207.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (220 samples, 2.59%)</title><rect x="11.4702%" y="309" width="2.5855%" height="15" fill="rgb(217,125,39)" fg:x="976" fg:w="220"/><text x="11.7202%" y="319.50">de..</text></g><g><title>libsystem_malloc.dylib`realloc (220 samples, 2.59%)</title><rect x="11.4702%" y="293" width="2.5855%" height="15" fill="rgb(235,36,10)" fg:x="976" fg:w="220"/><text x="11.7202%" y="303.50">li..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (219 samples, 2.57%)</title><rect x="11.4820%" y="277" width="2.5737%" height="15" fill="rgb(251,123,47)" fg:x="977" fg:w="219"/><text x="11.7320%" y="287.50">li..</text></g><g><title>libsystem_malloc.dylib`szone_realloc (219 samples, 2.57%)</title><rect x="11.4820%" y="261" width="2.5737%" height="15" fill="rgb(221,13,13)" fg:x="977" fg:w="219"/><text x="11.7320%" y="271.50">li..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (164 samples, 1.93%)</title><rect x="12.1283%" y="245" width="1.9274%" height="15" fill="rgb(238,131,9)" fg:x="1032" fg:w="164"/><text x="12.3783%" y="255.50">l..</text></g><g><title>decision-tree`DYLD-STUB$$memcpy (4 samples, 0.05%)</title><rect x="16.1006%" y="293" width="0.0470%" height="15" fill="rgb(211,50,8)" fg:x="1370" fg:w="4"/><text x="16.3506%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="16.1476%" y="213" width="0.0118%" height="15" fill="rgb(245,182,24)" fg:x="1374" fg:w="1"/><text x="16.3976%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.01%)</title><rect x="16.1476%" y="197" width="0.0118%" height="15" fill="rgb(242,14,37)" fg:x="1374" fg:w="1"/><text x="16.3976%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="16.1476%" y="181" width="0.0118%" height="15" fill="rgb(246,228,12)" fg:x="1374" fg:w="1"/><text x="16.3976%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.02%)</title><rect x="16.1476%" y="229" width="0.0235%" height="15" fill="rgb(213,55,15)" fg:x="1374" fg:w="2"/><text x="16.3976%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="16.1594%" y="213" width="0.0118%" height="15" fill="rgb(209,9,3)" fg:x="1375" fg:w="1"/><text x="16.4094%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (1 samples, 0.01%)</title><rect x="16.1711%" y="229" width="0.0118%" height="15" fill="rgb(230,59,30)" fg:x="1376" fg:w="1"/><text x="16.4211%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.02%)</title><rect x="16.1829%" y="213" width="0.0235%" height="15" fill="rgb(209,121,21)" fg:x="1377" fg:w="2"/><text x="16.4329%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`large_try_realloc_in_place (1 samples, 0.01%)</title><rect x="16.2064%" y="213" width="0.0118%" height="15" fill="rgb(220,109,13)" fg:x="1379" fg:w="1"/><text x="16.4564%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (1 samples, 0.01%)</title><rect x="16.2064%" y="197" width="0.0118%" height="15" fill="rgb(232,18,1)" fg:x="1379" fg:w="1"/><text x="16.4564%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (1 samples, 0.01%)</title><rect x="16.2064%" y="181" width="0.0118%" height="15" fill="rgb(215,41,42)" fg:x="1379" fg:w="1"/><text x="16.4564%" y="191.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (25 samples, 0.29%)</title><rect x="16.1476%" y="293" width="0.2938%" height="15" fill="rgb(224,123,36)" fg:x="1374" fg:w="25"/><text x="16.3976%" y="303.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (25 samples, 0.29%)</title><rect x="16.1476%" y="277" width="0.2938%" height="15" fill="rgb(240,125,3)" fg:x="1374" fg:w="25"/><text x="16.3976%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (25 samples, 0.29%)</title><rect x="16.1476%" y="261" width="0.2938%" height="15" fill="rgb(205,98,50)" fg:x="1374" fg:w="25"/><text x="16.3976%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (25 samples, 0.29%)</title><rect x="16.1476%" y="245" width="0.2938%" height="15" fill="rgb(205,185,37)" fg:x="1374" fg:w="25"/><text x="16.3976%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (22 samples, 0.26%)</title><rect x="16.1829%" y="229" width="0.2585%" height="15" fill="rgb(238,207,15)" fg:x="1377" fg:w="22"/><text x="16.4329%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (19 samples, 0.22%)</title><rect x="16.2181%" y="213" width="0.2233%" height="15" fill="rgb(213,199,42)" fg:x="1380" fg:w="19"/><text x="16.4681%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`large_entry_for_pointer_no_lock (1 samples, 0.01%)</title><rect x="16.4414%" y="261" width="0.0118%" height="15" fill="rgb(235,201,11)" fg:x="1399" fg:w="1"/><text x="16.6914%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`madvise (6 samples, 0.07%)</title><rect x="16.4649%" y="229" width="0.0705%" height="15" fill="rgb(207,46,11)" fg:x="1401" fg:w="6"/><text x="16.7149%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (42 samples, 0.49%)</title><rect x="16.5354%" y="229" width="0.4936%" height="15" fill="rgb(241,35,35)" fg:x="1407" fg:w="42"/><text x="16.7854%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (42 samples, 0.49%)</title><rect x="16.5354%" y="213" width="0.4936%" height="15" fill="rgb(243,32,47)" fg:x="1407" fg:w="42"/><text x="16.7854%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`large_try_realloc_in_place (13 samples, 0.15%)</title><rect x="17.0290%" y="229" width="0.1528%" height="15" fill="rgb(247,202,23)" fg:x="1449" fg:w="13"/><text x="17.2790%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (13 samples, 0.15%)</title><rect x="17.0290%" y="213" width="0.1528%" height="15" fill="rgb(219,102,11)" fg:x="1449" fg:w="13"/><text x="17.2790%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (13 samples, 0.15%)</title><rect x="17.0290%" y="197" width="0.1528%" height="15" fill="rgb(243,110,44)" fg:x="1449" fg:w="13"/><text x="17.2790%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="17.1818%" y="229" width="0.0235%" height="15" fill="rgb(222,74,54)" fg:x="1462" fg:w="2"/><text x="17.4318%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`large_malloc (2 samples, 0.02%)</title><rect x="17.1818%" y="213" width="0.0235%" height="15" fill="rgb(216,99,12)" fg:x="1462" fg:w="2"/><text x="17.4318%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`mvm_allocate_pages (1 samples, 0.01%)</title><rect x="17.1936%" y="197" width="0.0118%" height="15" fill="rgb(226,22,26)" fg:x="1463" fg:w="1"/><text x="17.4436%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (387 samples, 4.55%)</title><rect x="16.4532%" y="261" width="4.5481%" height="15" fill="rgb(217,163,10)" fg:x="1400" fg:w="387"/><text x="16.7032%" y="271.50">libsy..</text></g><g><title>libsystem_malloc.dylib`szone_realloc (387 samples, 4.55%)</title><rect x="16.4532%" y="245" width="4.5481%" height="15" fill="rgb(213,25,53)" fg:x="1400" fg:w="387"/><text x="16.7032%" y="255.50">libsy..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (323 samples, 3.80%)</title><rect x="17.2053%" y="229" width="3.7960%" height="15" fill="rgb(252,105,26)" fg:x="1464" fg:w="323"/><text x="17.4553%" y="239.50">libs..</text></g><g><title>libsystem_malloc.dylib`realloc (389 samples, 4.57%)</title><rect x="16.4414%" y="277" width="4.5716%" height="15" fill="rgb(220,39,43)" fg:x="1399" fg:w="389"/><text x="16.6914%" y="287.50">libsy..</text></g><g><title>libsystem_malloc.dylib`szone_size_try_large (1 samples, 0.01%)</title><rect x="21.0013%" y="261" width="0.0118%" height="15" fill="rgb(229,68,48)" fg:x="1787" fg:w="1"/><text x="21.2513%" y="271.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (390 samples, 4.58%)</title><rect x="16.4414%" y="293" width="4.5834%" height="15" fill="rgb(252,8,32)" fg:x="1399" fg:w="390"/><text x="16.6914%" y="303.50">decis..</text></g><g><title>libsystem_malloc.dylib`szone_size_try_large (1 samples, 0.01%)</title><rect x="21.0130%" y="277" width="0.0118%" height="15" fill="rgb(223,20,43)" fg:x="1788" fg:w="1"/><text x="21.2630%" y="287.50"></text></g><g><title>decision-tree`DYLD-STUB$$memcpy (7 samples, 0.08%)</title><rect x="23.3988%" y="277" width="0.0823%" height="15" fill="rgb(229,81,49)" fg:x="1991" fg:w="7"/><text x="23.6488%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="23.4810%" y="197" width="0.0118%" height="15" fill="rgb(236,28,36)" fg:x="1998" fg:w="1"/><text x="23.7310%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`large_try_realloc_in_place (3 samples, 0.04%)</title><rect x="23.4928%" y="197" width="0.0353%" height="15" fill="rgb(249,185,26)" fg:x="1999" fg:w="3"/><text x="23.7428%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (3 samples, 0.04%)</title><rect x="23.4928%" y="181" width="0.0353%" height="15" fill="rgb(249,174,33)" fg:x="1999" fg:w="3"/><text x="23.7428%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (3 samples, 0.04%)</title><rect x="23.4928%" y="165" width="0.0353%" height="15" fill="rgb(233,201,37)" fg:x="1999" fg:w="3"/><text x="23.7428%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (19 samples, 0.22%)</title><rect x="23.4810%" y="229" width="0.2233%" height="15" fill="rgb(221,78,26)" fg:x="1998" fg:w="19"/><text x="23.7310%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (19 samples, 0.22%)</title><rect x="23.4810%" y="213" width="0.2233%" height="15" fill="rgb(250,127,30)" fg:x="1998" fg:w="19"/><text x="23.7310%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.18%)</title><rect x="23.5280%" y="197" width="0.1763%" height="15" fill="rgb(230,49,44)" fg:x="2002" fg:w="15"/><text x="23.7780%" y="207.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (20 samples, 0.24%)</title><rect x="23.4810%" y="277" width="0.2350%" height="15" fill="rgb(229,67,23)" fg:x="1998" fg:w="20"/><text x="23.7310%" y="287.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (20 samples, 0.24%)</title><rect x="23.4810%" y="261" width="0.2350%" height="15" fill="rgb(249,83,47)" fg:x="1998" fg:w="20"/><text x="23.7310%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`realloc (20 samples, 0.24%)</title><rect x="23.4810%" y="245" width="0.2350%" height="15" fill="rgb(215,43,3)" fg:x="1998" fg:w="20"/><text x="23.7310%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="23.7043%" y="229" width="0.0118%" height="15" fill="rgb(238,154,13)" fg:x="2017" fg:w="1"/><text x="23.9543%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.01%)</title><rect x="23.7043%" y="213" width="0.0118%" height="15" fill="rgb(219,56,2)" fg:x="2017" fg:w="1"/><text x="23.9543%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="23.7161%" y="261" width="0.0118%" height="15" fill="rgb(233,0,4)" fg:x="2018" fg:w="1"/><text x="23.9661%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="23.7278%" y="261" width="0.0118%" height="15" fill="rgb(235,30,7)" fg:x="2019" fg:w="1"/><text x="23.9778%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="23.7396%" y="229" width="0.0118%" height="15" fill="rgb(250,79,13)" fg:x="2020" fg:w="1"/><text x="23.9896%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="23.7396%" y="213" width="0.0118%" height="15" fill="rgb(211,146,34)" fg:x="2020" fg:w="1"/><text x="23.9896%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="23.7396%" y="197" width="0.0118%" height="15" fill="rgb(228,22,38)" fg:x="2020" fg:w="1"/><text x="23.9896%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (1 samples, 0.01%)</title><rect x="23.7513%" y="229" width="0.0118%" height="15" fill="rgb(235,168,5)" fg:x="2021" fg:w="1"/><text x="24.0013%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (7 samples, 0.08%)</title><rect x="23.7748%" y="213" width="0.0823%" height="15" fill="rgb(221,155,16)" fg:x="2023" fg:w="7"/><text x="24.0248%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (27 samples, 0.32%)</title><rect x="23.8571%" y="213" width="0.3173%" height="15" fill="rgb(215,215,53)" fg:x="2030" fg:w="27"/><text x="24.1071%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (27 samples, 0.32%)</title><rect x="23.8571%" y="197" width="0.3173%" height="15" fill="rgb(223,4,10)" fg:x="2030" fg:w="27"/><text x="24.1071%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_large (3 samples, 0.04%)</title><rect x="24.1744%" y="213" width="0.0353%" height="15" fill="rgb(234,103,6)" fg:x="2057" fg:w="3"/><text x="24.4244%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (1 samples, 0.01%)</title><rect x="24.1979%" y="197" width="0.0118%" height="15" fill="rgb(227,97,0)" fg:x="2059" fg:w="1"/><text x="24.4479%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.01%)</title><rect x="24.1979%" y="181" width="0.0118%" height="15" fill="rgb(234,150,53)" fg:x="2059" fg:w="1"/><text x="24.4479%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="24.2097%" y="213" width="0.0118%" height="15" fill="rgb(228,201,54)" fg:x="2060" fg:w="1"/><text x="24.4597%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="24.2097%" y="197" width="0.0118%" height="15" fill="rgb(222,22,37)" fg:x="2060" fg:w="1"/><text x="24.4597%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`large_entry_for_pointer_no_lock (1 samples, 0.01%)</title><rect x="24.2214%" y="213" width="0.0118%" height="15" fill="rgb(237,53,32)" fg:x="2061" fg:w="1"/><text x="24.4714%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`large_try_realloc_in_place (9 samples, 0.11%)</title><rect x="24.2332%" y="213" width="0.1058%" height="15" fill="rgb(233,25,53)" fg:x="2062" fg:w="9"/><text x="24.4832%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (9 samples, 0.11%)</title><rect x="24.2332%" y="197" width="0.1058%" height="15" fill="rgb(210,40,34)" fg:x="2062" fg:w="9"/><text x="24.4832%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (9 samples, 0.11%)</title><rect x="24.2332%" y="181" width="0.1058%" height="15" fill="rgb(241,220,44)" fg:x="2062" fg:w="9"/><text x="24.4832%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`large_malloc (1 samples, 0.01%)</title><rect x="24.3389%" y="197" width="0.0118%" height="15" fill="rgb(235,28,35)" fg:x="2071" fg:w="1"/><text x="24.5889%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`mvm_allocate_pages (1 samples, 0.01%)</title><rect x="24.3389%" y="181" width="0.0118%" height="15" fill="rgb(210,56,17)" fg:x="2071" fg:w="1"/><text x="24.5889%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (1 samples, 0.01%)</title><rect x="24.3389%" y="165" width="0.0118%" height="15" fill="rgb(224,130,29)" fg:x="2071" fg:w="1"/><text x="24.5889%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.04%)</title><rect x="24.3389%" y="213" width="0.0353%" height="15" fill="rgb(235,212,8)" fg:x="2071" fg:w="3"/><text x="24.5889%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.02%)</title><rect x="24.3507%" y="197" width="0.0235%" height="15" fill="rgb(223,33,50)" fg:x="2072" fg:w="2"/><text x="24.6007%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (2 samples, 0.02%)</title><rect x="24.3507%" y="181" width="0.0235%" height="15" fill="rgb(219,149,13)" fg:x="2072" fg:w="2"/><text x="24.6007%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (2 samples, 0.02%)</title><rect x="24.3507%" y="165" width="0.0235%" height="15" fill="rgb(250,156,29)" fg:x="2072" fg:w="2"/><text x="24.6007%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (1 samples, 0.01%)</title><rect x="24.3742%" y="213" width="0.0118%" height="15" fill="rgb(216,193,19)" fg:x="2074" fg:w="1"/><text x="24.6242%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="24.3742%" y="197" width="0.0118%" height="15" fill="rgb(216,135,14)" fg:x="2074" fg:w="1"/><text x="24.6242%" y="207.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (509 samples, 5.98%)</title><rect x="23.7161%" y="277" width="5.9819%" height="15" fill="rgb(241,47,5)" fg:x="2018" fg:w="509"/><text x="23.9661%" y="287.50">decision..</text></g><g><title>libsystem_malloc.dylib`realloc (507 samples, 5.96%)</title><rect x="23.7396%" y="261" width="5.9584%" height="15" fill="rgb(233,42,35)" fg:x="2020" fg:w="507"/><text x="23.9896%" y="271.50">libsyste..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (507 samples, 5.96%)</title><rect x="23.7396%" y="245" width="5.9584%" height="15" fill="rgb(231,13,6)" fg:x="2020" fg:w="507"/><text x="23.9896%" y="255.50">libsyste..</text></g><g><title>libsystem_malloc.dylib`szone_realloc (505 samples, 5.93%)</title><rect x="23.7631%" y="229" width="5.9349%" height="15" fill="rgb(207,181,40)" fg:x="2022" fg:w="505"/><text x="24.0131%" y="239.50">libsyste..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (452 samples, 5.31%)</title><rect x="24.3859%" y="213" width="5.3120%" height="15" fill="rgb(254,173,49)" fg:x="2075" fg:w="452"/><text x="24.6359%" y="223.50">libsyst..</text></g><g><title>decision-tree`DYLD-STUB$$memcpy (2 samples, 0.02%)</title><rect x="32.1424%" y="261" width="0.0235%" height="15" fill="rgb(221,1,38)" fg:x="2735" fg:w="2"/><text x="32.3924%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="32.1659%" y="197" width="0.0118%" height="15" fill="rgb(206,124,46)" fg:x="2737" fg:w="1"/><text x="32.4159%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="32.1659%" y="181" width="0.0118%" height="15" fill="rgb(249,21,11)" fg:x="2737" fg:w="1"/><text x="32.4159%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.01%)</title><rect x="32.1659%" y="165" width="0.0118%" height="15" fill="rgb(222,201,40)" fg:x="2737" fg:w="1"/><text x="32.4159%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="32.1659%" y="149" width="0.0118%" height="15" fill="rgb(235,61,29)" fg:x="2737" fg:w="1"/><text x="32.4159%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`large_try_realloc_in_place (5 samples, 0.06%)</title><rect x="32.1777%" y="181" width="0.0588%" height="15" fill="rgb(219,207,3)" fg:x="2738" fg:w="5"/><text x="32.4277%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (5 samples, 0.06%)</title><rect x="32.1777%" y="165" width="0.0588%" height="15" fill="rgb(222,56,46)" fg:x="2738" fg:w="5"/><text x="32.4277%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (5 samples, 0.06%)</title><rect x="32.1777%" y="149" width="0.0588%" height="15" fill="rgb(239,76,54)" fg:x="2738" fg:w="5"/><text x="32.4277%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (1 samples, 0.01%)</title><rect x="32.2365%" y="181" width="0.0118%" height="15" fill="rgb(231,124,27)" fg:x="2743" fg:w="1"/><text x="32.4865%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`large_malloc (1 samples, 0.01%)</title><rect x="32.2482%" y="165" width="0.0118%" height="15" fill="rgb(249,195,6)" fg:x="2744" fg:w="1"/><text x="32.4982%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="32.2482%" y="181" width="0.0235%" height="15" fill="rgb(237,174,47)" fg:x="2744" fg:w="2"/><text x="32.4982%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.01%)</title><rect x="32.2600%" y="165" width="0.0118%" height="15" fill="rgb(206,201,31)" fg:x="2745" fg:w="1"/><text x="32.5100%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.01%)</title><rect x="32.2600%" y="149" width="0.0118%" height="15" fill="rgb(231,57,52)" fg:x="2745" fg:w="1"/><text x="32.5100%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (28 samples, 0.33%)</title><rect x="32.1659%" y="213" width="0.3291%" height="15" fill="rgb(248,177,22)" fg:x="2737" fg:w="28"/><text x="32.4159%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (27 samples, 0.32%)</title><rect x="32.1777%" y="197" width="0.3173%" height="15" fill="rgb(215,211,37)" fg:x="2738" fg:w="27"/><text x="32.4277%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (19 samples, 0.22%)</title><rect x="32.2717%" y="181" width="0.2233%" height="15" fill="rgb(241,128,51)" fg:x="2746" fg:w="19"/><text x="32.5217%" y="191.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (29 samples, 0.34%)</title><rect x="32.1659%" y="261" width="0.3408%" height="15" fill="rgb(227,165,31)" fg:x="2737" fg:w="29"/><text x="32.4159%" y="271.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (29 samples, 0.34%)</title><rect x="32.1659%" y="245" width="0.3408%" height="15" fill="rgb(228,167,24)" fg:x="2737" fg:w="29"/><text x="32.4159%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (29 samples, 0.34%)</title><rect x="32.1659%" y="229" width="0.3408%" height="15" fill="rgb(228,143,12)" fg:x="2737" fg:w="29"/><text x="32.4159%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.01%)</title><rect x="32.4950%" y="213" width="0.0118%" height="15" fill="rgb(249,149,8)" fg:x="2765" fg:w="1"/><text x="32.7450%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="32.5185%" y="245" width="0.0118%" height="15" fill="rgb(243,35,44)" fg:x="2767" fg:w="1"/><text x="32.7685%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="32.5185%" y="229" width="0.0118%" height="15" fill="rgb(246,89,9)" fg:x="2767" fg:w="1"/><text x="32.7685%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.01%)</title><rect x="32.5185%" y="213" width="0.0118%" height="15" fill="rgb(233,213,13)" fg:x="2767" fg:w="1"/><text x="32.7685%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="32.5185%" y="197" width="0.0118%" height="15" fill="rgb(233,141,41)" fg:x="2767" fg:w="1"/><text x="32.7685%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.01%)</title><rect x="32.5303%" y="245" width="0.0118%" height="15" fill="rgb(239,167,4)" fg:x="2768" fg:w="1"/><text x="32.7803%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (1 samples, 0.01%)</title><rect x="32.5538%" y="229" width="0.0118%" height="15" fill="rgb(209,217,16)" fg:x="2770" fg:w="1"/><text x="32.8038%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="32.5655%" y="213" width="0.0118%" height="15" fill="rgb(219,88,35)" fg:x="2771" fg:w="1"/><text x="32.8155%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (3 samples, 0.04%)</title><rect x="32.5773%" y="213" width="0.0353%" height="15" fill="rgb(220,193,23)" fg:x="2772" fg:w="3"/><text x="32.8273%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.04%)</title><rect x="32.5773%" y="197" width="0.0353%" height="15" fill="rgb(230,90,52)" fg:x="2772" fg:w="3"/><text x="32.8273%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.04%)</title><rect x="32.5773%" y="181" width="0.0353%" height="15" fill="rgb(252,106,19)" fg:x="2772" fg:w="3"/><text x="32.8273%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (3 samples, 0.04%)</title><rect x="32.6125%" y="213" width="0.0353%" height="15" fill="rgb(206,74,20)" fg:x="2775" fg:w="3"/><text x="32.8625%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (16 samples, 0.19%)</title><rect x="32.6478%" y="197" width="0.1880%" height="15" fill="rgb(230,138,44)" fg:x="2778" fg:w="16"/><text x="32.8978%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (9 samples, 0.11%)</title><rect x="32.8358%" y="197" width="0.1058%" height="15" fill="rgb(235,182,43)" fg:x="2794" fg:w="9"/><text x="33.0858%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (9 samples, 0.11%)</title><rect x="32.8358%" y="181" width="0.1058%" height="15" fill="rgb(242,16,51)" fg:x="2794" fg:w="9"/><text x="33.0858%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_large (1 samples, 0.01%)</title><rect x="32.9416%" y="197" width="0.0118%" height="15" fill="rgb(248,9,4)" fg:x="2803" fg:w="1"/><text x="33.1916%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`large_entry_for_pointer_no_lock (3 samples, 0.04%)</title><rect x="32.9533%" y="197" width="0.0353%" height="15" fill="rgb(210,31,22)" fg:x="2804" fg:w="3"/><text x="33.2033%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (7 samples, 0.08%)</title><rect x="32.9886%" y="165" width="0.0823%" height="15" fill="rgb(239,54,39)" fg:x="2807" fg:w="7"/><text x="33.2386%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`large_try_realloc_in_place (8 samples, 0.09%)</title><rect x="32.9886%" y="197" width="0.0940%" height="15" fill="rgb(230,99,41)" fg:x="2807" fg:w="8"/><text x="33.2386%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (8 samples, 0.09%)</title><rect x="32.9886%" y="181" width="0.0940%" height="15" fill="rgb(253,106,12)" fg:x="2807" fg:w="8"/><text x="33.2386%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`mach_vm_allocate (1 samples, 0.01%)</title><rect x="33.0709%" y="165" width="0.0118%" height="15" fill="rgb(213,46,41)" fg:x="2814" fg:w="1"/><text x="33.3209%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`large_malloc (4 samples, 0.05%)</title><rect x="33.0826%" y="181" width="0.0470%" height="15" fill="rgb(215,133,35)" fg:x="2815" fg:w="4"/><text x="33.3326%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.06%)</title><rect x="33.0826%" y="197" width="0.0588%" height="15" fill="rgb(213,28,5)" fg:x="2815" fg:w="5"/><text x="33.3326%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="33.1296%" y="181" width="0.0118%" height="15" fill="rgb(215,77,49)" fg:x="2819" fg:w="1"/><text x="33.3796%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="33.1296%" y="165" width="0.0118%" height="15" fill="rgb(248,100,22)" fg:x="2819" fg:w="1"/><text x="33.3796%" y="175.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (359 samples, 4.22%)</title><rect x="32.5068%" y="261" width="4.2191%" height="15" fill="rgb(208,67,9)" fg:x="2766" fg:w="359"/><text x="32.7568%" y="271.50">decis..</text></g><g><title>libsystem_malloc.dylib`realloc (356 samples, 4.18%)</title><rect x="32.5420%" y="245" width="4.1838%" height="15" fill="rgb(219,133,21)" fg:x="2769" fg:w="356"/><text x="32.7920%" y="255.50">libsy..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (354 samples, 4.16%)</title><rect x="32.5655%" y="229" width="4.1603%" height="15" fill="rgb(246,46,29)" fg:x="2771" fg:w="354"/><text x="32.8155%" y="239.50">libsy..</text></g><g><title>libsystem_malloc.dylib`szone_realloc (347 samples, 4.08%)</title><rect x="32.6478%" y="213" width="4.0780%" height="15" fill="rgb(246,185,52)" fg:x="2778" fg:w="347"/><text x="32.8978%" y="223.50">libs..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (305 samples, 3.58%)</title><rect x="33.1414%" y="197" width="3.5844%" height="15" fill="rgb(252,136,11)" fg:x="2820" fg:w="305"/><text x="33.3914%" y="207.50">libs..</text></g><g><title>decision-tree`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="38.9823%" y="245" width="0.0118%" height="15" fill="rgb(219,138,53)" fg:x="3317" fg:w="1"/><text x="39.2323%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (1 samples, 0.01%)</title><rect x="38.9940%" y="181" width="0.0118%" height="15" fill="rgb(211,51,23)" fg:x="3318" fg:w="1"/><text x="39.2440%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`large_try_realloc_in_place (1 samples, 0.01%)</title><rect x="39.0058%" y="165" width="0.0118%" height="15" fill="rgb(247,221,28)" fg:x="3319" fg:w="1"/><text x="39.2558%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (1 samples, 0.01%)</title><rect x="39.0058%" y="149" width="0.0118%" height="15" fill="rgb(251,222,45)" fg:x="3319" fg:w="1"/><text x="39.2558%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (1 samples, 0.01%)</title><rect x="39.0058%" y="133" width="0.0118%" height="15" fill="rgb(217,162,53)" fg:x="3319" fg:w="1"/><text x="39.2558%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`large_malloc (1 samples, 0.01%)</title><rect x="39.0175%" y="149" width="0.0118%" height="15" fill="rgb(229,93,14)" fg:x="3320" fg:w="1"/><text x="39.2675%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`mvm_allocate_pages (1 samples, 0.01%)</title><rect x="39.0175%" y="133" width="0.0118%" height="15" fill="rgb(209,67,49)" fg:x="3320" fg:w="1"/><text x="39.2675%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (1 samples, 0.01%)</title><rect x="39.0175%" y="117" width="0.0118%" height="15" fill="rgb(213,87,29)" fg:x="3320" fg:w="1"/><text x="39.2675%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.04%)</title><rect x="39.0175%" y="165" width="0.0353%" height="15" fill="rgb(205,151,52)" fg:x="3320" fg:w="3"/><text x="39.2675%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.02%)</title><rect x="39.0293%" y="149" width="0.0235%" height="15" fill="rgb(253,215,39)" fg:x="3321" fg:w="2"/><text x="39.2793%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.01%)</title><rect x="39.0410%" y="133" width="0.0118%" height="15" fill="rgb(221,220,41)" fg:x="3322" fg:w="1"/><text x="39.2910%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (22 samples, 0.26%)</title><rect x="38.9940%" y="197" width="0.2585%" height="15" fill="rgb(218,133,21)" fg:x="3318" fg:w="22"/><text x="39.2440%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (21 samples, 0.25%)</title><rect x="39.0058%" y="181" width="0.2468%" height="15" fill="rgb(221,193,43)" fg:x="3319" fg:w="21"/><text x="39.2558%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.20%)</title><rect x="39.0528%" y="165" width="0.1998%" height="15" fill="rgb(240,128,52)" fg:x="3323" fg:w="17"/><text x="39.3028%" y="175.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (23 samples, 0.27%)</title><rect x="38.9940%" y="245" width="0.2703%" height="15" fill="rgb(253,114,12)" fg:x="3318" fg:w="23"/><text x="39.2440%" y="255.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (23 samples, 0.27%)</title><rect x="38.9940%" y="229" width="0.2703%" height="15" fill="rgb(215,223,47)" fg:x="3318" fg:w="23"/><text x="39.2440%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (23 samples, 0.27%)</title><rect x="38.9940%" y="213" width="0.2703%" height="15" fill="rgb(248,225,23)" fg:x="3318" fg:w="23"/><text x="39.2440%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="39.2526%" y="197" width="0.0118%" height="15" fill="rgb(250,108,0)" fg:x="3340" fg:w="1"/><text x="39.5026%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="39.2878%" y="181" width="0.0118%" height="15" fill="rgb(228,208,7)" fg:x="3343" fg:w="1"/><text x="39.5378%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.01%)</title><rect x="39.2878%" y="165" width="0.0118%" height="15" fill="rgb(244,45,10)" fg:x="3343" fg:w="1"/><text x="39.5378%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (3 samples, 0.04%)</title><rect x="39.2761%" y="197" width="0.0353%" height="15" fill="rgb(207,125,25)" fg:x="3342" fg:w="3"/><text x="39.5261%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="39.2996%" y="181" width="0.0118%" height="15" fill="rgb(210,195,18)" fg:x="3344" fg:w="1"/><text x="39.5496%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="39.2996%" y="165" width="0.0118%" height="15" fill="rgb(249,80,12)" fg:x="3344" fg:w="1"/><text x="39.5496%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="39.2996%" y="149" width="0.0118%" height="15" fill="rgb(221,65,9)" fg:x="3344" fg:w="1"/><text x="39.5496%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (1 samples, 0.01%)</title><rect x="39.3113%" y="197" width="0.0118%" height="15" fill="rgb(235,49,36)" fg:x="3345" fg:w="1"/><text x="39.5613%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (6 samples, 0.07%)</title><rect x="39.3466%" y="181" width="0.0705%" height="15" fill="rgb(225,32,20)" fg:x="3348" fg:w="6"/><text x="39.5966%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_large (1 samples, 0.01%)</title><rect x="39.4171%" y="181" width="0.0118%" height="15" fill="rgb(215,141,46)" fg:x="3354" fg:w="1"/><text x="39.6671%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.01%)</title><rect x="39.4288%" y="181" width="0.0118%" height="15" fill="rgb(250,160,47)" fg:x="3355" fg:w="1"/><text x="39.6788%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="39.4288%" y="165" width="0.0118%" height="15" fill="rgb(216,222,40)" fg:x="3355" fg:w="1"/><text x="39.6788%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`large_try_realloc_in_place (7 samples, 0.08%)</title><rect x="39.4406%" y="181" width="0.0823%" height="15" fill="rgb(234,217,39)" fg:x="3356" fg:w="7"/><text x="39.6906%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (7 samples, 0.08%)</title><rect x="39.4406%" y="165" width="0.0823%" height="15" fill="rgb(207,178,40)" fg:x="3356" fg:w="7"/><text x="39.6906%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (7 samples, 0.08%)</title><rect x="39.4406%" y="149" width="0.0823%" height="15" fill="rgb(221,136,13)" fg:x="3356" fg:w="7"/><text x="39.6906%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (1 samples, 0.01%)</title><rect x="39.5229%" y="181" width="0.0118%" height="15" fill="rgb(249,199,10)" fg:x="3363" fg:w="1"/><text x="39.7729%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="39.5346%" y="181" width="0.0235%" height="15" fill="rgb(249,222,13)" fg:x="3364" fg:w="2"/><text x="39.7846%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.02%)</title><rect x="39.5346%" y="165" width="0.0235%" height="15" fill="rgb(244,185,38)" fg:x="3364" fg:w="2"/><text x="39.7846%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.01%)</title><rect x="39.5464%" y="149" width="0.0118%" height="15" fill="rgb(236,202,9)" fg:x="3365" fg:w="1"/><text x="39.7964%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (248 samples, 2.91%)</title><rect x="39.2761%" y="213" width="2.9146%" height="15" fill="rgb(250,229,37)" fg:x="3342" fg:w="248"/><text x="39.5261%" y="223.50">li..</text></g><g><title>libsystem_malloc.dylib`szone_realloc (244 samples, 2.87%)</title><rect x="39.3231%" y="197" width="2.8676%" height="15" fill="rgb(206,174,23)" fg:x="3346" fg:w="244"/><text x="39.5731%" y="207.50">li..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (224 samples, 2.63%)</title><rect x="39.5581%" y="181" width="2.6325%" height="15" fill="rgb(211,33,43)" fg:x="3366" fg:w="224"/><text x="39.8081%" y="191.50">li..</text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (250 samples, 2.94%)</title><rect x="39.2643%" y="245" width="2.9381%" height="15" fill="rgb(245,58,50)" fg:x="3341" fg:w="250"/><text x="39.5143%" y="255.50">de..</text></g><g><title>libsystem_malloc.dylib`realloc (249 samples, 2.93%)</title><rect x="39.2761%" y="229" width="2.9263%" height="15" fill="rgb(244,68,36)" fg:x="3342" fg:w="249"/><text x="39.5261%" y="239.50">li..</text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="42.1906%" y="213" width="0.0118%" height="15" fill="rgb(232,229,15)" fg:x="3590" fg:w="1"/><text x="42.4406%" y="223.50"></text></g><g><title>decision-tree`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="42.2024%" y="245" width="0.0235%" height="15" fill="rgb(254,30,23)" fg:x="3591" fg:w="2"/><text x="42.4524%" y="255.50"></text></g><g><title>decision-tree`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="43.7537%" y="229" width="0.0118%" height="15" fill="rgb(235,160,14)" fg:x="3723" fg:w="1"/><text x="44.0037%" y="239.50"></text></g><g><title>decision-tree`DYLD-STUB$$memcpy (4 samples, 0.05%)</title><rect x="43.7654%" y="229" width="0.0470%" height="15" fill="rgb(212,155,44)" fg:x="3724" fg:w="4"/><text x="44.0154%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="43.8124%" y="165" width="0.0118%" height="15" fill="rgb(226,2,50)" fg:x="3728" fg:w="1"/><text x="44.0624%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="43.8242%" y="149" width="0.0118%" height="15" fill="rgb(234,177,6)" fg:x="3729" fg:w="1"/><text x="44.0742%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="43.8242%" y="133" width="0.0118%" height="15" fill="rgb(217,24,9)" fg:x="3729" fg:w="1"/><text x="44.0742%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (9 samples, 0.11%)</title><rect x="43.8124%" y="181" width="0.1058%" height="15" fill="rgb(220,13,46)" fg:x="3728" fg:w="9"/><text x="44.0624%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (8 samples, 0.09%)</title><rect x="43.8242%" y="165" width="0.0940%" height="15" fill="rgb(239,221,27)" fg:x="3729" fg:w="8"/><text x="44.0742%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.08%)</title><rect x="43.8359%" y="149" width="0.0823%" height="15" fill="rgb(222,198,25)" fg:x="3730" fg:w="7"/><text x="44.0859%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="43.9182%" y="181" width="0.0118%" height="15" fill="rgb(211,99,13)" fg:x="3737" fg:w="1"/><text x="44.1682%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_size (1 samples, 0.01%)</title><rect x="43.9300%" y="181" width="0.0118%" height="15" fill="rgb(232,111,31)" fg:x="3738" fg:w="1"/><text x="44.1800%" y="191.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.14%)</title><rect x="43.8124%" y="229" width="0.1410%" height="15" fill="rgb(245,82,37)" fg:x="3728" fg:w="12"/><text x="44.0624%" y="239.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (12 samples, 0.14%)</title><rect x="43.8124%" y="213" width="0.1410%" height="15" fill="rgb(227,149,46)" fg:x="3728" fg:w="12"/><text x="44.0624%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (12 samples, 0.14%)</title><rect x="43.8124%" y="197" width="0.1410%" height="15" fill="rgb(218,36,50)" fg:x="3728" fg:w="12"/><text x="44.0624%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="43.9417%" y="181" width="0.0118%" height="15" fill="rgb(226,80,48)" fg:x="3739" fg:w="1"/><text x="44.1917%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.01%)</title><rect x="43.9417%" y="165" width="0.0118%" height="15" fill="rgb(238,224,15)" fg:x="3739" fg:w="1"/><text x="44.1917%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="43.9535%" y="165" width="0.0118%" height="15" fill="rgb(241,136,10)" fg:x="3740" fg:w="1"/><text x="44.2035%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.01%)</title><rect x="43.9535%" y="149" width="0.0118%" height="15" fill="rgb(208,32,45)" fg:x="3740" fg:w="1"/><text x="44.2035%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="43.9652%" y="165" width="0.0118%" height="15" fill="rgb(207,135,9)" fg:x="3741" fg:w="1"/><text x="44.2152%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="43.9770%" y="165" width="0.0235%" height="15" fill="rgb(206,86,44)" fg:x="3742" fg:w="2"/><text x="44.2270%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.02%)</title><rect x="43.9770%" y="149" width="0.0235%" height="15" fill="rgb(245,177,15)" fg:x="3742" fg:w="2"/><text x="44.2270%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="43.9887%" y="133" width="0.0118%" height="15" fill="rgb(206,64,50)" fg:x="3743" fg:w="1"/><text x="44.2387%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (5 samples, 0.06%)</title><rect x="43.9535%" y="181" width="0.0588%" height="15" fill="rgb(234,36,40)" fg:x="3740" fg:w="5"/><text x="44.2035%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="44.0005%" y="165" width="0.0118%" height="15" fill="rgb(213,64,8)" fg:x="3744" fg:w="1"/><text x="44.2505%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (2 samples, 0.02%)</title><rect x="44.0122%" y="181" width="0.0235%" height="15" fill="rgb(210,75,36)" fg:x="3745" fg:w="2"/><text x="44.2622%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (4 samples, 0.05%)</title><rect x="44.0357%" y="165" width="0.0470%" height="15" fill="rgb(229,88,21)" fg:x="3747" fg:w="4"/><text x="44.2857%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_large (3 samples, 0.04%)</title><rect x="44.0827%" y="165" width="0.0353%" height="15" fill="rgb(252,204,47)" fg:x="3751" fg:w="3"/><text x="44.3327%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`large_entry_free_no_lock (1 samples, 0.01%)</title><rect x="44.1062%" y="149" width="0.0118%" height="15" fill="rgb(208,77,27)" fg:x="3753" fg:w="1"/><text x="44.3562%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.01%)</title><rect x="44.1180%" y="165" width="0.0118%" height="15" fill="rgb(221,76,26)" fg:x="3754" fg:w="1"/><text x="44.3680%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="44.1297%" y="165" width="0.0118%" height="15" fill="rgb(225,139,18)" fg:x="3755" fg:w="1"/><text x="44.3797%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`large_entry_for_pointer_no_lock (1 samples, 0.01%)</title><rect x="44.1415%" y="165" width="0.0118%" height="15" fill="rgb(230,137,11)" fg:x="3756" fg:w="1"/><text x="44.3915%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (5 samples, 0.06%)</title><rect x="44.1532%" y="133" width="0.0588%" height="15" fill="rgb(212,28,1)" fg:x="3757" fg:w="5"/><text x="44.4032%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`large_try_realloc_in_place (6 samples, 0.07%)</title><rect x="44.1532%" y="165" width="0.0705%" height="15" fill="rgb(248,164,17)" fg:x="3757" fg:w="6"/><text x="44.4032%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (6 samples, 0.07%)</title><rect x="44.1532%" y="149" width="0.0705%" height="15" fill="rgb(222,171,42)" fg:x="3757" fg:w="6"/><text x="44.4032%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`mach_vm_allocate (1 samples, 0.01%)</title><rect x="44.2120%" y="133" width="0.0118%" height="15" fill="rgb(243,84,45)" fg:x="3762" fg:w="1"/><text x="44.4620%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (2 samples, 0.02%)</title><rect x="44.2238%" y="165" width="0.0235%" height="15" fill="rgb(252,49,23)" fg:x="3763" fg:w="2"/><text x="44.4738%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (2 samples, 0.02%)</title><rect x="44.2238%" y="149" width="0.0235%" height="15" fill="rgb(215,19,7)" fg:x="3763" fg:w="2"/><text x="44.4738%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`large_malloc (3 samples, 0.04%)</title><rect x="44.2473%" y="149" width="0.0353%" height="15" fill="rgb(238,81,41)" fg:x="3765" fg:w="3"/><text x="44.4973%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`mvm_allocate_pages (2 samples, 0.02%)</title><rect x="44.2590%" y="133" width="0.0235%" height="15" fill="rgb(210,199,37)" fg:x="3766" fg:w="2"/><text x="44.5090%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (2 samples, 0.02%)</title><rect x="44.2590%" y="117" width="0.0235%" height="15" fill="rgb(244,192,49)" fg:x="3766" fg:w="2"/><text x="44.5090%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.06%)</title><rect x="44.2473%" y="165" width="0.0588%" height="15" fill="rgb(226,211,11)" fg:x="3765" fg:w="5"/><text x="44.4973%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.02%)</title><rect x="44.2825%" y="149" width="0.0235%" height="15" fill="rgb(236,162,54)" fg:x="3768" fg:w="2"/><text x="44.5325%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.01%)</title><rect x="44.2943%" y="133" width="0.0118%" height="15" fill="rgb(220,229,9)" fg:x="3769" fg:w="1"/><text x="44.5443%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="44.2943%" y="117" width="0.0118%" height="15" fill="rgb(250,87,22)" fg:x="3769" fg:w="1"/><text x="44.5443%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (1 samples, 0.01%)</title><rect x="44.3060%" y="165" width="0.0118%" height="15" fill="rgb(239,43,17)" fg:x="3770" fg:w="1"/><text x="44.5560%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (173 samples, 2.03%)</title><rect x="43.9535%" y="197" width="2.0331%" height="15" fill="rgb(231,177,25)" fg:x="3740" fg:w="173"/><text x="44.2035%" y="207.50">l..</text></g><g><title>libsystem_malloc.dylib`szone_realloc (166 samples, 1.95%)</title><rect x="44.0357%" y="181" width="1.9509%" height="15" fill="rgb(219,179,1)" fg:x="3747" fg:w="166"/><text x="44.2857%" y="191.50">l..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (142 samples, 1.67%)</title><rect x="44.3178%" y="165" width="1.6688%" height="15" fill="rgb(238,219,53)" fg:x="3771" fg:w="142"/><text x="44.5678%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="45.9866%" y="197" width="0.0118%" height="15" fill="rgb(232,167,36)" fg:x="3913" fg:w="1"/><text x="46.2366%" y="207.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (175 samples, 2.06%)</title><rect x="43.9535%" y="229" width="2.0566%" height="15" fill="rgb(244,19,51)" fg:x="3740" fg:w="175"/><text x="44.2035%" y="239.50">d..</text></g><g><title>libsystem_malloc.dylib`realloc (175 samples, 2.06%)</title><rect x="43.9535%" y="213" width="2.0566%" height="15" fill="rgb(224,6,22)" fg:x="3740" fg:w="175"/><text x="44.2035%" y="223.50">l..</text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="45.9984%" y="197" width="0.0118%" height="15" fill="rgb(224,145,5)" fg:x="3914" fg:w="1"/><text x="46.2484%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.01%)</title><rect x="45.9984%" y="181" width="0.0118%" height="15" fill="rgb(234,130,49)" fg:x="3914" fg:w="1"/><text x="46.2484%" y="191.50"></text></g><g><title>decision-tree`DYLD-STUB$$memcpy (2 samples, 0.02%)</title><rect x="47.2088%" y="213" width="0.0235%" height="15" fill="rgb(254,6,2)" fg:x="4017" fg:w="2"/><text x="47.4588%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="47.2323%" y="181" width="0.0118%" height="15" fill="rgb(208,96,46)" fg:x="4019" fg:w="1"/><text x="47.4823%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="47.2558%" y="149" width="0.0118%" height="15" fill="rgb(239,3,39)" fg:x="4021" fg:w="1"/><text x="47.5058%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="47.2676%" y="149" width="0.0118%" height="15" fill="rgb(233,210,1)" fg:x="4022" fg:w="1"/><text x="47.5176%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="47.2676%" y="133" width="0.0118%" height="15" fill="rgb(244,137,37)" fg:x="4022" fg:w="1"/><text x="47.5176%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.01%)</title><rect x="47.2676%" y="117" width="0.0118%" height="15" fill="rgb(240,136,2)" fg:x="4022" fg:w="1"/><text x="47.5176%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`large_try_realloc_in_place (1 samples, 0.01%)</title><rect x="47.2794%" y="133" width="0.0118%" height="15" fill="rgb(239,18,37)" fg:x="4023" fg:w="1"/><text x="47.5294%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (1 samples, 0.01%)</title><rect x="47.2794%" y="117" width="0.0118%" height="15" fill="rgb(218,185,22)" fg:x="4023" fg:w="1"/><text x="47.5294%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (1 samples, 0.01%)</title><rect x="47.2794%" y="101" width="0.0118%" height="15" fill="rgb(225,218,4)" fg:x="4023" fg:w="1"/><text x="47.5294%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="47.2911%" y="133" width="0.0118%" height="15" fill="rgb(230,182,32)" fg:x="4024" fg:w="1"/><text x="47.5411%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.01%)</title><rect x="47.2911%" y="117" width="0.0118%" height="15" fill="rgb(242,56,43)" fg:x="4024" fg:w="1"/><text x="47.5411%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.01%)</title><rect x="47.2911%" y="101" width="0.0118%" height="15" fill="rgb(233,99,24)" fg:x="4024" fg:w="1"/><text x="47.5411%" y="111.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.14%)</title><rect x="47.2323%" y="213" width="0.1410%" height="15" fill="rgb(234,209,42)" fg:x="4019" fg:w="12"/><text x="47.4823%" y="223.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (12 samples, 0.14%)</title><rect x="47.2323%" y="197" width="0.1410%" height="15" fill="rgb(227,7,12)" fg:x="4019" fg:w="12"/><text x="47.4823%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (11 samples, 0.13%)</title><rect x="47.2441%" y="181" width="0.1293%" height="15" fill="rgb(245,203,43)" fg:x="4020" fg:w="11"/><text x="47.4941%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (10 samples, 0.12%)</title><rect x="47.2558%" y="165" width="0.1175%" height="15" fill="rgb(238,205,33)" fg:x="4021" fg:w="10"/><text x="47.5058%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (8 samples, 0.09%)</title><rect x="47.2794%" y="149" width="0.0940%" height="15" fill="rgb(231,56,7)" fg:x="4023" fg:w="8"/><text x="47.5294%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.07%)</title><rect x="47.3029%" y="133" width="0.0705%" height="15" fill="rgb(244,186,29)" fg:x="4025" fg:w="6"/><text x="47.5529%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="47.4086%" y="149" width="0.0118%" height="15" fill="rgb(234,111,31)" fg:x="4034" fg:w="1"/><text x="47.6586%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.02%)</title><rect x="47.4086%" y="165" width="0.0235%" height="15" fill="rgb(241,149,10)" fg:x="4034" fg:w="2"/><text x="47.6586%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="47.4204%" y="149" width="0.0118%" height="15" fill="rgb(249,206,44)" fg:x="4035" fg:w="1"/><text x="47.6704%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="47.4204%" y="133" width="0.0118%" height="15" fill="rgb(251,153,30)" fg:x="4035" fg:w="1"/><text x="47.6704%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="47.4204%" y="117" width="0.0118%" height="15" fill="rgb(239,152,38)" fg:x="4035" fg:w="1"/><text x="47.6704%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`madvise (4 samples, 0.05%)</title><rect x="47.4321%" y="149" width="0.0470%" height="15" fill="rgb(249,139,47)" fg:x="4036" fg:w="4"/><text x="47.6821%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="47.4791%" y="149" width="0.0118%" height="15" fill="rgb(244,64,35)" fg:x="4040" fg:w="1"/><text x="47.7291%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`large_try_realloc_in_place (4 samples, 0.05%)</title><rect x="47.4909%" y="149" width="0.0470%" height="15" fill="rgb(216,46,15)" fg:x="4041" fg:w="4"/><text x="47.7409%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (4 samples, 0.05%)</title><rect x="47.4909%" y="133" width="0.0470%" height="15" fill="rgb(250,74,19)" fg:x="4041" fg:w="4"/><text x="47.7409%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (4 samples, 0.05%)</title><rect x="47.4909%" y="117" width="0.0470%" height="15" fill="rgb(249,42,33)" fg:x="4041" fg:w="4"/><text x="47.7409%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.01%)</title><rect x="47.5379%" y="133" width="0.0118%" height="15" fill="rgb(242,149,17)" fg:x="4045" fg:w="1"/><text x="47.7879%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (2 samples, 0.02%)</title><rect x="47.5379%" y="149" width="0.0235%" height="15" fill="rgb(244,29,21)" fg:x="4045" fg:w="2"/><text x="47.7879%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (1 samples, 0.01%)</title><rect x="47.5497%" y="133" width="0.0118%" height="15" fill="rgb(220,130,37)" fg:x="4046" fg:w="1"/><text x="47.7997%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`large_malloc (1 samples, 0.01%)</title><rect x="47.5614%" y="133" width="0.0118%" height="15" fill="rgb(211,67,2)" fg:x="4047" fg:w="1"/><text x="47.8114%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="47.5614%" y="149" width="0.0235%" height="15" fill="rgb(235,68,52)" fg:x="4047" fg:w="2"/><text x="47.8114%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.01%)</title><rect x="47.5732%" y="133" width="0.0118%" height="15" fill="rgb(246,142,3)" fg:x="4048" fg:w="1"/><text x="47.8232%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (2 samples, 0.02%)</title><rect x="47.5849%" y="149" width="0.0235%" height="15" fill="rgb(241,25,7)" fg:x="4049" fg:w="2"/><text x="47.8349%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="47.5967%" y="133" width="0.0118%" height="15" fill="rgb(242,119,39)" fg:x="4050" fg:w="1"/><text x="47.8467%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (115 samples, 1.35%)</title><rect x="47.3969%" y="181" width="1.3515%" height="15" fill="rgb(241,98,45)" fg:x="4033" fg:w="115"/><text x="47.6469%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (112 samples, 1.32%)</title><rect x="47.4321%" y="165" width="1.3163%" height="15" fill="rgb(254,28,30)" fg:x="4036" fg:w="112"/><text x="47.6821%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (97 samples, 1.14%)</title><rect x="47.6084%" y="149" width="1.1400%" height="15" fill="rgb(241,142,54)" fg:x="4051" fg:w="97"/><text x="47.8584%" y="159.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (118 samples, 1.39%)</title><rect x="47.3734%" y="213" width="1.3868%" height="15" fill="rgb(222,85,15)" fg:x="4031" fg:w="118"/><text x="47.6234%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (118 samples, 1.39%)</title><rect x="47.3734%" y="197" width="1.3868%" height="15" fill="rgb(210,85,47)" fg:x="4031" fg:w="118"/><text x="47.6234%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size_try_large (1 samples, 0.01%)</title><rect x="48.7484%" y="181" width="0.0118%" height="15" fill="rgb(224,206,25)" fg:x="4148" fg:w="1"/><text x="48.9984%" y="191.50"></text></g><g><title>decision-tree`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="48.7601%" y="213" width="0.0235%" height="15" fill="rgb(243,201,19)" fg:x="4149" fg:w="2"/><text x="49.0101%" y="223.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="49.1715%" y="197" width="0.0118%" height="15" fill="rgb(236,59,4)" fg:x="4184" fg:w="1"/><text x="49.4215%" y="207.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="49.1715%" y="181" width="0.0118%" height="15" fill="rgb(254,179,45)" fg:x="4184" fg:w="1"/><text x="49.4215%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.02%)</title><rect x="49.2185%" y="133" width="0.0235%" height="15" fill="rgb(226,14,10)" fg:x="4188" fg:w="2"/><text x="49.4685%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (1 samples, 0.01%)</title><rect x="49.2420%" y="101" width="0.0118%" height="15" fill="rgb(244,27,41)" fg:x="4190" fg:w="1"/><text x="49.4920%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`large_try_realloc_in_place (2 samples, 0.02%)</title><rect x="49.2420%" y="133" width="0.0235%" height="15" fill="rgb(235,35,32)" fg:x="4190" fg:w="2"/><text x="49.4920%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (2 samples, 0.02%)</title><rect x="49.2420%" y="117" width="0.0235%" height="15" fill="rgb(218,68,31)" fg:x="4190" fg:w="2"/><text x="49.4920%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`mach_vm_allocate (1 samples, 0.01%)</title><rect x="49.2537%" y="101" width="0.0118%" height="15" fill="rgb(207,120,37)" fg:x="4191" fg:w="1"/><text x="49.5037%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="49.2655%" y="133" width="0.0235%" height="15" fill="rgb(227,98,0)" fg:x="4192" fg:w="2"/><text x="49.5155%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.02%)</title><rect x="49.2655%" y="117" width="0.0235%" height="15" fill="rgb(207,7,3)" fg:x="4192" fg:w="2"/><text x="49.5155%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.01%)</title><rect x="49.2772%" y="101" width="0.0118%" height="15" fill="rgb(206,98,19)" fg:x="4193" fg:w="1"/><text x="49.5272%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="49.2772%" y="85" width="0.0118%" height="15" fill="rgb(217,5,26)" fg:x="4193" fg:w="1"/><text x="49.5272%" y="95.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (41 samples, 0.48%)</title><rect x="49.1832%" y="197" width="0.4818%" height="15" fill="rgb(235,190,38)" fg:x="4185" fg:w="41"/><text x="49.4332%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (40 samples, 0.47%)</title><rect x="49.1950%" y="181" width="0.4701%" height="15" fill="rgb(247,86,24)" fg:x="4186" fg:w="40"/><text x="49.4450%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (40 samples, 0.47%)</title><rect x="49.1950%" y="165" width="0.4701%" height="15" fill="rgb(205,101,16)" fg:x="4186" fg:w="40"/><text x="49.4450%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (39 samples, 0.46%)</title><rect x="49.2067%" y="149" width="0.4583%" height="15" fill="rgb(246,168,33)" fg:x="4187" fg:w="39"/><text x="49.4567%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (32 samples, 0.38%)</title><rect x="49.2890%" y="133" width="0.3761%" height="15" fill="rgb(231,114,1)" fg:x="4194" fg:w="32"/><text x="49.5390%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (1 samples, 0.01%)</title><rect x="49.8531%" y="101" width="0.0118%" height="15" fill="rgb(207,184,53)" fg:x="4242" fg:w="1"/><text x="50.1031%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.02%)</title><rect x="49.8531%" y="133" width="0.0235%" height="15" fill="rgb(224,95,51)" fg:x="4242" fg:w="2"/><text x="50.1031%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.02%)</title><rect x="49.8531%" y="117" width="0.0235%" height="15" fill="rgb(212,188,45)" fg:x="4242" fg:w="2"/><text x="50.1031%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="49.8648%" y="101" width="0.0118%" height="15" fill="rgb(223,154,38)" fg:x="4243" fg:w="1"/><text x="50.1148%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.01%)</title><rect x="49.8648%" y="85" width="0.0118%" height="15" fill="rgb(251,22,52)" fg:x="4243" fg:w="1"/><text x="50.1148%" y="95.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.04%)</title><rect x="49.8531%" y="181" width="0.0353%" height="15" fill="rgb(229,209,22)" fg:x="4242" fg:w="3"/><text x="50.1031%" y="191.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="49.8531%" y="165" width="0.0353%" height="15" fill="rgb(234,138,34)" fg:x="4242" fg:w="3"/><text x="50.1031%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`realloc (3 samples, 0.04%)</title><rect x="49.8531%" y="149" width="0.0353%" height="15" fill="rgb(212,95,11)" fg:x="4242" fg:w="3"/><text x="50.1031%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="49.8766%" y="133" width="0.0118%" height="15" fill="rgb(240,179,47)" fg:x="4244" fg:w="1"/><text x="50.1266%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.02%)</title><rect x="49.9119%" y="117" width="0.0235%" height="15" fill="rgb(240,163,11)" fg:x="4247" fg:w="2"/><text x="50.1619%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`large_try_realloc_in_place (2 samples, 0.02%)</title><rect x="49.9354%" y="117" width="0.0235%" height="15" fill="rgb(236,37,12)" fg:x="4249" fg:w="2"/><text x="50.1854%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`vm_allocate (2 samples, 0.02%)</title><rect x="49.9354%" y="101" width="0.0235%" height="15" fill="rgb(232,164,16)" fg:x="4249" fg:w="2"/><text x="50.1854%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_allocate_trap (2 samples, 0.02%)</title><rect x="49.9354%" y="85" width="0.0235%" height="15" fill="rgb(244,205,15)" fg:x="4249" fg:w="2"/><text x="50.1854%" y="95.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (19 samples, 0.22%)</title><rect x="49.8884%" y="181" width="0.2233%" height="15" fill="rgb(223,117,47)" fg:x="4245" fg:w="19"/><text x="50.1384%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (19 samples, 0.22%)</title><rect x="49.8884%" y="165" width="0.2233%" height="15" fill="rgb(244,107,35)" fg:x="4245" fg:w="19"/><text x="50.1384%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (18 samples, 0.21%)</title><rect x="49.9001%" y="149" width="0.2115%" height="15" fill="rgb(205,140,8)" fg:x="4246" fg:w="18"/><text x="50.1501%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (18 samples, 0.21%)</title><rect x="49.9001%" y="133" width="0.2115%" height="15" fill="rgb(228,84,46)" fg:x="4246" fg:w="18"/><text x="50.1501%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.15%)</title><rect x="49.9589%" y="117" width="0.1528%" height="15" fill="rgb(254,188,9)" fg:x="4251" fg:w="13"/><text x="50.2089%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="50.1469%" y="101" width="0.0118%" height="15" fill="rgb(206,112,54)" fg:x="4267" fg:w="1"/><text x="50.3969%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.01%)</title><rect x="50.1469%" y="85" width="0.0118%" height="15" fill="rgb(216,84,49)" fg:x="4267" fg:w="1"/><text x="50.3969%" y="95.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="50.1469%" y="165" width="0.0235%" height="15" fill="rgb(214,194,35)" fg:x="4267" fg:w="2"/><text x="50.3969%" y="175.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="50.1469%" y="149" width="0.0235%" height="15" fill="rgb(249,28,3)" fg:x="4267" fg:w="2"/><text x="50.3969%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.02%)</title><rect x="50.1469%" y="133" width="0.0235%" height="15" fill="rgb(222,56,52)" fg:x="4267" fg:w="2"/><text x="50.3969%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.02%)</title><rect x="50.1469%" y="117" width="0.0235%" height="15" fill="rgb(245,217,50)" fg:x="4267" fg:w="2"/><text x="50.3969%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.01%)</title><rect x="50.1587%" y="101" width="0.0118%" height="15" fill="rgb(213,201,24)" fg:x="4268" fg:w="1"/><text x="50.4087%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="50.1587%" y="85" width="0.0118%" height="15" fill="rgb(248,116,28)" fg:x="4268" fg:w="1"/><text x="50.4087%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.01%)</title><rect x="50.1587%" y="69" width="0.0118%" height="15" fill="rgb(219,72,43)" fg:x="4268" fg:w="1"/><text x="50.4087%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.01%)</title><rect x="50.1587%" y="53" width="0.0118%" height="15" fill="rgb(209,138,14)" fg:x="4268" fg:w="1"/><text x="50.4087%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.01%)</title><rect x="50.1587%" y="37" width="0.0118%" height="15" fill="rgb(222,18,33)" fg:x="4268" fg:w="1"/><text x="50.4087%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="50.1704%" y="149" width="0.0118%" height="15" fill="rgb(213,199,7)" fg:x="4269" fg:w="1"/><text x="50.4204%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="50.1822%" y="117" width="0.0118%" height="15" fill="rgb(250,110,10)" fg:x="4270" fg:w="1"/><text x="50.4322%" y="127.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (4 samples, 0.05%)</title><rect x="50.1704%" y="165" width="0.0470%" height="15" fill="rgb(248,123,6)" fg:x="4269" fg:w="4"/><text x="50.4204%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`realloc (3 samples, 0.04%)</title><rect x="50.1822%" y="149" width="0.0353%" height="15" fill="rgb(206,91,31)" fg:x="4270" fg:w="3"/><text x="50.4322%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (3 samples, 0.04%)</title><rect x="50.1822%" y="133" width="0.0353%" height="15" fill="rgb(211,154,13)" fg:x="4270" fg:w="3"/><text x="50.4322%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.02%)</title><rect x="50.1939%" y="117" width="0.0235%" height="15" fill="rgb(225,148,7)" fg:x="4271" fg:w="2"/><text x="50.4439%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="50.1939%" y="101" width="0.0235%" height="15" fill="rgb(220,160,43)" fg:x="4271" fg:w="2"/><text x="50.4439%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="50.2409%" y="85" width="0.0118%" height="15" fill="rgb(213,52,39)" fg:x="4275" fg:w="1"/><text x="50.4909%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.01%)</title><rect x="50.2409%" y="69" width="0.0118%" height="15" fill="rgb(243,137,7)" fg:x="4275" fg:w="1"/><text x="50.4909%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.01%)</title><rect x="50.2409%" y="53" width="0.0118%" height="15" fill="rgb(230,79,13)" fg:x="4275" fg:w="1"/><text x="50.4909%" y="63.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="50.2292%" y="149" width="0.0353%" height="15" fill="rgb(247,105,23)" fg:x="4274" fg:w="3"/><text x="50.4792%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.02%)</title><rect x="50.2409%" y="133" width="0.0235%" height="15" fill="rgb(223,179,41)" fg:x="4275" fg:w="2"/><text x="50.4909%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.02%)</title><rect x="50.2409%" y="117" width="0.0235%" height="15" fill="rgb(218,9,34)" fg:x="4275" fg:w="2"/><text x="50.4909%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.02%)</title><rect x="50.2409%" y="101" width="0.0235%" height="15" fill="rgb(222,106,8)" fg:x="4275" fg:w="2"/><text x="50.4909%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.01%)</title><rect x="50.2527%" y="85" width="0.0118%" height="15" fill="rgb(211,220,0)" fg:x="4276" fg:w="1"/><text x="50.5027%" y="95.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (6 samples, 0.07%)</title><rect x="50.2174%" y="165" width="0.0705%" height="15" fill="rgb(229,52,16)" fg:x="4273" fg:w="6"/><text x="50.4674%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="50.2644%" y="149" width="0.0235%" height="15" fill="rgb(212,155,18)" fg:x="4277" fg:w="2"/><text x="50.5144%" y="159.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (22 samples, 0.26%)</title><rect x="50.1116%" y="181" width="0.2585%" height="15" fill="rgb(242,21,14)" fg:x="4264" fg:w="22"/><text x="50.3616%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.08%)</title><rect x="50.2879%" y="165" width="0.0823%" height="15" fill="rgb(222,19,48)" fg:x="4279" fg:w="7"/><text x="50.5379%" y="175.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (1 samples, 0.01%)</title><rect x="50.3702%" y="181" width="0.0118%" height="15" fill="rgb(232,45,27)" fg:x="4286" fg:w="1"/><text x="50.6202%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="50.3819%" y="181" width="0.0118%" height="15" fill="rgb(249,103,42)" fg:x="4287" fg:w="1"/><text x="50.6319%" y="191.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (78 samples, 0.92%)</title><rect x="49.6651%" y="197" width="0.9167%" height="15" fill="rgb(246,81,33)" fg:x="4226" fg:w="78"/><text x="49.9151%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (16 samples, 0.19%)</title><rect x="50.3937%" y="181" width="0.1880%" height="15" fill="rgb(252,33,42)" fg:x="4288" fg:w="16"/><text x="50.6437%" y="191.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (1 samples, 0.01%)</title><rect x="50.5817%" y="197" width="0.0118%" height="15" fill="rgb(209,212,41)" fg:x="4304" fg:w="1"/><text x="50.8317%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="50.5935%" y="197" width="0.0118%" height="15" fill="rgb(207,154,6)" fg:x="4305" fg:w="1"/><text x="50.8435%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="50.6052%" y="197" width="0.0118%" height="15" fill="rgb(223,64,47)" fg:x="4306" fg:w="1"/><text x="50.8552%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_large (3 samples, 0.04%)</title><rect x="50.6170%" y="197" width="0.0353%" height="15" fill="rgb(211,161,38)" fg:x="4307" fg:w="3"/><text x="50.8670%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (3 samples, 0.04%)</title><rect x="50.6170%" y="181" width="0.0353%" height="15" fill="rgb(219,138,40)" fg:x="4307" fg:w="3"/><text x="50.8670%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (3 samples, 0.04%)</title><rect x="50.6170%" y="165" width="0.0353%" height="15" fill="rgb(241,228,46)" fg:x="4307" fg:w="3"/><text x="50.8670%" y="175.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.01%)</title><rect x="50.6523%" y="197" width="0.0118%" height="15" fill="rgb(223,209,38)" fg:x="4310" fg:w="1"/><text x="50.9023%" y="207.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (194 samples, 2.28%)</title><rect x="48.7836%" y="213" width="2.2799%" height="15" fill="rgb(236,164,45)" fg:x="4151" fg:w="194"/><text x="49.0336%" y="223.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (34 samples, 0.40%)</title><rect x="50.6640%" y="197" width="0.3996%" height="15" fill="rgb(231,15,5)" fg:x="4311" fg:w="34"/><text x="50.9140%" y="207.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (26 samples, 0.31%)</title><rect x="51.0636%" y="213" width="0.3056%" height="15" fill="rgb(252,35,15)" fg:x="4345" fg:w="26"/><text x="51.3136%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="51.3574%" y="197" width="0.0118%" height="15" fill="rgb(248,181,18)" fg:x="4370" fg:w="1"/><text x="51.6074%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="51.3574%" y="181" width="0.0118%" height="15" fill="rgb(233,39,42)" fg:x="4370" fg:w="1"/><text x="51.6074%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (11 samples, 0.13%)</title><rect x="51.3691%" y="213" width="0.1293%" height="15" fill="rgb(238,110,33)" fg:x="4371" fg:w="11"/><text x="51.6191%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_large (7 samples, 0.08%)</title><rect x="51.4984%" y="213" width="0.0823%" height="15" fill="rgb(233,195,10)" fg:x="4382" fg:w="7"/><text x="51.7484%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (5 samples, 0.06%)</title><rect x="51.5219%" y="197" width="0.0588%" height="15" fill="rgb(254,105,3)" fg:x="4384" fg:w="5"/><text x="51.7719%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (5 samples, 0.06%)</title><rect x="51.5219%" y="181" width="0.0588%" height="15" fill="rgb(221,225,9)" fg:x="4384" fg:w="5"/><text x="51.7719%" y="191.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.01%)</title><rect x="51.5807%" y="213" width="0.0118%" height="15" fill="rgb(224,227,45)" fg:x="4389" fg:w="1"/><text x="51.8307%" y="223.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (582 samples, 6.84%)</title><rect x="46.0101%" y="229" width="6.8398%" height="15" fill="rgb(229,198,43)" fg:x="3915" fg:w="582"/><text x="46.2601%" y="239.50">decision-..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (107 samples, 1.26%)</title><rect x="51.5924%" y="213" width="1.2575%" height="15" fill="rgb(206,209,35)" fg:x="4390" fg:w="107"/><text x="51.8424%" y="223.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (28 samples, 0.33%)</title><rect x="52.8499%" y="229" width="0.3291%" height="15" fill="rgb(245,195,53)" fg:x="4497" fg:w="28"/><text x="53.0999%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (27 samples, 0.32%)</title><rect x="53.1790%" y="229" width="0.3173%" height="15" fill="rgb(240,92,26)" fg:x="4525" fg:w="27"/><text x="53.4290%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_large (9 samples, 0.11%)</title><rect x="53.4963%" y="229" width="0.1058%" height="15" fill="rgb(207,40,23)" fg:x="4552" fg:w="9"/><text x="53.7463%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (9 samples, 0.11%)</title><rect x="53.4963%" y="213" width="0.1058%" height="15" fill="rgb(223,111,35)" fg:x="4552" fg:w="9"/><text x="53.7463%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (9 samples, 0.11%)</title><rect x="53.4963%" y="197" width="0.1058%" height="15" fill="rgb(229,147,28)" fg:x="4552" fg:w="9"/><text x="53.7463%" y="207.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (2 samples, 0.02%)</title><rect x="53.6021%" y="229" width="0.0235%" height="15" fill="rgb(211,29,28)" fg:x="4561" fg:w="2"/><text x="53.8521%" y="239.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (1,119 samples, 13.15%)</title><rect x="42.2259%" y="245" width="13.1508%" height="15" fill="rgb(228,72,33)" fg:x="3593" fg:w="1119"/><text x="42.4759%" y="255.50">decision-tree`decisi..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (149 samples, 1.75%)</title><rect x="53.6256%" y="229" width="1.7511%" height="15" fill="rgb(205,214,31)" fg:x="4563" fg:w="149"/><text x="53.8756%" y="239.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (69 samples, 0.81%)</title><rect x="55.3767%" y="245" width="0.8109%" height="15" fill="rgb(224,111,15)" fg:x="4712" fg:w="69"/><text x="55.6267%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="56.1758%" y="229" width="0.0118%" height="15" fill="rgb(253,21,26)" fg:x="4780" fg:w="1"/><text x="56.4258%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="56.1758%" y="213" width="0.0118%" height="15" fill="rgb(245,139,43)" fg:x="4780" fg:w="1"/><text x="56.4258%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (46 samples, 0.54%)</title><rect x="56.1876%" y="245" width="0.5406%" height="15" fill="rgb(252,170,7)" fg:x="4781" fg:w="46"/><text x="56.4376%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_large (8 samples, 0.09%)</title><rect x="56.7282%" y="245" width="0.0940%" height="15" fill="rgb(231,118,14)" fg:x="4827" fg:w="8"/><text x="56.9782%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (8 samples, 0.09%)</title><rect x="56.7282%" y="229" width="0.0940%" height="15" fill="rgb(238,83,0)" fg:x="4827" fg:w="8"/><text x="56.9782%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (8 samples, 0.09%)</title><rect x="56.7282%" y="213" width="0.0940%" height="15" fill="rgb(221,39,39)" fg:x="4827" fg:w="8"/><text x="56.9782%" y="223.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (7 samples, 0.08%)</title><rect x="56.8222%" y="245" width="0.0823%" height="15" fill="rgb(222,119,46)" fg:x="4835" fg:w="7"/><text x="57.0722%" y="255.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (1,919 samples, 22.55%)</title><rect x="36.7258%" y="261" width="22.5526%" height="15" fill="rgb(222,165,49)" fg:x="3125" fg:w="1919"/><text x="36.9758%" y="271.50">decision-tree`decision_tree::dtree::..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (202 samples, 2.37%)</title><rect x="56.9045%" y="245" width="2.3740%" height="15" fill="rgb(219,113,52)" fg:x="4842" fg:w="202"/><text x="57.1545%" y="255.50">li..</text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (70 samples, 0.82%)</title><rect x="59.2784%" y="261" width="0.8227%" height="15" fill="rgb(214,7,15)" fg:x="5044" fg:w="70"/><text x="59.5284%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`madvise (84 samples, 0.99%)</title><rect x="60.1011%" y="261" width="0.9872%" height="15" fill="rgb(235,32,4)" fg:x="5114" fg:w="84"/><text x="60.3511%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`large_entry_free_no_lock (1 samples, 0.01%)</title><rect x="61.0883%" y="245" width="0.0118%" height="15" fill="rgb(238,90,54)" fg:x="5198" fg:w="1"/><text x="61.3383%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_large (9 samples, 0.11%)</title><rect x="61.0883%" y="261" width="0.1058%" height="15" fill="rgb(213,208,19)" fg:x="5198" fg:w="9"/><text x="61.3383%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (8 samples, 0.09%)</title><rect x="61.1000%" y="245" width="0.0940%" height="15" fill="rgb(233,156,4)" fg:x="5199" fg:w="8"/><text x="61.3500%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (8 samples, 0.09%)</title><rect x="61.1000%" y="229" width="0.0940%" height="15" fill="rgb(207,194,5)" fg:x="5199" fg:w="8"/><text x="61.3500%" y="239.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (8 samples, 0.09%)</title><rect x="61.1940%" y="261" width="0.0940%" height="15" fill="rgb(206,111,30)" fg:x="5207" fg:w="8"/><text x="61.4440%" y="271.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (2,956 samples, 34.74%)</title><rect x="29.6980%" y="277" width="34.7397%" height="15" fill="rgb(243,70,54)" fg:x="2527" fg:w="2956"/><text x="29.9480%" y="287.50">decision-tree`decision_tree::dtree::DecisionTreeClassifi..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (268 samples, 3.15%)</title><rect x="61.2880%" y="261" width="3.1496%" height="15" fill="rgb(242,28,8)" fg:x="5215" fg:w="268"/><text x="61.5380%" y="271.50">lib..</text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (85 samples, 1.00%)</title><rect x="64.4377%" y="277" width="0.9989%" height="15" fill="rgb(219,106,18)" fg:x="5483" fg:w="85"/><text x="64.6877%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="65.4248%" y="261" width="0.0118%" height="15" fill="rgb(244,222,10)" fg:x="5567" fg:w="1"/><text x="65.6748%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`madvise (69 samples, 0.81%)</title><rect x="65.4366%" y="277" width="0.8109%" height="15" fill="rgb(236,179,52)" fg:x="5568" fg:w="69"/><text x="65.6866%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="66.2475%" y="261" width="0.0118%" height="15" fill="rgb(213,23,39)" fg:x="5637" fg:w="1"/><text x="66.4975%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.02%)</title><rect x="66.2475%" y="277" width="0.0235%" height="15" fill="rgb(238,48,10)" fg:x="5637" fg:w="2"/><text x="66.4975%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="66.2593%" y="261" width="0.0118%" height="15" fill="rgb(251,196,23)" fg:x="5638" fg:w="1"/><text x="66.5093%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.01%)</title><rect x="66.2593%" y="245" width="0.0118%" height="15" fill="rgb(250,152,24)" fg:x="5638" fg:w="1"/><text x="66.5093%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_large (23 samples, 0.27%)</title><rect x="66.2710%" y="277" width="0.2703%" height="15" fill="rgb(209,150,17)" fg:x="5639" fg:w="23"/><text x="66.5210%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (22 samples, 0.26%)</title><rect x="66.2828%" y="261" width="0.2585%" height="15" fill="rgb(234,202,34)" fg:x="5640" fg:w="22"/><text x="66.5328%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (22 samples, 0.26%)</title><rect x="66.2828%" y="245" width="0.2585%" height="15" fill="rgb(253,148,53)" fg:x="5640" fg:w="22"/><text x="66.5328%" y="255.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (14 samples, 0.16%)</title><rect x="66.5413%" y="277" width="0.1645%" height="15" fill="rgb(218,129,16)" fg:x="5662" fg:w="14"/><text x="66.7913%" y="287.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (4,346 samples, 51.08%)</title><rect x="21.0248%" y="293" width="51.0753%" height="15" fill="rgb(216,85,19)" fg:x="1789" fg:w="4346"/><text x="21.2748%" y="303.50">decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (459 samples, 5.39%)</title><rect x="66.7058%" y="277" width="5.3943%" height="15" fill="rgb(235,228,7)" fg:x="5676" fg:w="459"/><text x="66.9558%" y="287.50">libsyst..</text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (94 samples, 1.10%)</title><rect x="72.1001%" y="293" width="1.1047%" height="15" fill="rgb(245,175,0)" fg:x="6135" fg:w="94"/><text x="72.3501%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`madvise (57 samples, 0.67%)</title><rect x="73.2048%" y="293" width="0.6699%" height="15" fill="rgb(208,168,36)" fg:x="6229" fg:w="57"/><text x="73.4548%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_large (35 samples, 0.41%)</title><rect x="73.8747%" y="293" width="0.4113%" height="15" fill="rgb(246,171,24)" fg:x="6286" fg:w="35"/><text x="74.1247%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (35 samples, 0.41%)</title><rect x="73.8747%" y="277" width="0.4113%" height="15" fill="rgb(215,142,24)" fg:x="6286" fg:w="35"/><text x="74.1247%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (35 samples, 0.41%)</title><rect x="73.8747%" y="261" width="0.4113%" height="15" fill="rgb(250,187,7)" fg:x="6286" fg:w="35"/><text x="74.1247%" y="271.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (12 samples, 0.14%)</title><rect x="74.2861%" y="293" width="0.1410%" height="15" fill="rgb(228,66,33)" fg:x="6321" fg:w="12"/><text x="74.5361%" y="303.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (5,887 samples, 69.19%)</title><rect x="14.0557%" y="309" width="69.1856%" height="15" fill="rgb(234,215,21)" fg:x="1196" fg:w="5887"/><text x="14.3057%" y="319.50">decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (750 samples, 8.81%)</title><rect x="74.4271%" y="293" width="8.8142%" height="15" fill="rgb(222,191,20)" fg:x="6333" fg:w="750"/><text x="74.6771%" y="303.50">libsystem_pl..</text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (107 samples, 1.26%)</title><rect x="83.2413%" y="309" width="1.2575%" height="15" fill="rgb(245,79,54)" fg:x="7083" fg:w="107"/><text x="83.4913%" y="319.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="84.4870%" y="293" width="0.0118%" height="15" fill="rgb(240,10,37)" fg:x="7189" fg:w="1"/><text x="84.7370%" y="303.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="84.4870%" y="277" width="0.0118%" height="15" fill="rgb(214,192,32)" fg:x="7189" fg:w="1"/><text x="84.7370%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="84.4870%" y="261" width="0.0118%" height="15" fill="rgb(209,36,54)" fg:x="7189" fg:w="1"/><text x="84.7370%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="84.4870%" y="245" width="0.0118%" height="15" fill="rgb(220,10,11)" fg:x="7189" fg:w="1"/><text x="84.7370%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.01%)</title><rect x="84.4870%" y="229" width="0.0118%" height="15" fill="rgb(221,106,17)" fg:x="7189" fg:w="1"/><text x="84.7370%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="84.4870%" y="213" width="0.0118%" height="15" fill="rgb(251,142,44)" fg:x="7189" fg:w="1"/><text x="84.7370%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (57 samples, 0.67%)</title><rect x="84.4988%" y="309" width="0.6699%" height="15" fill="rgb(238,13,15)" fg:x="7190" fg:w="57"/><text x="84.7488%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="85.1686%" y="309" width="0.0118%" height="15" fill="rgb(208,107,27)" fg:x="7247" fg:w="1"/><text x="85.4186%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="85.1686%" y="293" width="0.0118%" height="15" fill="rgb(205,136,37)" fg:x="7247" fg:w="1"/><text x="85.4186%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.01%)</title><rect x="85.1686%" y="277" width="0.0118%" height="15" fill="rgb(250,205,27)" fg:x="7247" fg:w="1"/><text x="85.4186%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_large (43 samples, 0.51%)</title><rect x="85.1804%" y="309" width="0.5053%" height="15" fill="rgb(210,80,43)" fg:x="7248" fg:w="43"/><text x="85.4304%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (43 samples, 0.51%)</title><rect x="85.1804%" y="293" width="0.5053%" height="15" fill="rgb(247,160,36)" fg:x="7248" fg:w="43"/><text x="85.4304%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (42 samples, 0.49%)</title><rect x="85.1921%" y="277" width="0.4936%" height="15" fill="rgb(234,13,49)" fg:x="7249" fg:w="42"/><text x="85.4421%" y="287.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (11 samples, 0.13%)</title><rect x="85.6857%" y="309" width="0.1293%" height="15" fill="rgb(234,122,0)" fg:x="7291" fg:w="11"/><text x="85.9357%" y="319.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (7,407 samples, 87.05%)</title><rect x="8.8847%" y="325" width="87.0490%" height="15" fill="rgb(207,146,38)" fg:x="756" fg:w="7407"/><text x="9.1347%" y="335.50">decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (861 samples, 10.12%)</title><rect x="85.8150%" y="309" width="10.1187%" height="15" fill="rgb(207,177,25)" fg:x="7302" fg:w="861"/><text x="86.0650%" y="319.50">libsystem_platf..</text></g><g><title>libsystem_kernel.dylib`madvise (6 samples, 0.07%)</title><rect x="95.9337%" y="325" width="0.0705%" height="15" fill="rgb(211,178,42)" fg:x="8163" fg:w="6"/><text x="96.1837%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (58 samples, 0.68%)</title><rect x="96.4743%" y="309" width="0.6816%" height="15" fill="rgb(230,69,54)" fg:x="8209" fg:w="58"/><text x="96.7243%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.05%)</title><rect x="97.1560%" y="309" width="0.0470%" height="15" fill="rgb(214,135,41)" fg:x="8267" fg:w="4"/><text x="97.4060%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (103 samples, 1.21%)</title><rect x="96.0042%" y="325" width="1.2105%" height="15" fill="rgb(237,67,25)" fg:x="8169" fg:w="103"/><text x="96.2542%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="97.2030%" y="309" width="0.0118%" height="15" fill="rgb(222,189,50)" fg:x="8271" fg:w="1"/><text x="97.4530%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.01%)</title><rect x="97.2030%" y="293" width="0.0118%" height="15" fill="rgb(245,148,34)" fg:x="8271" fg:w="1"/><text x="97.4530%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_large (1 samples, 0.01%)</title><rect x="97.2147%" y="325" width="0.0118%" height="15" fill="rgb(222,29,6)" fg:x="8272" fg:w="1"/><text x="97.4647%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (1 samples, 0.01%)</title><rect x="97.2147%" y="309" width="0.0118%" height="15" fill="rgb(221,189,43)" fg:x="8272" fg:w="1"/><text x="97.4647%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.01%)</title><rect x="97.2147%" y="293" width="0.0118%" height="15" fill="rgb(207,36,27)" fg:x="8272" fg:w="1"/><text x="97.4647%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.08%)</title><rect x="97.3792%" y="293" width="0.0823%" height="15" fill="rgb(217,90,24)" fg:x="8286" fg:w="7"/><text x="97.6292%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (23 samples, 0.27%)</title><rect x="97.2265%" y="325" width="0.2703%" height="15" fill="rgb(224,66,35)" fg:x="8273" fg:w="23"/><text x="97.4765%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.19%)</title><rect x="97.3087%" y="309" width="0.1880%" height="15" fill="rgb(221,13,50)" fg:x="8280" fg:w="16"/><text x="97.5587%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.04%)</title><rect x="97.4615%" y="293" width="0.0353%" height="15" fill="rgb(236,68,49)" fg:x="8293" fg:w="3"/><text x="97.7115%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.01%)</title><rect x="97.4968%" y="325" width="0.0118%" height="15" fill="rgb(229,146,28)" fg:x="8296" fg:w="1"/><text x="97.7468%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (21 samples, 0.25%)</title><rect x="97.5085%" y="325" width="0.2468%" height="15" fill="rgb(225,31,38)" fg:x="8297" fg:w="21"/><text x="97.7585%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (108 samples, 1.27%)</title><rect x="97.7553%" y="325" width="1.2692%" height="15" fill="rgb(250,208,3)" fg:x="8318" fg:w="108"/><text x="98.0053%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (4 samples, 0.05%)</title><rect x="98.9776%" y="309" width="0.0470%" height="15" fill="rgb(246,54,23)" fg:x="8422" fg:w="4"/><text x="99.2276%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`madvise (4 samples, 0.05%)</title><rect x="98.9776%" y="293" width="0.0470%" height="15" fill="rgb(243,76,11)" fg:x="8422" fg:w="4"/><text x="99.2276%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="99.0246%" y="325" width="0.0118%" height="15" fill="rgb(245,21,50)" fg:x="8426" fg:w="1"/><text x="99.2746%" y="335.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (11 samples, 0.13%)</title><rect x="99.0363%" y="325" width="0.1293%" height="15" fill="rgb(228,9,43)" fg:x="8427" fg:w="11"/><text x="99.2863%" y="335.50"></text></g><g><title>decision-tree`decision_tree::main (8,472 samples, 99.57%)</title><rect x="0.0353%" y="341" width="99.5652%" height="15" fill="rgb(208,100,47)" fg:x="3" fg:w="8472"/><text x="0.2853%" y="351.50">decision-tree`decision_tree::main</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (37 samples, 0.43%)</title><rect x="99.1656%" y="325" width="0.4348%" height="15" fill="rgb(232,26,8)" fg:x="8438" fg:w="37"/><text x="99.4156%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`read (12 samples, 0.14%)</title><rect x="99.6004%" y="341" width="0.1410%" height="15" fill="rgb(216,166,38)" fg:x="8475" fg:w="12"/><text x="99.8504%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.02%)</title><rect x="99.7415%" y="341" width="0.0235%" height="15" fill="rgb(251,202,51)" fg:x="8487" fg:w="2"/><text x="99.9915%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="99.7650%" y="341" width="0.0118%" height="15" fill="rgb(254,216,34)" fg:x="8489" fg:w="1"/><text x="100.0150%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.04%)</title><rect x="99.7767%" y="341" width="0.0353%" height="15" fill="rgb(251,32,27)" fg:x="8490" fg:w="3"/><text x="100.0267%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.01%)</title><rect x="99.8120%" y="341" width="0.0118%" height="15" fill="rgb(208,127,28)" fg:x="8493" fg:w="1"/><text x="100.0620%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (1 samples, 0.01%)</title><rect x="99.8237%" y="341" width="0.0118%" height="15" fill="rgb(224,137,22)" fg:x="8494" fg:w="1"/><text x="100.0737%" y="351.50"></text></g><g><title>decision-tree`main (8,496 samples, 99.85%)</title><rect x="0.0000%" y="405" width="99.8472%" height="15" fill="rgb(254,70,32)" fg:x="0" fg:w="8496"/><text x="0.2500%" y="415.50">decision-tree`main</text></g><g><title>decision-tree`std::rt::lang_start_internal (8,496 samples, 99.85%)</title><rect x="0.0000%" y="389" width="99.8472%" height="15" fill="rgb(229,75,37)" fg:x="0" fg:w="8496"/><text x="0.2500%" y="399.50">decision-tree`std::rt::lang_start_internal</text></g><g><title>decision-tree`std::rt::lang_start::_{{closure}} (8,496 samples, 99.85%)</title><rect x="0.0000%" y="373" width="99.8472%" height="15" fill="rgb(252,64,23)" fg:x="0" fg:w="8496"/><text x="0.2500%" y="383.50">decision-tree`std::rt::lang_start::_{{closure}}</text></g><g><title>decision-tree`std::sys_common::backtrace::__rust_begin_short_backtrace (8,496 samples, 99.85%)</title><rect x="0.0000%" y="357" width="99.8472%" height="15" fill="rgb(232,162,48)" fg:x="0" fg:w="8496"/><text x="0.2500%" y="367.50">decision-tree`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.01%)</title><rect x="99.8355%" y="341" width="0.0118%" height="15" fill="rgb(246,160,12)" fg:x="8495" fg:w="1"/><text x="100.0855%" y="351.50"></text></g><g><title>dyld`start (8,498 samples, 99.87%)</title><rect x="0.0000%" y="421" width="99.8707%" height="15" fill="rgb(247,166,0)" fg:x="0" fg:w="8498"/><text x="0.2500%" y="431.50">dyld`start</text></g><g><title>libdyld.dylib`dyld4::LibSystemHelpers::exit (2 samples, 0.02%)</title><rect x="99.8472%" y="405" width="0.0235%" height="15" fill="rgb(249,219,21)" fg:x="8496" fg:w="2"/><text x="100.0972%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__exit (2 samples, 0.02%)</title><rect x="99.8472%" y="389" width="0.0235%" height="15" fill="rgb(205,209,3)" fg:x="8496" fg:w="2"/><text x="100.0972%" y="399.50"></text></g><g><title>all (8,509 samples, 100%)</title><rect x="0.0000%" y="437" width="100.0000%" height="15" fill="rgb(243,44,1)" fg:x="0" fg:w="8509"/><text x="0.2500%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__exit (11 samples, 0.13%)</title><rect x="99.8707%" y="421" width="0.1293%" height="15" fill="rgb(206,159,16)" fg:x="8498" fg:w="11"/><text x="100.1207%" y="431.50"></text></g></svg></svg>