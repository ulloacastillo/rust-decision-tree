<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="758" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="741.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="741.00"> </text><svg id="frames" x="10" width="1180" total_samples="3322"><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="0.0000%" y="581" width="0.0301%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.06%)</title><rect x="0.0301%" y="581" width="0.0602%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="2"/><text x="0.2801%" y="591.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="0.0903%" y="581" width="0.0301%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="1"/><text x="0.3403%" y="591.50"></text></g><g><title>decision-tree`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.06%)</title><rect x="0.1204%" y="581" width="0.0602%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="2"/><text x="0.3704%" y="591.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::collect (1 samples, 0.03%)</title><rect x="0.1806%" y="581" width="0.0301%" height="15" fill="rgb(208,68,35)" fg:x="6" fg:w="1"/><text x="0.4306%" y="591.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::map (1 samples, 0.03%)</title><rect x="0.2107%" y="581" width="0.0301%" height="15" fill="rgb(232,128,0)" fg:x="7" fg:w="1"/><text x="0.4607%" y="591.50"></text></g><g><title>decision-tree`core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.03%)</title><rect x="0.2408%" y="581" width="0.0301%" height="15" fill="rgb(207,160,47)" fg:x="8" fg:w="1"/><text x="0.4908%" y="591.50"></text></g><g><title>decision-tree`&lt;&amp;usize as core::ops::arith::Sub&lt;usize&gt;&gt;::sub (2 samples, 0.06%)</title><rect x="2.2276%" y="565" width="0.0602%" height="15" fill="rgb(228,23,34)" fg:x="74" fg:w="2"/><text x="2.4776%" y="575.50"></text></g><g><title>decision-tree`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="2.2878%" y="565" width="0.0301%" height="15" fill="rgb(218,30,26)" fg:x="76" fg:w="1"/><text x="2.5378%" y="575.50"></text></g><g><title>decision-tree`&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (60 samples, 1.81%)</title><rect x="2.3179%" y="565" width="1.8061%" height="15" fill="rgb(220,122,19)" fg:x="77" fg:w="60"/><text x="2.5679%" y="575.50">d..</text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (47 samples, 1.41%)</title><rect x="2.7092%" y="549" width="1.4148%" height="15" fill="rgb(250,228,42)" fg:x="90" fg:w="47"/><text x="2.9592%" y="559.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.12%)</title><rect x="4.1240%" y="565" width="0.1204%" height="15" fill="rgb(240,193,28)" fg:x="137" fg:w="4"/><text x="4.3740%" y="575.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="4.2444%" y="565" width="0.0301%" height="15" fill="rgb(216,20,37)" fg:x="141" fg:w="1"/><text x="4.4944%" y="575.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (46 samples, 1.38%)</title><rect x="5.0572%" y="549" width="1.3847%" height="15" fill="rgb(206,188,39)" fg:x="168" fg:w="46"/><text x="5.3072%" y="559.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (85 samples, 2.56%)</title><rect x="4.2745%" y="565" width="2.5587%" height="15" fill="rgb(217,207,13)" fg:x="142" fg:w="85"/><text x="4.5245%" y="575.50">de..</text></g><g><title>decision-tree`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (13 samples, 0.39%)</title><rect x="6.4419%" y="549" width="0.3913%" height="15" fill="rgb(231,73,38)" fg:x="214" fg:w="13"/><text x="6.6919%" y="559.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.06%)</title><rect x="6.8332%" y="565" width="0.0602%" height="15" fill="rgb(225,20,46)" fg:x="227" fg:w="2"/><text x="7.0832%" y="575.50"></text></g><g><title>decision-tree`&lt;char as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.03%)</title><rect x="6.8934%" y="565" width="0.0301%" height="15" fill="rgb(210,31,41)" fg:x="229" fg:w="1"/><text x="7.1434%" y="575.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.09%)</title><rect x="6.9235%" y="565" width="0.0903%" height="15" fill="rgb(221,200,47)" fg:x="230" fg:w="3"/><text x="7.1735%" y="575.50"></text></g><g><title>decision-tree`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.12%)</title><rect x="7.0138%" y="565" width="0.1204%" height="15" fill="rgb(226,26,5)" fg:x="233" fg:w="4"/><text x="7.2638%" y="575.50"></text></g><g><title>decision-tree`core::str::converts::from_utf8 (1 samples, 0.03%)</title><rect x="7.1343%" y="533" width="0.0301%" height="15" fill="rgb(249,33,26)" fg:x="237" fg:w="1"/><text x="7.3843%" y="543.50"></text></g><g><title>decision-tree`&lt;std::fs::File as std::io::Read&gt;::read_to_string (8 samples, 0.24%)</title><rect x="7.1343%" y="565" width="0.2408%" height="15" fill="rgb(235,183,28)" fg:x="237" fg:w="8"/><text x="7.3843%" y="575.50"></text></g><g><title>decision-tree`std::io::default_read_to_string (8 samples, 0.24%)</title><rect x="7.1343%" y="549" width="0.2408%" height="15" fill="rgb(221,5,38)" fg:x="237" fg:w="8"/><text x="7.3843%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`read (7 samples, 0.21%)</title><rect x="7.1644%" y="533" width="0.2107%" height="15" fill="rgb(247,18,42)" fg:x="238" fg:w="7"/><text x="7.4144%" y="543.50"></text></g><g><title>decision-tree`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.09%)</title><rect x="7.3751%" y="565" width="0.0903%" height="15" fill="rgb(241,131,45)" fg:x="245" fg:w="3"/><text x="7.6251%" y="575.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.12%)</title><rect x="7.4654%" y="549" width="0.1204%" height="15" fill="rgb(249,31,29)" fg:x="248" fg:w="4"/><text x="7.7154%" y="559.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.06%)</title><rect x="7.6460%" y="501" width="0.0602%" height="15" fill="rgb(225,111,53)" fg:x="254" fg:w="2"/><text x="7.8960%" y="511.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.12%)</title><rect x="7.6159%" y="533" width="0.1204%" height="15" fill="rgb(238,160,17)" fg:x="253" fg:w="4"/><text x="7.8659%" y="543.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.12%)</title><rect x="7.6159%" y="517" width="0.1204%" height="15" fill="rgb(214,148,48)" fg:x="253" fg:w="4"/><text x="7.8659%" y="527.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="7.7062%" y="501" width="0.0301%" height="15" fill="rgb(232,36,49)" fg:x="256" fg:w="1"/><text x="7.9562%" y="511.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="7.7062%" y="485" width="0.0301%" height="15" fill="rgb(209,103,24)" fg:x="256" fg:w="1"/><text x="7.9562%" y="495.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="7.7062%" y="469" width="0.0301%" height="15" fill="rgb(229,88,8)" fg:x="256" fg:w="1"/><text x="7.9562%" y="479.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="7.7062%" y="453" width="0.0301%" height="15" fill="rgb(213,181,19)" fg:x="256" fg:w="1"/><text x="7.9562%" y="463.50"></text></g><g><title>decision-tree`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="7.7062%" y="437" width="0.0301%" height="15" fill="rgb(254,191,54)" fg:x="256" fg:w="1"/><text x="7.9562%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.03%)</title><rect x="7.7062%" y="421" width="0.0301%" height="15" fill="rgb(241,83,37)" fg:x="256" fg:w="1"/><text x="7.9562%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.03%)</title><rect x="7.7062%" y="405" width="0.0301%" height="15" fill="rgb(233,36,39)" fg:x="256" fg:w="1"/><text x="7.9562%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.03%)</title><rect x="7.7062%" y="389" width="0.0301%" height="15" fill="rgb(226,3,54)" fg:x="256" fg:w="1"/><text x="7.9562%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="7.7062%" y="373" width="0.0301%" height="15" fill="rgb(245,192,40)" fg:x="256" fg:w="1"/><text x="7.9562%" y="383.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::append (28 samples, 0.84%)</title><rect x="7.4654%" y="565" width="0.8429%" height="15" fill="rgb(238,167,29)" fg:x="248" fg:w="28"/><text x="7.7154%" y="575.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::append_elements (24 samples, 0.72%)</title><rect x="7.5858%" y="549" width="0.7225%" height="15" fill="rgb(232,182,51)" fg:x="252" fg:w="24"/><text x="7.8358%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (19 samples, 0.57%)</title><rect x="7.7363%" y="533" width="0.5719%" height="15" fill="rgb(231,60,39)" fg:x="257" fg:w="19"/><text x="7.9863%" y="543.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.03%)</title><rect x="8.3082%" y="565" width="0.0301%" height="15" fill="rgb(208,69,12)" fg:x="276" fg:w="1"/><text x="8.5582%" y="575.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="9.4220%" y="533" width="0.0301%" height="15" fill="rgb(235,93,37)" fg:x="313" fg:w="1"/><text x="9.6720%" y="543.50"></text></g><g><title>decision-tree`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.06%)</title><rect x="10.3552%" y="501" width="0.0602%" height="15" fill="rgb(213,116,39)" fg:x="344" fg:w="2"/><text x="10.6052%" y="511.50"></text></g><g><title>decision-tree`&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (2 samples, 0.06%)</title><rect x="10.3552%" y="485" width="0.0602%" height="15" fill="rgb(222,207,29)" fg:x="344" fg:w="2"/><text x="10.6052%" y="495.50"></text></g><g><title>decision-tree`core::alloc::layout::Layout::array::inner (14 samples, 0.42%)</title><rect x="10.4154%" y="501" width="0.4214%" height="15" fill="rgb(206,96,30)" fg:x="346" fg:w="14"/><text x="10.6654%" y="511.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (25 samples, 0.75%)</title><rect x="10.2047%" y="517" width="0.7526%" height="15" fill="rgb(218,138,4)" fg:x="339" fg:w="25"/><text x="10.4547%" y="527.50"></text></g><g><title>decision-tree`core::result::Result&lt;T,E&gt;::unwrap_unchecked (4 samples, 0.12%)</title><rect x="10.8368%" y="501" width="0.1204%" height="15" fill="rgb(250,191,14)" fg:x="360" fg:w="4"/><text x="11.0868%" y="511.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (9 samples, 0.27%)</title><rect x="10.9573%" y="517" width="0.2709%" height="15" fill="rgb(239,60,40)" fg:x="364" fg:w="9"/><text x="11.2073%" y="527.50"></text></g><g><title>decision-tree`alloc::alloc::Global::alloc_impl (16 samples, 0.48%)</title><rect x="11.5894%" y="485" width="0.4816%" height="15" fill="rgb(206,27,48)" fg:x="385" fg:w="16"/><text x="11.8394%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.30%)</title><rect x="11.7700%" y="469" width="0.3010%" height="15" fill="rgb(225,35,8)" fg:x="391" fg:w="10"/><text x="12.0200%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.27%)</title><rect x="11.8001%" y="453" width="0.2709%" height="15" fill="rgb(250,213,24)" fg:x="392" fg:w="9"/><text x="12.0501%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.27%)</title><rect x="11.8001%" y="437" width="0.2709%" height="15" fill="rgb(247,123,22)" fg:x="392" fg:w="9"/><text x="12.0501%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.12%)</title><rect x="11.9506%" y="421" width="0.1204%" height="15" fill="rgb(231,138,38)" fg:x="397" fg:w="4"/><text x="12.2006%" y="431.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.54%)</title><rect x="11.5593%" y="501" width="0.5418%" height="15" fill="rgb(231,145,46)" fg:x="384" fg:w="18"/><text x="11.8093%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.03%)</title><rect x="12.0710%" y="485" width="0.0301%" height="15" fill="rgb(251,118,11)" fg:x="401" fg:w="1"/><text x="12.3210%" y="495.50"></text></g><g><title>decision-tree`__rdl_realloc (2 samples, 0.06%)</title><rect x="12.4022%" y="469" width="0.0602%" height="15" fill="rgb(217,147,25)" fg:x="412" fg:w="2"/><text x="12.6522%" y="479.50"></text></g><g><title>decision-tree`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="12.4624%" y="469" width="0.0301%" height="15" fill="rgb(247,81,37)" fg:x="414" fg:w="1"/><text x="12.7124%" y="479.50"></text></g><g><title>decision-tree`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (2 samples, 0.06%)</title><rect x="12.4925%" y="469" width="0.0602%" height="15" fill="rgb(209,12,38)" fg:x="415" fg:w="2"/><text x="12.7425%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.03%)</title><rect x="12.5527%" y="469" width="0.0301%" height="15" fill="rgb(227,1,9)" fg:x="417" fg:w="1"/><text x="12.8027%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (1 samples, 0.03%)</title><rect x="12.7634%" y="453" width="0.0301%" height="15" fill="rgb(248,47,43)" fg:x="424" fg:w="1"/><text x="13.0134%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memmove (2 samples, 0.06%)</title><rect x="12.7935%" y="437" width="0.0602%" height="15" fill="rgb(221,10,30)" fg:x="425" fg:w="2"/><text x="13.0435%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.06%)</title><rect x="12.8537%" y="437" width="0.0602%" height="15" fill="rgb(210,229,1)" fg:x="427" fg:w="2"/><text x="13.1037%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (13 samples, 0.39%)</title><rect x="12.9139%" y="437" width="0.3913%" height="15" fill="rgb(222,148,37)" fg:x="429" fg:w="13"/><text x="13.1639%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free (1 samples, 0.03%)</title><rect x="13.4557%" y="421" width="0.0301%" height="15" fill="rgb(234,67,33)" fg:x="447" fg:w="1"/><text x="13.7057%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (18 samples, 0.54%)</title><rect x="13.4859%" y="421" width="0.5418%" height="15" fill="rgb(247,98,35)" fg:x="448" fg:w="18"/><text x="13.7359%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (26 samples, 0.78%)</title><rect x="14.0277%" y="421" width="0.7827%" height="15" fill="rgb(247,138,52)" fg:x="466" fg:w="26"/><text x="14.2777%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (26 samples, 0.78%)</title><rect x="14.0277%" y="405" width="0.7827%" height="15" fill="rgb(213,79,30)" fg:x="466" fg:w="26"/><text x="14.2777%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (16 samples, 0.48%)</title><rect x="14.3287%" y="389" width="0.4816%" height="15" fill="rgb(246,177,23)" fg:x="476" fg:w="16"/><text x="14.5787%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.15%)</title><rect x="14.8104%" y="421" width="0.1505%" height="15" fill="rgb(230,62,27)" fg:x="492" fg:w="5"/><text x="15.0604%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (59 samples, 1.78%)</title><rect x="13.3052%" y="437" width="1.7760%" height="15" fill="rgb(216,154,8)" fg:x="442" fg:w="59"/><text x="13.5552%" y="447.50">l..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.12%)</title><rect x="14.9609%" y="421" width="0.1204%" height="15" fill="rgb(244,35,45)" fg:x="497" fg:w="4"/><text x="15.2109%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (77 samples, 2.32%)</title><rect x="12.7935%" y="453" width="2.3179%" height="15" fill="rgb(251,115,12)" fg:x="425" fg:w="77"/><text x="13.0435%" y="463.50">l..</text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.03%)</title><rect x="15.0813%" y="437" width="0.0301%" height="15" fill="rgb(240,54,50)" fg:x="501" fg:w="1"/><text x="15.3313%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="15.0813%" y="421" width="0.0301%" height="15" fill="rgb(233,84,52)" fg:x="501" fg:w="1"/><text x="15.3313%" y="431.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (110 samples, 3.31%)</title><rect x="12.1011%" y="501" width="3.3113%" height="15" fill="rgb(207,117,47)" fg:x="402" fg:w="110"/><text x="12.3511%" y="511.50">dec..</text></g><g><title>decision-tree`alloc::alloc::Global::grow_impl (107 samples, 3.22%)</title><rect x="12.1915%" y="485" width="3.2210%" height="15" fill="rgb(249,43,39)" fg:x="405" fg:w="107"/><text x="12.4415%" y="495.50">dec..</text></g><g><title>libsystem_malloc.dylib`realloc (94 samples, 2.83%)</title><rect x="12.5828%" y="469" width="2.8296%" height="15" fill="rgb(209,38,44)" fg:x="418" fg:w="94"/><text x="12.8328%" y="479.50">li..</text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (10 samples, 0.30%)</title><rect x="15.1114%" y="453" width="0.3010%" height="15" fill="rgb(236,212,23)" fg:x="502" fg:w="10"/><text x="15.3614%" y="463.50"></text></g><g><title>decision-tree`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="15.4124%" y="501" width="0.0301%" height="15" fill="rgb(242,79,21)" fg:x="512" fg:w="1"/><text x="15.6624%" y="511.50"></text></g><g><title>decision-tree`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="15.4425%" y="501" width="0.0301%" height="15" fill="rgb(211,96,35)" fg:x="513" fg:w="1"/><text x="15.6925%" y="511.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (145 samples, 4.36%)</title><rect x="11.2282%" y="517" width="4.3648%" height="15" fill="rgb(253,215,40)" fg:x="373" fg:w="145"/><text x="11.4782%" y="527.50">decis..</text></g><g><title>decision-tree`core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.12%)</title><rect x="15.4726%" y="501" width="0.1204%" height="15" fill="rgb(211,81,21)" fg:x="514" fg:w="4"/><text x="15.7226%" y="511.50"></text></g><g><title>decision-tree`core::alloc::layout::Layout::array::inner (30 samples, 0.90%)</title><rect x="15.5930%" y="517" width="0.9031%" height="15" fill="rgb(208,190,38)" fg:x="518" fg:w="30"/><text x="15.8430%" y="527.50"></text></g><g><title>decision-tree`core::cmp::max_by (13 samples, 0.39%)</title><rect x="16.4961%" y="517" width="0.3913%" height="15" fill="rgb(235,213,38)" fg:x="548" fg:w="13"/><text x="16.7461%" y="527.50"></text></g><g><title>decision-tree`core::ops::function::FnOnce::call_once (3 samples, 0.09%)</title><rect x="16.7971%" y="501" width="0.0903%" height="15" fill="rgb(237,122,38)" fg:x="558" fg:w="3"/><text x="17.0471%" y="511.50"></text></g><g><title>decision-tree`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (3 samples, 0.09%)</title><rect x="16.7971%" y="485" width="0.0903%" height="15" fill="rgb(244,218,35)" fg:x="558" fg:w="3"/><text x="17.0471%" y="495.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (260 samples, 7.83%)</title><rect x="9.4521%" y="533" width="7.8266%" height="15" fill="rgb(240,68,47)" fg:x="314" fg:w="260"/><text x="9.7021%" y="543.50">decision-tr..</text></g><g><title>decision-tree`core::num::_&lt;impl usize&gt;::checked_add (13 samples, 0.39%)</title><rect x="16.8874%" y="517" width="0.3913%" height="15" fill="rgb(210,16,53)" fg:x="561" fg:w="13"/><text x="17.1374%" y="527.50"></text></g><g><title>decision-tree`alloc::raw_vec::handle_reserve (5 samples, 0.15%)</title><rect x="17.2787%" y="533" width="0.1505%" height="15" fill="rgb(235,124,12)" fg:x="574" fg:w="5"/><text x="17.5287%" y="543.50"></text></g><g><title>decision-tree`core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.12%)</title><rect x="17.3089%" y="517" width="0.1204%" height="15" fill="rgb(224,169,11)" fg:x="575" fg:w="4"/><text x="17.5589%" y="527.50"></text></g><g><title>decision-tree`core::alloc::layout::Layout::array::inner (2 samples, 0.06%)</title><rect x="17.4293%" y="533" width="0.0602%" height="15" fill="rgb(250,166,2)" fg:x="579" fg:w="2"/><text x="17.6793%" y="543.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::push (305 samples, 9.18%)</title><rect x="8.3384%" y="565" width="9.1812%" height="15" fill="rgb(242,216,29)" fg:x="277" fg:w="305"/><text x="8.5884%" y="575.50">decision-tree..</text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (270 samples, 8.13%)</title><rect x="9.3919%" y="549" width="8.1276%" height="15" fill="rgb(230,116,27)" fg:x="312" fg:w="270"/><text x="9.6419%" y="559.50">decision-tr..</text></g><g><title>decision-tree`core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.03%)</title><rect x="17.4895%" y="533" width="0.0301%" height="15" fill="rgb(228,99,48)" fg:x="581" fg:w="1"/><text x="17.7395%" y="543.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T&gt;::new (2 samples, 0.06%)</title><rect x="17.5196%" y="565" width="0.0602%" height="15" fill="rgb(253,11,6)" fg:x="582" fg:w="2"/><text x="17.7696%" y="575.50"></text></g><g><title>decision-tree`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (13 samples, 0.39%)</title><rect x="18.2420%" y="533" width="0.3913%" height="15" fill="rgb(247,143,39)" fg:x="606" fg:w="13"/><text x="18.4920%" y="543.50"></text></g><g><title>decision-tree`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (11 samples, 0.33%)</title><rect x="18.6334%" y="533" width="0.3311%" height="15" fill="rgb(236,97,10)" fg:x="619" fg:w="11"/><text x="18.8834%" y="543.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (62 samples, 1.87%)</title><rect x="17.7002%" y="549" width="1.8663%" height="15" fill="rgb(233,208,19)" fg:x="588" fg:w="62"/><text x="17.9502%" y="559.50">d..</text></g><g><title>decision-tree`core::mem::replace (20 samples, 0.60%)</title><rect x="18.9645%" y="533" width="0.6020%" height="15" fill="rgb(216,164,2)" fg:x="630" fg:w="20"/><text x="19.2145%" y="543.50"></text></g><g><title>decision-tree`core::cmp::impls::_&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3 samples, 0.09%)</title><rect x="19.5665%" y="549" width="0.0903%" height="15" fill="rgb(220,129,5)" fg:x="650" fg:w="3"/><text x="19.8165%" y="559.50"></text></g><g><title>decision-tree`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (72 samples, 2.17%)</title><rect x="17.5798%" y="565" width="2.1674%" height="15" fill="rgb(242,17,10)" fg:x="584" fg:w="72"/><text x="17.8298%" y="575.50">d..</text></g><g><title>decision-tree`core::mem::replace (3 samples, 0.09%)</title><rect x="19.6568%" y="549" width="0.0903%" height="15" fill="rgb(242,107,0)" fg:x="653" fg:w="3"/><text x="19.9068%" y="559.50"></text></g><g><title>decision-tree`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="20.0181%" y="533" width="0.0301%" height="15" fill="rgb(251,28,31)" fg:x="665" fg:w="1"/><text x="20.2681%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="20.0181%" y="517" width="0.0301%" height="15" fill="rgb(233,223,10)" fg:x="665" fg:w="1"/><text x="20.2681%" y="527.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="20.1084%" y="517" width="0.0301%" height="15" fill="rgb(215,21,27)" fg:x="668" fg:w="1"/><text x="20.3584%" y="527.50"></text></g><g><title>decision-tree`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.09%)</title><rect x="20.5298%" y="485" width="0.0903%" height="15" fill="rgb(232,23,21)" fg:x="682" fg:w="3"/><text x="20.7798%" y="495.50"></text></g><g><title>decision-tree`&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (4 samples, 0.12%)</title><rect x="23.3594%" y="437" width="0.1204%" height="15" fill="rgb(244,5,23)" fg:x="776" fg:w="4"/><text x="23.6094%" y="447.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (3 samples, 0.09%)</title><rect x="24.2023%" y="421" width="0.0903%" height="15" fill="rgb(226,81,46)" fg:x="804" fg:w="3"/><text x="24.4523%" y="431.50"></text></g><g><title>decision-tree`&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::haystack (7 samples, 0.21%)</title><rect x="24.2926%" y="421" width="0.2107%" height="15" fill="rgb(247,70,30)" fg:x="807" fg:w="7"/><text x="24.5426%" y="431.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (100 samples, 3.01%)</title><rect x="28.4768%" y="405" width="3.0102%" height="15" fill="rgb(212,68,19)" fg:x="946" fg:w="100"/><text x="28.7268%" y="415.50">dec..</text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (46 samples, 1.38%)</title><rect x="30.1023%" y="389" width="1.3847%" height="15" fill="rgb(240,187,13)" fg:x="1000" fg:w="46"/><text x="30.3523%" y="399.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="31.4871%" y="405" width="0.0301%" height="15" fill="rgb(223,113,26)" fg:x="1046" fg:w="1"/><text x="31.7371%" y="415.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (42 samples, 1.26%)</title><rect x="31.5172%" y="405" width="1.2643%" height="15" fill="rgb(206,192,2)" fg:x="1047" fg:w="42"/><text x="31.7672%" y="415.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (35 samples, 1.05%)</title><rect x="31.7279%" y="389" width="1.0536%" height="15" fill="rgb(241,108,4)" fg:x="1054" fg:w="35"/><text x="31.9779%" y="399.50"></text></g><g><title>decision-tree`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (33 samples, 0.99%)</title><rect x="32.9320%" y="389" width="0.9934%" height="15" fill="rgb(247,173,49)" fg:x="1094" fg:w="33"/><text x="33.1820%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (6 samples, 0.18%)</title><rect x="33.7447%" y="373" width="0.1806%" height="15" fill="rgb(224,114,35)" fg:x="1121" fg:w="6"/><text x="33.9947%" y="383.50"></text></g><g><title>decision-tree`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (39 samples, 1.17%)</title><rect x="32.7815%" y="405" width="1.1740%" height="15" fill="rgb(245,159,27)" fg:x="1089" fg:w="39"/><text x="33.0315%" y="415.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memcmp (1 samples, 0.03%)</title><rect x="33.9253%" y="389" width="0.0301%" height="15" fill="rgb(245,172,44)" fg:x="1127" fg:w="1"/><text x="34.1753%" y="399.50"></text></g><g><title>decision-tree`core::slice::memchr::memchr_aligned (17 samples, 0.51%)</title><rect x="34.3468%" y="389" width="0.5117%" height="15" fill="rgb(236,23,11)" fg:x="1141" fg:w="17"/><text x="34.5968%" y="399.50"></text></g><g><title>decision-tree`core::slice::memchr::memchr (56 samples, 1.69%)</title><rect x="33.9554%" y="405" width="1.6857%" height="15" fill="rgb(205,117,38)" fg:x="1128" fg:w="56"/><text x="34.2054%" y="415.50"></text></g><g><title>decision-tree`core::slice::memchr::memchr_naive (26 samples, 0.78%)</title><rect x="34.8585%" y="389" width="0.7827%" height="15" fill="rgb(237,72,25)" fg:x="1158" fg:w="26"/><text x="35.1085%" y="399.50"></text></g><g><title>decision-tree`core::slice::memchr::memchr_aligned (3 samples, 0.09%)</title><rect x="35.6412%" y="405" width="0.0903%" height="15" fill="rgb(244,70,9)" fg:x="1184" fg:w="3"/><text x="35.8912%" y="415.50"></text></g><g><title>decision-tree`&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (374 samples, 11.26%)</title><rect x="24.5033%" y="421" width="11.2583%" height="15" fill="rgb(217,125,39)" fg:x="814" fg:w="374"/><text x="24.7533%" y="431.50">decision-tree`&lt;co..</text></g><g><title>decision-tree`core::slice::memchr::memchr_naive (1 samples, 0.03%)</title><rect x="35.7315%" y="405" width="0.0301%" height="15" fill="rgb(235,36,10)" fg:x="1187" fg:w="1"/><text x="35.9815%" y="415.50"></text></g><g><title>decision-tree`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.03%)</title><rect x="35.7616%" y="421" width="0.0301%" height="15" fill="rgb(251,123,47)" fg:x="1188" fg:w="1"/><text x="36.0116%" y="431.50"></text></g><g><title>decision-tree`core::slice::memchr::memchr (2 samples, 0.06%)</title><rect x="35.7917%" y="421" width="0.0602%" height="15" fill="rgb(221,13,13)" fg:x="1189" fg:w="2"/><text x="36.0417%" y="431.50"></text></g><g><title>decision-tree`core::str::iter::SplitInternal&lt;P&gt;::get_end (9 samples, 0.27%)</title><rect x="35.8519%" y="421" width="0.2709%" height="15" fill="rgb(238,131,9)" fg:x="1191" fg:w="9"/><text x="36.1019%" y="431.50"></text></g><g><title>decision-tree`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.06%)</title><rect x="36.0626%" y="405" width="0.0602%" height="15" fill="rgb(211,50,8)" fg:x="1198" fg:w="2"/><text x="36.3126%" y="415.50"></text></g><g><title>decision-tree`&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (458 samples, 13.79%)</title><rect x="23.2691%" y="453" width="13.7869%" height="15" fill="rgb(245,182,24)" fg:x="773" fg:w="458"/><text x="23.5191%" y="463.50">decision-tree`&lt;core::..</text></g><g><title>decision-tree`core::str::iter::SplitInternal&lt;P&gt;::next (451 samples, 13.58%)</title><rect x="23.4798%" y="437" width="13.5762%" height="15" fill="rgb(242,14,37)" fg:x="780" fg:w="451"/><text x="23.7298%" y="447.50">decision-tree`core::s..</text></g><g><title>decision-tree`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (31 samples, 0.93%)</title><rect x="36.1228%" y="421" width="0.9332%" height="15" fill="rgb(246,228,12)" fg:x="1200" fg:w="31"/><text x="36.3728%" y="431.50"></text></g><g><title>decision-tree`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.06%)</title><rect x="37.0560%" y="453" width="0.0602%" height="15" fill="rgb(213,55,15)" fg:x="1231" fg:w="2"/><text x="37.3060%" y="463.50"></text></g><g><title>decision-tree`&lt;str as alloc::string::ToString&gt;::to_string (6 samples, 0.18%)</title><rect x="38.2300%" y="421" width="0.1806%" height="15" fill="rgb(209,9,3)" fg:x="1270" fg:w="6"/><text x="38.4800%" y="431.50"></text></g><g><title>decision-tree`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.03%)</title><rect x="39.8254%" y="389" width="0.0301%" height="15" fill="rgb(230,59,30)" fg:x="1323" fg:w="1"/><text x="40.0754%" y="399.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="43.0464%" y="357" width="0.0301%" height="15" fill="rgb(209,121,21)" fg:x="1430" fg:w="1"/><text x="43.2964%" y="367.50"></text></g><g><title>decision-tree`__rdl_alloc (1 samples, 0.03%)</title><rect x="45.9663%" y="325" width="0.0301%" height="15" fill="rgb(220,109,13)" fg:x="1527" fg:w="1"/><text x="46.2163%" y="335.50"></text></g><g><title>decision-tree`core::ptr::non_null::NonNull&lt;T&gt;::new (15 samples, 0.45%)</title><rect x="47.7122%" y="309" width="0.4515%" height="15" fill="rgb(232,18,1)" fg:x="1585" fg:w="15"/><text x="47.9622%" y="319.50"></text></g><g><title>decision-tree`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (25 samples, 0.75%)</title><rect x="48.1638%" y="309" width="0.7526%" height="15" fill="rgb(215,41,42)" fg:x="1600" fg:w="25"/><text x="48.4138%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.03%)</title><rect x="49.5184%" y="293" width="0.0301%" height="15" fill="rgb(224,123,36)" fg:x="1645" fg:w="1"/><text x="49.7684%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (82 samples, 2.47%)</title><rect x="52.1373%" y="261" width="2.4684%" height="15" fill="rgb(240,125,3)" fg:x="1732" fg:w="82"/><text x="52.3873%" y="271.50">li..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (159 samples, 4.79%)</title><rect x="49.8495%" y="277" width="4.7863%" height="15" fill="rgb(205,98,50)" fg:x="1656" fg:w="159"/><text x="50.0995%" y="287.50">libsys..</text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.03%)</title><rect x="54.6057%" y="261" width="0.0301%" height="15" fill="rgb(205,185,37)" fg:x="1814" fg:w="1"/><text x="54.8557%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (191 samples, 5.75%)</title><rect x="48.9163%" y="309" width="5.7495%" height="15" fill="rgb(238,207,15)" fg:x="1625" fg:w="191"/><text x="49.1663%" y="319.50">libsyst..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (170 samples, 5.12%)</title><rect x="49.5485%" y="293" width="5.1174%" height="15" fill="rgb(213,199,42)" fg:x="1646" fg:w="170"/><text x="49.7985%" y="303.50">libsys..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.03%)</title><rect x="54.6358%" y="277" width="0.0301%" height="15" fill="rgb(235,201,11)" fg:x="1815" fg:w="1"/><text x="54.8858%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (8 samples, 0.24%)</title><rect x="54.6659%" y="309" width="0.2408%" height="15" fill="rgb(207,46,11)" fg:x="1816" fg:w="8"/><text x="54.9159%" y="319.50"></text></g><g><title>decision-tree`alloc::alloc::Global::alloc_impl (299 samples, 9.00%)</title><rect x="45.9964%" y="325" width="9.0006%" height="15" fill="rgb(241,35,35)" fg:x="1528" fg:w="299"/><text x="46.2464%" y="335.50">decision-tree..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.09%)</title><rect x="54.9067%" y="309" width="0.0903%" height="15" fill="rgb(243,32,47)" fg:x="1824" fg:w="3"/><text x="55.1567%" y="319.50"></text></g><g><title>decision-tree`core::ptr::non_null::NonNull&lt;T&gt;::new (2 samples, 0.06%)</title><rect x="54.9970%" y="325" width="0.0602%" height="15" fill="rgb(247,202,23)" fg:x="1827" fg:w="2"/><text x="55.2470%" y="335.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (307 samples, 9.24%)</title><rect x="45.9061%" y="341" width="9.2414%" height="15" fill="rgb(219,102,11)" fg:x="1525" fg:w="307"/><text x="46.1561%" y="351.50">decision-tree..</text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.09%)</title><rect x="55.0572%" y="325" width="0.0903%" height="15" fill="rgb(243,110,44)" fg:x="1829" fg:w="3"/><text x="55.3072%" y="335.50"></text></g><g><title>decision-tree`alloc::alloc::Global::alloc_impl (2 samples, 0.06%)</title><rect x="55.1475%" y="341" width="0.0602%" height="15" fill="rgb(222,74,54)" fg:x="1832" fg:w="2"/><text x="55.3975%" y="351.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (498 samples, 14.99%)</title><rect x="43.0765%" y="357" width="14.9910%" height="15" fill="rgb(216,99,12)" fg:x="1431" fg:w="498"/><text x="43.3265%" y="367.50">decision-tree`alloc::ra..</text></g><g><title>decision-tree`core::alloc::layout::Layout::array::inner (95 samples, 2.86%)</title><rect x="55.2077%" y="341" width="2.8597%" height="15" fill="rgb(226,22,26)" fg:x="1834" fg:w="95"/><text x="55.4577%" y="351.50">de..</text></g><g><title>decision-tree`core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="58.0674%" y="357" width="0.0301%" height="15" fill="rgb(217,163,10)" fg:x="1929" fg:w="1"/><text x="58.3174%" y="367.50"></text></g><g><title>decision-tree`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (602 samples, 18.12%)</title><rect x="40.3974%" y="373" width="18.1216%" height="15" fill="rgb(213,25,53)" fg:x="1342" fg:w="602"/><text x="40.6474%" y="383.50">decision-tree`&lt;T as alloc::s..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.42%)</title><rect x="58.0975%" y="357" width="0.4214%" height="15" fill="rgb(252,105,26)" fg:x="1930" fg:w="14"/><text x="58.3475%" y="367.50"></text></g><g><title>decision-tree`DYLD-STUB$$memcpy (2 samples, 0.06%)</title><rect x="58.5190%" y="373" width="0.0602%" height="15" fill="rgb(220,39,43)" fg:x="1944" fg:w="2"/><text x="58.7690%" y="383.50"></text></g><g><title>decision-tree`&lt;str as alloc::string::ToString&gt;::to_string (661 samples, 19.90%)</title><rect x="38.7116%" y="405" width="19.8977%" height="15" fill="rgb(229,68,48)" fg:x="1286" fg:w="661"/><text x="38.9616%" y="415.50">decision-tree`&lt;str as alloc::st..</text></g><g><title>decision-tree`alloc::slice::_&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (623 samples, 18.75%)</title><rect x="39.8555%" y="389" width="18.7538%" height="15" fill="rgb(252,8,32)" fg:x="1324" fg:w="623"/><text x="40.1055%" y="399.50">decision-tree`alloc::slice::_..</text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.03%)</title><rect x="58.5792%" y="373" width="0.0301%" height="15" fill="rgb(223,20,43)" fg:x="1946" fg:w="1"/><text x="58.8292%" y="383.50"></text></g><g><title>decision-tree`core::option::Option&lt;T&gt;::map (715 samples, 21.52%)</title><rect x="37.1162%" y="453" width="21.5232%" height="15" fill="rgb(229,81,49)" fg:x="1233" fg:w="715"/><text x="37.3662%" y="463.50">decision-tree`core::option::Option..</text></g><g><title>decision-tree`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (687 samples, 20.68%)</title><rect x="37.9591%" y="437" width="20.6803%" height="15" fill="rgb(236,28,36)" fg:x="1261" fg:w="687"/><text x="38.2091%" y="447.50">decision-tree`core::ops::function..</text></g><g><title>decision-tree`core::ops::function::FnMut::call_mut (672 samples, 20.23%)</title><rect x="38.4106%" y="421" width="20.2288%" height="15" fill="rgb(249,185,26)" fg:x="1276" fg:w="672"/><text x="38.6606%" y="431.50">decision-tree`core::ops::functio..</text></g><g><title>decision-tree`alloc::slice::_&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.03%)</title><rect x="58.6093%" y="405" width="0.0301%" height="15" fill="rgb(249,174,33)" fg:x="1947" fg:w="1"/><text x="58.8593%" y="415.50"></text></g><g><title>decision-tree`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,185 samples, 35.67%)</title><rect x="23.1186%" y="469" width="35.6713%" height="15" fill="rgb(233,201,37)" fg:x="768" fg:w="1185"/><text x="23.3686%" y="479.50">decision-tree`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core..</text></g><g><title>decision-tree`core::str::iter::SplitInternal&lt;P&gt;::next (5 samples, 0.15%)</title><rect x="58.6394%" y="453" width="0.1505%" height="15" fill="rgb(221,78,26)" fg:x="1948" fg:w="5"/><text x="58.8894%" y="463.50"></text></g><g><title>decision-tree`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (8 samples, 0.24%)</title><rect x="58.7899%" y="469" width="0.2408%" height="15" fill="rgb(250,127,30)" fg:x="1953" fg:w="8"/><text x="59.0399%" y="479.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::size_hint (3 samples, 0.09%)</title><rect x="58.9404%" y="453" width="0.0903%" height="15" fill="rgb(230,49,44)" fg:x="1958" fg:w="3"/><text x="59.1904%" y="463.50"></text></g><g><title>decision-tree`&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="59.0307%" y="469" width="0.0301%" height="15" fill="rgb(229,67,23)" fg:x="1961" fg:w="1"/><text x="59.2807%" y="479.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.03%)</title><rect x="59.0909%" y="453" width="0.0301%" height="15" fill="rgb(249,83,47)" fg:x="1963" fg:w="1"/><text x="59.3409%" y="463.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (4 samples, 0.12%)</title><rect x="59.1511%" y="437" width="0.1204%" height="15" fill="rgb(215,43,3)" fg:x="1965" fg:w="4"/><text x="59.4011%" y="447.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="59.2715%" y="421" width="0.0301%" height="15" fill="rgb(238,154,13)" fg:x="1969" fg:w="1"/><text x="59.5215%" y="431.50"></text></g><g><title>decision-tree`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="59.8435%" y="389" width="0.0301%" height="15" fill="rgb(219,56,2)" fg:x="1988" fg:w="1"/><text x="60.0935%" y="399.50"></text></g><g><title>decision-tree`&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (1 samples, 0.03%)</title><rect x="59.8435%" y="373" width="0.0301%" height="15" fill="rgb(233,0,4)" fg:x="1988" fg:w="1"/><text x="60.0935%" y="383.50"></text></g><g><title>decision-tree`&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (1 samples, 0.03%)</title><rect x="59.8736%" y="389" width="0.0301%" height="15" fill="rgb(235,30,7)" fg:x="1989" fg:w="1"/><text x="60.1236%" y="399.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (19 samples, 0.57%)</title><rect x="59.6328%" y="405" width="0.5719%" height="15" fill="rgb(250,79,13)" fg:x="1981" fg:w="19"/><text x="59.8828%" y="415.50"></text></g><g><title>decision-tree`core::alloc::layout::Layout::array::inner (10 samples, 0.30%)</title><rect x="59.9037%" y="389" width="0.3010%" height="15" fill="rgb(211,146,34)" fg:x="1990" fg:w="10"/><text x="60.1537%" y="399.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (9 samples, 0.27%)</title><rect x="60.2047%" y="405" width="0.2709%" height="15" fill="rgb(228,22,38)" fg:x="2000" fg:w="9"/><text x="60.4547%" y="415.50"></text></g><g><title>decision-tree`__rdl_realloc (1 samples, 0.03%)</title><rect x="61.1680%" y="357" width="0.0301%" height="15" fill="rgb(235,168,5)" fg:x="2032" fg:w="1"/><text x="61.4180%" y="367.50"></text></g><g><title>decision-tree`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (2 samples, 0.06%)</title><rect x="61.1981%" y="357" width="0.0602%" height="15" fill="rgb(221,155,16)" fg:x="2033" fg:w="2"/><text x="61.4481%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (4 samples, 0.12%)</title><rect x="61.3185%" y="341" width="0.1204%" height="15" fill="rgb(215,215,53)" fg:x="2037" fg:w="4"/><text x="61.5685%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.06%)</title><rect x="61.4690%" y="325" width="0.0602%" height="15" fill="rgb(223,4,10)" fg:x="2042" fg:w="2"/><text x="61.7190%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.18%)</title><rect x="61.6496%" y="309" width="0.1806%" height="15" fill="rgb(234,103,6)" fg:x="2048" fg:w="6"/><text x="61.8996%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.39%)</title><rect x="61.8302%" y="309" width="0.3913%" height="15" fill="rgb(227,97,0)" fg:x="2054" fg:w="13"/><text x="62.0802%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (12 samples, 0.36%)</title><rect x="61.8603%" y="293" width="0.3612%" height="15" fill="rgb(234,150,53)" fg:x="2055" fg:w="12"/><text x="62.1103%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.18%)</title><rect x="62.0409%" y="277" width="0.1806%" height="15" fill="rgb(228,201,54)" fg:x="2061" fg:w="6"/><text x="62.2909%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.12%)</title><rect x="62.2216%" y="309" width="0.1204%" height="15" fill="rgb(222,22,37)" fg:x="2067" fg:w="4"/><text x="62.4716%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.03%)</title><rect x="62.7333%" y="277" width="0.0301%" height="15" fill="rgb(237,53,32)" fg:x="2084" fg:w="1"/><text x="62.9833%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.69%)</title><rect x="62.3420%" y="309" width="0.6924%" height="15" fill="rgb(233,25,53)" fg:x="2071" fg:w="23"/><text x="62.5920%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (21 samples, 0.63%)</title><rect x="62.4022%" y="293" width="0.6321%" height="15" fill="rgb(210,40,34)" fg:x="2073" fg:w="21"/><text x="62.6522%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.27%)</title><rect x="62.7634%" y="277" width="0.2709%" height="15" fill="rgb(241,220,44)" fg:x="2085" fg:w="9"/><text x="63.0134%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (55 samples, 1.66%)</title><rect x="61.5292%" y="325" width="1.6556%" height="15" fill="rgb(235,28,35)" fg:x="2044" fg:w="55"/><text x="61.7792%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.15%)</title><rect x="63.0343%" y="309" width="0.1505%" height="15" fill="rgb(210,56,17)" fg:x="2094" fg:w="5"/><text x="63.2843%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (59 samples, 1.78%)</title><rect x="61.4389%" y="341" width="1.7760%" height="15" fill="rgb(224,130,29)" fg:x="2041" fg:w="59"/><text x="61.6889%" y="351.50">l..</text></g><g><title>libsystem_malloc.dylib`szone_malloc (1 samples, 0.03%)</title><rect x="63.1848%" y="325" width="0.0301%" height="15" fill="rgb(235,212,8)" fg:x="2099" fg:w="1"/><text x="63.4348%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.12%)</title><rect x="63.2149%" y="341" width="0.1204%" height="15" fill="rgb(223,33,50)" fg:x="2100" fg:w="4"/><text x="63.4649%" y="351.50"></text></g><g><title>decision-tree`alloc::alloc::Global::grow_impl (86 samples, 2.59%)</title><rect x="60.7766%" y="373" width="2.5888%" height="15" fill="rgb(219,149,13)" fg:x="2019" fg:w="86"/><text x="61.0266%" y="383.50">de..</text></g><g><title>libsystem_malloc.dylib`realloc (70 samples, 2.11%)</title><rect x="61.2583%" y="357" width="2.1072%" height="15" fill="rgb(250,156,29)" fg:x="2035" fg:w="70"/><text x="61.5083%" y="367.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.03%)</title><rect x="63.3353%" y="341" width="0.0301%" height="15" fill="rgb(216,193,19)" fg:x="2104" fg:w="1"/><text x="63.5853%" y="351.50"></text></g><g><title>decision-tree`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="63.3654%" y="373" width="0.0301%" height="15" fill="rgb(216,135,14)" fg:x="2105" fg:w="1"/><text x="63.6154%" y="383.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (89 samples, 2.68%)</title><rect x="60.7465%" y="389" width="2.6791%" height="15" fill="rgb(241,47,5)" fg:x="2018" fg:w="89"/><text x="60.9965%" y="399.50">de..</text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.03%)</title><rect x="63.3955%" y="373" width="0.0301%" height="15" fill="rgb(233,42,35)" fg:x="2106" fg:w="1"/><text x="63.6455%" y="383.50"></text></g><g><title>decision-tree`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="63.4256%" y="389" width="0.0301%" height="15" fill="rgb(231,13,6)" fg:x="2107" fg:w="1"/><text x="63.6756%" y="399.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (104 samples, 3.13%)</title><rect x="60.4756%" y="405" width="3.1306%" height="15" fill="rgb(207,181,40)" fg:x="2009" fg:w="104"/><text x="60.7256%" y="415.50">dec..</text></g><g><title>decision-tree`core::result::Result&lt;T,E&gt;::map_err (5 samples, 0.15%)</title><rect x="63.4557%" y="389" width="0.1505%" height="15" fill="rgb(254,173,49)" fg:x="2108" fg:w="5"/><text x="63.7057%" y="399.50"></text></g><g><title>decision-tree`core::alloc::layout::Layout::array::inner (12 samples, 0.36%)</title><rect x="63.6063%" y="405" width="0.3612%" height="15" fill="rgb(221,1,38)" fg:x="2113" fg:w="12"/><text x="63.8563%" y="415.50"></text></g><g><title>decision-tree`core::cmp::max_by (13 samples, 0.39%)</title><rect x="63.9675%" y="405" width="0.3913%" height="15" fill="rgb(206,124,46)" fg:x="2125" fg:w="13"/><text x="64.2175%" y="415.50"></text></g><g><title>decision-tree`core::ops::function::FnOnce::call_once (4 samples, 0.12%)</title><rect x="64.2384%" y="389" width="0.1204%" height="15" fill="rgb(249,21,11)" fg:x="2134" fg:w="4"/><text x="64.4884%" y="399.50"></text></g><g><title>decision-tree`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (3 samples, 0.09%)</title><rect x="64.2685%" y="373" width="0.0903%" height="15" fill="rgb(222,201,40)" fg:x="2135" fg:w="3"/><text x="64.5185%" y="383.50"></text></g><g><title>decision-tree`core::num::_&lt;impl usize&gt;::checked_add (5 samples, 0.15%)</title><rect x="64.3588%" y="405" width="0.1505%" height="15" fill="rgb(235,61,29)" fg:x="2138" fg:w="5"/><text x="64.6088%" y="415.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::reserve (183 samples, 5.51%)</title><rect x="59.0608%" y="469" width="5.5087%" height="15" fill="rgb(219,207,3)" fg:x="1962" fg:w="183"/><text x="59.3108%" y="479.50">decisio..</text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (181 samples, 5.45%)</title><rect x="59.1210%" y="453" width="5.4485%" height="15" fill="rgb(222,56,46)" fg:x="1964" fg:w="181"/><text x="59.3710%" y="463.50">decisio..</text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (176 samples, 5.30%)</title><rect x="59.2715%" y="437" width="5.2980%" height="15" fill="rgb(239,76,54)" fg:x="1969" fg:w="176"/><text x="59.5215%" y="447.50">decisi..</text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (175 samples, 5.27%)</title><rect x="59.3016%" y="421" width="5.2679%" height="15" fill="rgb(231,124,27)" fg:x="1970" fg:w="175"/><text x="59.5516%" y="431.50">decisi..</text></g><g><title>decision-tree`core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.06%)</title><rect x="64.5093%" y="405" width="0.0602%" height="15" fill="rgb(249,195,6)" fg:x="2143" fg:w="2"/><text x="64.7593%" y="415.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,461 samples, 43.98%)</title><rect x="20.6201%" y="485" width="43.9795%" height="15" fill="rgb(237,174,47)" fg:x="685" fg:w="1461"/><text x="20.8701%" y="495.50">decision-tree`alloc::vec::Vec&lt;T,A&gt;::extend_desugared</text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::size_hint (1 samples, 0.03%)</title><rect x="64.5695%" y="469" width="0.0301%" height="15" fill="rgb(206,201,31)" fg:x="2145" fg:w="1"/><text x="64.8195%" y="479.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,467 samples, 44.16%)</title><rect x="20.4997%" y="501" width="44.1601%" height="15" fill="rgb(231,57,52)" fg:x="681" fg:w="1467"/><text x="20.7497%" y="511.50">decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExte..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.06%)</title><rect x="64.5996%" y="485" width="0.0602%" height="15" fill="rgb(248,177,22)" fg:x="2146" fg:w="2"/><text x="64.8496%" y="495.50"></text></g><g><title>decision-tree`&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::haystack (1 samples, 0.03%)</title><rect x="64.6598%" y="469" width="0.0301%" height="15" fill="rgb(215,211,37)" fg:x="2148" fg:w="1"/><text x="64.9098%" y="479.50"></text></g><g><title>decision-tree`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.03%)</title><rect x="65.0813%" y="437" width="0.0301%" height="15" fill="rgb(241,128,51)" fg:x="2162" fg:w="1"/><text x="65.3313%" y="447.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (12 samples, 0.36%)</title><rect x="65.1114%" y="437" width="0.3612%" height="15" fill="rgb(227,165,31)" fg:x="2163" fg:w="12"/><text x="65.3614%" y="447.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.06%)</title><rect x="65.4124%" y="421" width="0.0602%" height="15" fill="rgb(228,167,24)" fg:x="2173" fg:w="2"/><text x="65.6624%" y="431.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="65.4726%" y="437" width="0.0301%" height="15" fill="rgb(228,143,12)" fg:x="2175" fg:w="1"/><text x="65.7226%" y="447.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.18%)</title><rect x="65.5027%" y="437" width="0.1806%" height="15" fill="rgb(249,149,8)" fg:x="2176" fg:w="6"/><text x="65.7527%" y="447.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.15%)</title><rect x="65.5328%" y="421" width="0.1505%" height="15" fill="rgb(243,35,44)" fg:x="2177" fg:w="5"/><text x="65.7828%" y="431.50"></text></g><g><title>decision-tree`core::slice::cmp::_&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.12%)</title><rect x="65.6833%" y="437" width="0.1204%" height="15" fill="rgb(246,89,9)" fg:x="2182" fg:w="4"/><text x="65.9333%" y="447.50"></text></g><g><title>decision-tree`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.09%)</title><rect x="65.7134%" y="421" width="0.0903%" height="15" fill="rgb(233,213,13)" fg:x="2183" fg:w="3"/><text x="65.9634%" y="431.50"></text></g><g><title>decision-tree`&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (38 samples, 1.14%)</title><rect x="64.7803%" y="453" width="1.1439%" height="15" fill="rgb(233,141,41)" fg:x="2152" fg:w="38"/><text x="65.0303%" y="463.50"></text></g><g><title>decision-tree`core::slice::memchr::memchr (4 samples, 0.12%)</title><rect x="65.8037%" y="437" width="0.1204%" height="15" fill="rgb(239,167,4)" fg:x="2186" fg:w="4"/><text x="66.0537%" y="447.50"></text></g><g><title>decision-tree`core::slice::memchr::memchr_aligned (4 samples, 0.12%)</title><rect x="65.8037%" y="421" width="0.1204%" height="15" fill="rgb(209,217,16)" fg:x="2186" fg:w="4"/><text x="66.0537%" y="431.50"></text></g><g><title>decision-tree`&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 1.32%)</title><rect x="64.6598%" y="485" width="1.3245%" height="15" fill="rgb(219,88,35)" fg:x="2148" fg:w="44"/><text x="64.9098%" y="495.50"></text></g><g><title>decision-tree`core::str::iter::SplitInternal&lt;P&gt;::next (43 samples, 1.29%)</title><rect x="64.6899%" y="469" width="1.2944%" height="15" fill="rgb(220,193,23)" fg:x="2149" fg:w="43"/><text x="64.9399%" y="479.50"></text></g><g><title>decision-tree`core::str::traits::_&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.06%)</title><rect x="65.9241%" y="453" width="0.0602%" height="15" fill="rgb(230,90,52)" fg:x="2190" fg:w="2"/><text x="66.1741%" y="463.50"></text></g><g><title>decision-tree`__rdl_alloc (1 samples, 0.03%)</title><rect x="66.6466%" y="357" width="0.0301%" height="15" fill="rgb(252,106,19)" fg:x="2214" fg:w="1"/><text x="66.8966%" y="367.50"></text></g><g><title>decision-tree`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (4 samples, 0.12%)</title><rect x="66.8272%" y="341" width="0.1204%" height="15" fill="rgb(206,74,20)" fg:x="2220" fg:w="4"/><text x="67.0772%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.03%)</title><rect x="66.9476%" y="325" width="0.0301%" height="15" fill="rgb(230,138,44)" fg:x="2224" fg:w="1"/><text x="67.1976%" y="335.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 1.02%)</title><rect x="66.6165%" y="373" width="1.0235%" height="15" fill="rgb(235,182,43)" fg:x="2213" fg:w="34"/><text x="66.8665%" y="383.50"></text></g><g><title>decision-tree`alloc::alloc::Global::alloc_impl (32 samples, 0.96%)</title><rect x="66.6767%" y="357" width="0.9633%" height="15" fill="rgb(242,16,51)" fg:x="2215" fg:w="32"/><text x="66.9267%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (23 samples, 0.69%)</title><rect x="66.9476%" y="341" width="0.6924%" height="15" fill="rgb(248,9,4)" fg:x="2224" fg:w="23"/><text x="67.1976%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (22 samples, 0.66%)</title><rect x="66.9777%" y="325" width="0.6623%" height="15" fill="rgb(210,31,22)" fg:x="2225" fg:w="22"/><text x="67.2277%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (20 samples, 0.60%)</title><rect x="67.0379%" y="309" width="0.6020%" height="15" fill="rgb(239,54,39)" fg:x="2227" fg:w="20"/><text x="67.2879%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.24%)</title><rect x="67.3992%" y="293" width="0.2408%" height="15" fill="rgb(230,99,41)" fg:x="2239" fg:w="8"/><text x="67.6492%" y="303.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (46 samples, 1.38%)</title><rect x="66.4359%" y="389" width="1.3847%" height="15" fill="rgb(253,106,12)" fg:x="2207" fg:w="46"/><text x="66.6859%" y="399.50"></text></g><g><title>decision-tree`core::alloc::layout::Layout::array::inner (6 samples, 0.18%)</title><rect x="67.6400%" y="373" width="0.1806%" height="15" fill="rgb(213,46,41)" fg:x="2247" fg:w="6"/><text x="67.8900%" y="383.50"></text></g><g><title>decision-tree`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (57 samples, 1.72%)</title><rect x="66.1650%" y="405" width="1.7158%" height="15" fill="rgb(215,133,35)" fg:x="2198" fg:w="57"/><text x="66.4150%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.06%)</title><rect x="67.8206%" y="389" width="0.0602%" height="15" fill="rgb(213,28,5)" fg:x="2253" fg:w="2"/><text x="68.0706%" y="399.50"></text></g><g><title>decision-tree`&lt;str as alloc::string::ToString&gt;::to_string (62 samples, 1.87%)</title><rect x="66.0446%" y="437" width="1.8663%" height="15" fill="rgb(215,77,49)" fg:x="2194" fg:w="62"/><text x="66.2946%" y="447.50">d..</text></g><g><title>decision-tree`alloc::slice::_&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (58 samples, 1.75%)</title><rect x="66.1650%" y="421" width="1.7459%" height="15" fill="rgb(248,100,22)" fg:x="2198" fg:w="58"/><text x="66.4150%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="67.8808%" y="405" width="0.0301%" height="15" fill="rgb(208,67,9)" fg:x="2255" fg:w="1"/><text x="68.1308%" y="415.50"></text></g><g><title>decision-tree`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (109 samples, 3.28%)</title><rect x="64.6598%" y="501" width="3.2812%" height="15" fill="rgb(219,133,21)" fg:x="2148" fg:w="109"/><text x="64.9098%" y="511.50">dec..</text></g><g><title>decision-tree`core::option::Option&lt;T&gt;::map (65 samples, 1.96%)</title><rect x="65.9843%" y="485" width="1.9567%" height="15" fill="rgb(246,46,29)" fg:x="2192" fg:w="65"/><text x="66.2343%" y="495.50">d..</text></g><g><title>decision-tree`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (63 samples, 1.90%)</title><rect x="66.0446%" y="469" width="1.8964%" height="15" fill="rgb(246,185,52)" fg:x="2194" fg:w="63"/><text x="66.2946%" y="479.50">d..</text></g><g><title>decision-tree`core::ops::function::FnMut::call_mut (63 samples, 1.90%)</title><rect x="66.0446%" y="453" width="1.8964%" height="15" fill="rgb(252,136,11)" fg:x="2194" fg:w="63"/><text x="66.2946%" y="463.50">d..</text></g><g><title>decision-tree`alloc::slice::_&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.03%)</title><rect x="67.9109%" y="437" width="0.0301%" height="15" fill="rgb(219,138,53)" fg:x="2256" fg:w="1"/><text x="68.1609%" y="447.50"></text></g><g><title>decision-tree`core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="68.3022%" y="453" width="0.0301%" height="15" fill="rgb(211,51,23)" fg:x="2269" fg:w="1"/><text x="68.5522%" y="463.50"></text></g><g><title>decision-tree`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (2 samples, 0.06%)</title><rect x="68.3323%" y="453" width="0.0602%" height="15" fill="rgb(247,221,28)" fg:x="2270" fg:w="2"/><text x="68.5823%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.36%)</title><rect x="68.3925%" y="453" width="0.3612%" height="15" fill="rgb(251,222,45)" fg:x="2272" fg:w="12"/><text x="68.6425%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (11 samples, 0.33%)</title><rect x="68.4226%" y="437" width="0.3311%" height="15" fill="rgb(217,162,53)" fg:x="2273" fg:w="11"/><text x="68.6726%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.27%)</title><rect x="68.4828%" y="421" width="0.2709%" height="15" fill="rgb(229,93,14)" fg:x="2275" fg:w="9"/><text x="68.7328%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.18%)</title><rect x="68.5731%" y="405" width="0.1806%" height="15" fill="rgb(209,67,49)" fg:x="2278" fg:w="6"/><text x="68.8231%" y="415.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.57%)</title><rect x="68.2119%" y="485" width="0.5719%" height="15" fill="rgb(213,87,29)" fg:x="2266" fg:w="19"/><text x="68.4619%" y="495.50"></text></g><g><title>decision-tree`alloc::alloc::Global::alloc_impl (19 samples, 0.57%)</title><rect x="68.2119%" y="469" width="0.5719%" height="15" fill="rgb(205,151,52)" fg:x="2266" fg:w="19"/><text x="68.4619%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.03%)</title><rect x="68.7538%" y="453" width="0.0301%" height="15" fill="rgb(253,215,39)" fg:x="2284" fg:w="1"/><text x="69.0038%" y="463.50"></text></g><g><title>decision-tree`alloc::alloc::Global::alloc_impl (2 samples, 0.06%)</title><rect x="68.7839%" y="485" width="0.0602%" height="15" fill="rgb(221,220,41)" fg:x="2285" fg:w="2"/><text x="69.0339%" y="495.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (42 samples, 1.26%)</title><rect x="67.9410%" y="501" width="1.2643%" height="15" fill="rgb(218,133,21)" fg:x="2257" fg:w="42"/><text x="68.1910%" y="511.50"></text></g><g><title>decision-tree`core::alloc::layout::Layout::array::inner (12 samples, 0.36%)</title><rect x="68.8441%" y="485" width="0.3612%" height="15" fill="rgb(221,193,43)" fg:x="2287" fg:w="12"/><text x="69.0941%" y="495.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.03%)</title><rect x="69.2053%" y="501" width="0.0301%" height="15" fill="rgb(240,128,52)" fg:x="2299" fg:w="1"/><text x="69.4553%" y="511.50"></text></g><g><title>decision-tree`core::cmp::max_by (5 samples, 0.15%)</title><rect x="69.2354%" y="501" width="0.1505%" height="15" fill="rgb(253,114,12)" fg:x="2300" fg:w="5"/><text x="69.4854%" y="511.50"></text></g><g><title>decision-tree`core::ops::function::FnOnce::call_once (2 samples, 0.06%)</title><rect x="69.3257%" y="485" width="0.0602%" height="15" fill="rgb(215,223,47)" fg:x="2303" fg:w="2"/><text x="69.5757%" y="495.50"></text></g><g><title>decision-tree`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (2 samples, 0.06%)</title><rect x="69.3257%" y="469" width="0.0602%" height="15" fill="rgb(248,225,23)" fg:x="2303" fg:w="2"/><text x="69.5757%" y="479.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,637 samples, 49.28%)</title><rect x="20.1385%" y="517" width="49.2775%" height="15" fill="rgb(250,108,0)" fg:x="669" fg:w="1637"/><text x="20.3885%" y="527.50">decision-tree`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromI..</text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.03%)</title><rect x="69.3859%" y="501" width="0.0301%" height="15" fill="rgb(228,208,7)" fg:x="2305" fg:w="1"/><text x="69.6359%" y="511.50"></text></g><g><title>decision-tree`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="69.4160%" y="517" width="0.0301%" height="15" fill="rgb(244,45,10)" fg:x="2306" fg:w="1"/><text x="69.6660%" y="527.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,642 samples, 49.43%)</title><rect x="20.0482%" y="533" width="49.4281%" height="15" fill="rgb(207,125,25)" fg:x="666" fg:w="1642"/><text x="20.2982%" y="543.50">decision-tree`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="69.4461%" y="517" width="0.0301%" height="15" fill="rgb(210,195,18)" fg:x="2307" fg:w="1"/><text x="69.6961%" y="527.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.03%)</title><rect x="69.4762%" y="533" width="0.0301%" height="15" fill="rgb(249,80,12)" fg:x="2308" fg:w="1"/><text x="69.7262%" y="543.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,657 samples, 49.88%)</title><rect x="19.8675%" y="549" width="49.8796%" height="15" fill="rgb(221,65,9)" fg:x="660" fg:w="1657"/><text x="20.1175%" y="559.50">decision-tree`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.24%)</title><rect x="69.5063%" y="533" width="0.2408%" height="15" fill="rgb(235,49,36)" fg:x="2309" fg:w="8"/><text x="69.7563%" y="543.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::collect (1,664 samples, 50.09%)</title><rect x="19.7471%" y="565" width="50.0903%" height="15" fill="rgb(225,32,20)" fg:x="656" fg:w="1664"/><text x="19.9971%" y="575.50">decision-tree`core::iter::traits::iterator::Iterator::collect</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.09%)</title><rect x="69.7471%" y="549" width="0.0903%" height="15" fill="rgb(215,141,46)" fg:x="2317" fg:w="3"/><text x="69.9971%" y="559.50"></text></g><g><title>decision-tree`core::iter::adapters::map::Map&lt;I,F&gt;::new (4 samples, 0.12%)</title><rect x="69.8374%" y="549" width="0.1204%" height="15" fill="rgb(250,160,47)" fg:x="2320" fg:w="4"/><text x="70.0874%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.12%)</title><rect x="69.8374%" y="533" width="0.1204%" height="15" fill="rgb(216,222,40)" fg:x="2320" fg:w="4"/><text x="70.0874%" y="543.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::map (7 samples, 0.21%)</title><rect x="69.8374%" y="565" width="0.2107%" height="15" fill="rgb(234,217,39)" fg:x="2320" fg:w="7"/><text x="70.0874%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.09%)</title><rect x="69.9579%" y="549" width="0.0903%" height="15" fill="rgb(207,178,40)" fg:x="2324" fg:w="3"/><text x="70.2079%" y="559.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.03%)</title><rect x="70.0482%" y="565" width="0.0301%" height="15" fill="rgb(221,136,13)" fg:x="2327" fg:w="1"/><text x="70.2982%" y="575.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="70.0482%" y="549" width="0.0301%" height="15" fill="rgb(249,199,10)" fg:x="2327" fg:w="1"/><text x="70.2982%" y="559.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="70.0482%" y="533" width="0.0301%" height="15" fill="rgb(249,222,13)" fg:x="2327" fg:w="1"/><text x="70.2982%" y="543.50"></text></g><g><title>decision-tree`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="70.0482%" y="517" width="0.0301%" height="15" fill="rgb(244,185,38)" fg:x="2327" fg:w="1"/><text x="70.2982%" y="527.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="70.0482%" y="501" width="0.0301%" height="15" fill="rgb(236,202,9)" fg:x="2327" fg:w="1"/><text x="70.2982%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.03%)</title><rect x="70.0482%" y="485" width="0.0301%" height="15" fill="rgb(250,229,37)" fg:x="2327" fg:w="1"/><text x="70.2982%" y="495.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="70.3492%" y="501" width="0.0301%" height="15" fill="rgb(206,174,23)" fg:x="2337" fg:w="1"/><text x="70.5992%" y="511.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="70.3793%" y="501" width="0.0301%" height="15" fill="rgb(211,33,43)" fg:x="2338" fg:w="1"/><text x="70.6293%" y="511.50"></text></g><g><title>decision-tree`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="70.5599%" y="485" width="0.0301%" height="15" fill="rgb(245,58,50)" fg:x="2344" fg:w="1"/><text x="70.8099%" y="495.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.36%)</title><rect x="70.5900%" y="485" width="0.3612%" height="15" fill="rgb(244,68,36)" fg:x="2345" fg:w="12"/><text x="70.8400%" y="495.50"></text></g><g><title>decision-tree`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="71.5533%" y="453" width="0.0301%" height="15" fill="rgb(232,229,15)" fg:x="2377" fg:w="1"/><text x="71.8033%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (74 samples, 2.23%)</title><rect x="72.7875%" y="421" width="2.2276%" height="15" fill="rgb(254,30,23)" fg:x="2418" fg:w="74"/><text x="73.0375%" y="431.50">l..</text></g><g><title>libsystem_malloc.dylib`free (87 samples, 2.62%)</title><rect x="72.4564%" y="437" width="2.6189%" height="15" fill="rgb(235,160,14)" fg:x="2407" fg:w="87"/><text x="72.7064%" y="447.50">li..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.06%)</title><rect x="75.0151%" y="421" width="0.0602%" height="15" fill="rgb(212,155,44)" fg:x="2492" fg:w="2"/><text x="75.2651%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (13 samples, 0.39%)</title><rect x="75.0753%" y="437" width="0.3913%" height="15" fill="rgb(226,2,50)" fg:x="2494" fg:w="13"/><text x="75.3253%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (81 samples, 2.44%)</title><rect x="75.4666%" y="437" width="2.4383%" height="15" fill="rgb(234,177,6)" fg:x="2507" fg:w="81"/><text x="75.7166%" y="447.50">li..</text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (5 samples, 0.15%)</title><rect x="77.7544%" y="421" width="0.1505%" height="15" fill="rgb(217,24,9)" fg:x="2583" fg:w="5"/><text x="78.0044%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`madvise (5 samples, 0.15%)</title><rect x="77.7544%" y="405" width="0.1505%" height="15" fill="rgb(220,13,46)" fg:x="2583" fg:w="5"/><text x="78.0044%" y="415.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (213 samples, 6.41%)</title><rect x="71.5834%" y="453" width="6.4118%" height="15" fill="rgb(239,221,27)" fg:x="2378" fg:w="213"/><text x="71.8334%" y="463.50">decision..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.09%)</title><rect x="77.9049%" y="437" width="0.0903%" height="15" fill="rgb(222,198,25)" fg:x="2588" fg:w="3"/><text x="78.1549%" y="447.50"></text></g><g><title>decision-tree`__rdl_dealloc (3 samples, 0.09%)</title><rect x="77.9952%" y="453" width="0.0903%" height="15" fill="rgb(211,99,13)" fg:x="2591" fg:w="3"/><text x="78.2452%" y="463.50"></text></g><g><title>decision-tree`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.36%)</title><rect x="79.7110%" y="437" width="0.3612%" height="15" fill="rgb(232,111,31)" fg:x="2648" fg:w="12"/><text x="79.9610%" y="447.50"></text></g><g><title>decision-tree`&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (9 samples, 0.27%)</title><rect x="79.8013%" y="421" width="0.2709%" height="15" fill="rgb(245,82,37)" fg:x="2651" fg:w="9"/><text x="80.0513%" y="431.50"></text></g><g><title>decision-tree`&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (2 samples, 0.06%)</title><rect x="80.0722%" y="437" width="0.0602%" height="15" fill="rgb(227,149,46)" fg:x="2660" fg:w="2"/><text x="80.3222%" y="447.50"></text></g><g><title>decision-tree`core::alloc::layout::Layout::array::inner (98 samples, 2.95%)</title><rect x="80.1325%" y="437" width="2.9500%" height="15" fill="rgb(218,36,50)" fg:x="2662" fg:w="98"/><text x="80.3825%" y="447.50">dec..</text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (175 samples, 5.27%)</title><rect x="78.0855%" y="453" width="5.2679%" height="15" fill="rgb(226,80,48)" fg:x="2594" fg:w="175"/><text x="78.3355%" y="463.50">decisi..</text></g><g><title>decision-tree`core::result::Result&lt;T,E&gt;::unwrap_unchecked (9 samples, 0.27%)</title><rect x="83.0825%" y="437" width="0.2709%" height="15" fill="rgb(238,224,15)" fg:x="2760" fg:w="9"/><text x="83.3325%" y="447.50"></text></g><g><title>decision-tree`core::alloc::layout::Layout::array::inner (6 samples, 0.18%)</title><rect x="83.3534%" y="453" width="0.1806%" height="15" fill="rgb(241,136,10)" fg:x="2769" fg:w="6"/><text x="83.6034%" y="463.50"></text></g><g><title>decision-tree`core::result::Result&lt;T,E&gt;::unwrap_unchecked (2 samples, 0.06%)</title><rect x="83.5340%" y="453" width="0.0602%" height="15" fill="rgb(208,32,45)" fg:x="2775" fg:w="2"/><text x="83.7840%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.12%)</title><rect x="83.5942%" y="453" width="0.1204%" height="15" fill="rgb(207,135,9)" fg:x="2777" fg:w="4"/><text x="83.8442%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.09%)</title><rect x="83.7146%" y="453" width="0.0903%" height="15" fill="rgb(206,86,44)" fg:x="2781" fg:w="3"/><text x="83.9646%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.09%)</title><rect x="83.8049%" y="453" width="0.0903%" height="15" fill="rgb(245,177,15)" fg:x="2784" fg:w="3"/><text x="84.0549%" y="463.50"></text></g><g><title>decision-tree`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (432 samples, 13.00%)</title><rect x="70.9813%" y="469" width="13.0042%" height="15" fill="rgb(206,64,50)" fg:x="2358" fg:w="432"/><text x="71.2313%" y="479.50">decision-tree`&lt;alloc..</text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.09%)</title><rect x="83.8952%" y="453" width="0.0903%" height="15" fill="rgb(234,36,40)" fg:x="2787" fg:w="3"/><text x="84.1452%" y="463.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::string::String&gt; (457 samples, 13.76%)</title><rect x="70.2589%" y="517" width="13.7568%" height="15" fill="rgb(213,64,8)" fg:x="2334" fg:w="457"/><text x="70.5089%" y="527.50">decision-tree`core::p..</text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (452 samples, 13.61%)</title><rect x="70.4094%" y="501" width="13.6063%" height="15" fill="rgb(210,75,36)" fg:x="2339" fg:w="452"/><text x="70.6594%" y="511.50">decision-tree`core::p..</text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (434 samples, 13.06%)</title><rect x="70.9512%" y="485" width="13.0644%" height="15" fill="rgb(229,88,21)" fg:x="2357" fg:w="434"/><text x="71.2012%" y="495.50">decision-tree`core::..</text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="83.9856%" y="469" width="0.0301%" height="15" fill="rgb(252,204,47)" fg:x="2790" fg:w="1"/><text x="84.2356%" y="479.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (461 samples, 13.88%)</title><rect x="70.1686%" y="533" width="13.8772%" height="15" fill="rgb(208,77,27)" fg:x="2331" fg:w="461"/><text x="70.4186%" y="543.50">decision-tree`core::p..</text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.03%)</title><rect x="84.0157%" y="517" width="0.0301%" height="15" fill="rgb(221,76,26)" fg:x="2791" fg:w="1"/><text x="84.2657%" y="527.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (466 samples, 14.03%)</title><rect x="70.1385%" y="549" width="14.0277%" height="15" fill="rgb(225,139,18)" fg:x="2330" fg:w="466"/><text x="70.3885%" y="559.50">decision-tree`&lt;alloc:..</text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.12%)</title><rect x="84.0458%" y="533" width="0.1204%" height="15" fill="rgb(230,137,11)" fg:x="2792" fg:w="4"/><text x="84.2958%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.03%)</title><rect x="84.2565%" y="501" width="0.0301%" height="15" fill="rgb(212,28,1)" fg:x="2799" fg:w="1"/><text x="84.5065%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.03%)</title><rect x="84.2866%" y="485" width="0.0301%" height="15" fill="rgb(248,164,17)" fg:x="2800" fg:w="1"/><text x="84.5366%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.30%)</title><rect x="84.2866%" y="501" width="0.3010%" height="15" fill="rgb(222,171,42)" fg:x="2800" fg:w="10"/><text x="84.5366%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.27%)</title><rect x="84.3167%" y="485" width="0.2709%" height="15" fill="rgb(243,84,45)" fg:x="2801" fg:w="9"/><text x="84.5667%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.21%)</title><rect x="84.3769%" y="469" width="0.2107%" height="15" fill="rgb(252,49,23)" fg:x="2803" fg:w="7"/><text x="84.6269%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (1 samples, 0.03%)</title><rect x="84.9187%" y="485" width="0.0301%" height="15" fill="rgb(215,19,7)" fg:x="2821" fg:w="1"/><text x="85.1687%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.66%)</title><rect x="84.5876%" y="501" width="0.6623%" height="15" fill="rgb(238,81,41)" fg:x="2810" fg:w="22"/><text x="84.8376%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.30%)</title><rect x="84.9488%" y="485" width="0.3010%" height="15" fill="rgb(210,199,37)" fg:x="2822" fg:w="10"/><text x="85.1988%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.12%)</title><rect x="85.1294%" y="469" width="0.1204%" height="15" fill="rgb(244,192,49)" fg:x="2828" fg:w="4"/><text x="85.3794%" y="479.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (35 samples, 1.05%)</title><rect x="84.2264%" y="517" width="1.0536%" height="15" fill="rgb(226,211,11)" fg:x="2798" fg:w="35"/><text x="84.4764%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (1 samples, 0.03%)</title><rect x="85.2498%" y="501" width="0.0301%" height="15" fill="rgb(236,162,54)" fg:x="2832" fg:w="1"/><text x="85.4998%" y="511.50"></text></g><g><title>decision-tree`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.06%)</title><rect x="85.3703%" y="501" width="0.0602%" height="15" fill="rgb(220,229,9)" fg:x="2836" fg:w="2"/><text x="85.6203%" y="511.50"></text></g><g><title>decision-tree`&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (1 samples, 0.03%)</title><rect x="85.4305%" y="501" width="0.0301%" height="15" fill="rgb(250,87,22)" fg:x="2838" fg:w="1"/><text x="85.6805%" y="511.50"></text></g><g><title>decision-tree`core::alloc::layout::Layout::array::inner (5 samples, 0.15%)</title><rect x="85.4606%" y="501" width="0.1505%" height="15" fill="rgb(239,43,17)" fg:x="2839" fg:w="5"/><text x="85.7106%" y="511.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (517 samples, 15.56%)</title><rect x="70.0783%" y="565" width="15.5629%" height="15" fill="rgb(231,177,25)" fg:x="2328" fg:w="517"/><text x="70.3283%" y="575.50">decision-tree`core::ptr:..</text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (49 samples, 1.48%)</title><rect x="84.1662%" y="549" width="1.4750%" height="15" fill="rgb(219,179,1)" fg:x="2796" fg:w="49"/><text x="84.4162%" y="559.50"></text></g><g><title>decision-tree`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 1.44%)</title><rect x="84.1963%" y="533" width="1.4449%" height="15" fill="rgb(238,219,53)" fg:x="2797" fg:w="48"/><text x="84.4463%" y="543.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12 samples, 0.36%)</title><rect x="85.2800%" y="517" width="0.3612%" height="15" fill="rgb(232,167,36)" fg:x="2833" fg:w="12"/><text x="85.5300%" y="527.50"></text></g><g><title>decision-tree`core::result::Result&lt;T,E&gt;::unwrap_unchecked (1 samples, 0.03%)</title><rect x="85.6111%" y="501" width="0.0301%" height="15" fill="rgb(244,19,51)" fg:x="2844" fg:w="1"/><text x="85.8611%" y="511.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="85.6412%" y="549" width="0.0301%" height="15" fill="rgb(224,6,22)" fg:x="2845" fg:w="1"/><text x="85.8912%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.06%)</title><rect x="85.7616%" y="501" width="0.0602%" height="15" fill="rgb(224,145,5)" fg:x="2849" fg:w="2"/><text x="86.0116%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.15%)</title><rect x="85.8218%" y="501" width="0.1505%" height="15" fill="rgb(234,130,49)" fg:x="2851" fg:w="5"/><text x="86.0718%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.12%)</title><rect x="85.8519%" y="485" width="0.1204%" height="15" fill="rgb(254,6,2)" fg:x="2852" fg:w="4"/><text x="86.1019%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (1 samples, 0.03%)</title><rect x="85.9723%" y="501" width="0.0301%" height="15" fill="rgb(208,96,46)" fg:x="2856" fg:w="1"/><text x="86.2223%" y="511.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.48%)</title><rect x="85.7014%" y="517" width="0.4816%" height="15" fill="rgb(239,3,39)" fg:x="2847" fg:w="16"/><text x="85.9514%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.18%)</title><rect x="86.0024%" y="501" width="0.1806%" height="15" fill="rgb(233,210,1)" fg:x="2857" fg:w="6"/><text x="86.2524%" y="511.50"></text></g><g><title>decision-tree`&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (1 samples, 0.03%)</title><rect x="86.3636%" y="501" width="0.0301%" height="15" fill="rgb(244,137,37)" fg:x="2869" fg:w="1"/><text x="86.6136%" y="511.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.42%)</title><rect x="86.1830%" y="517" width="0.4214%" height="15" fill="rgb(240,136,2)" fg:x="2863" fg:w="14"/><text x="86.4330%" y="527.50"></text></g><g><title>decision-tree`core::alloc::layout::Layout::array::inner (7 samples, 0.21%)</title><rect x="86.3937%" y="501" width="0.2107%" height="15" fill="rgb(239,18,37)" fg:x="2870" fg:w="7"/><text x="86.6437%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.03%)</title><rect x="86.6045%" y="517" width="0.0301%" height="15" fill="rgb(218,185,22)" fg:x="2877" fg:w="1"/><text x="86.8545%" y="527.50"></text></g><g><title>decision-tree`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.99%)</title><rect x="85.6713%" y="533" width="0.9934%" height="15" fill="rgb(225,218,4)" fg:x="2846" fg:w="33"/><text x="85.9213%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.03%)</title><rect x="86.6346%" y="517" width="0.0301%" height="15" fill="rgb(230,182,32)" fg:x="2878" fg:w="1"/><text x="86.8846%" y="527.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (35 samples, 1.05%)</title><rect x="85.6412%" y="565" width="1.0536%" height="15" fill="rgb(242,56,43)" fg:x="2845" fg:w="35"/><text x="85.8912%" y="575.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (34 samples, 1.02%)</title><rect x="85.6713%" y="549" width="1.0235%" height="15" fill="rgb(233,99,24)" fg:x="2846" fg:w="34"/><text x="85.9213%" y="559.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="86.6647%" y="533" width="0.0301%" height="15" fill="rgb(234,209,42)" fg:x="2879" fg:w="1"/><text x="86.9147%" y="543.50"></text></g><g><title>decision-tree`core::result::Result&lt;T,E&gt;::unwrap (21 samples, 0.63%)</title><rect x="86.6948%" y="565" width="0.6321%" height="15" fill="rgb(227,7,12)" fg:x="2880" fg:w="21"/><text x="86.9448%" y="575.50"></text></g><g><title>decision-tree`&lt;f32 as core::num::dec2flt::float::RawFloat&gt;::from_u64 (1 samples, 0.03%)</title><rect x="92.7152%" y="517" width="0.0301%" height="15" fill="rgb(245,203,43)" fg:x="3080" fg:w="1"/><text x="92.9652%" y="527.50"></text></g><g><title>decision-tree`&lt;f32 as core::ops::arith::Mul&gt;::mul (3 samples, 0.09%)</title><rect x="92.7453%" y="517" width="0.0903%" height="15" fill="rgb(238,205,33)" fg:x="3081" fg:w="3"/><text x="92.9953%" y="527.50"></text></g><g><title>decision-tree`core::num::dec2flt::fpu::fpu_precision::set_precision (1 samples, 0.03%)</title><rect x="92.8356%" y="517" width="0.0301%" height="15" fill="rgb(231,56,7)" fg:x="3084" fg:w="1"/><text x="93.0856%" y="527.50"></text></g><g><title>decision-tree`&lt;f32 as core::num::dec2flt::float::RawFloat&gt;::from_u64 (2 samples, 0.06%)</title><rect x="93.4979%" y="501" width="0.0602%" height="15" fill="rgb(244,186,29)" fg:x="3106" fg:w="2"/><text x="93.7479%" y="511.50"></text></g><g><title>decision-tree`&lt;f32 as core::num::dec2flt::float::RawFloat&gt;::pow10_fast_path (2 samples, 0.06%)</title><rect x="93.5581%" y="501" width="0.0602%" height="15" fill="rgb(234,111,31)" fg:x="3108" fg:w="2"/><text x="93.8081%" y="511.50"></text></g><g><title>decision-tree`&lt;f32 as core::ops::arith::Div&gt;::div (1 samples, 0.03%)</title><rect x="93.6183%" y="501" width="0.0301%" height="15" fill="rgb(241,149,10)" fg:x="3110" fg:w="1"/><text x="93.8683%" y="511.50"></text></g><g><title>decision-tree`&lt;f32 as core::ops::arith::Mul&gt;::mul (2 samples, 0.06%)</title><rect x="93.6484%" y="501" width="0.0602%" height="15" fill="rgb(249,206,44)" fg:x="3111" fg:w="2"/><text x="93.8984%" y="511.50"></text></g><g><title>decision-tree`core::num::dec2flt::number::Number::try_fast_path (52 samples, 1.57%)</title><rect x="92.8657%" y="517" width="1.5653%" height="15" fill="rgb(251,153,30)" fg:x="3085" fg:w="52"/><text x="93.1157%" y="527.50"></text></g><g><title>decision-tree`core::num::dec2flt::number::Number::is_fast_path (24 samples, 0.72%)</title><rect x="93.7086%" y="501" width="0.7225%" height="15" fill="rgb(239,152,38)" fg:x="3113" fg:w="24"/><text x="93.9586%" y="511.50"></text></g><g><title>decision-tree`core::num::dec2flt::dec2flt (221 samples, 6.65%)</title><rect x="88.3805%" y="533" width="6.6526%" height="15" fill="rgb(249,139,47)" fg:x="2936" fg:w="221"/><text x="88.6305%" y="543.50">decision-..</text></g><g><title>decision-tree`core::num::dec2flt::parse::parse_number (20 samples, 0.60%)</title><rect x="94.4311%" y="517" width="0.6020%" height="15" fill="rgb(244,64,35)" fg:x="3137" fg:w="20"/><text x="94.6811%" y="527.50"></text></g><g><title>decision-tree`core::num::dec2flt::number::Number::try_fast_path (3 samples, 0.09%)</title><rect x="95.0331%" y="533" width="0.0903%" height="15" fill="rgb(216,46,15)" fg:x="3157" fg:w="3"/><text x="95.2831%" y="543.50"></text></g><g><title>decision-tree`core::num::dec2flt::_&lt;impl core::str::traits::FromStr for f32&gt;::from_str (243 samples, 7.31%)</title><rect x="87.8387%" y="549" width="7.3149%" height="15" fill="rgb(250,74,19)" fg:x="2918" fg:w="243"/><text x="88.0887%" y="559.50">decision-t..</text></g><g><title>decision-tree`core::num::dec2flt::parse::parse_number (1 samples, 0.03%)</title><rect x="95.1234%" y="533" width="0.0301%" height="15" fill="rgb(249,42,33)" fg:x="3160" fg:w="1"/><text x="95.3734%" y="543.50"></text></g><g><title>decision-tree`core::str::_&lt;impl str&gt;::parse (261 samples, 7.86%)</title><rect x="87.3269%" y="565" width="7.8567%" height="15" fill="rgb(242,149,17)" fg:x="2901" fg:w="261"/><text x="87.5769%" y="575.50">decision-tr..</text></g><g><title>decision-tree`core::num::dec2flt::dec2flt (1 samples, 0.03%)</title><rect x="95.1535%" y="549" width="0.0301%" height="15" fill="rgb(244,29,21)" fg:x="3161" fg:w="1"/><text x="95.4035%" y="559.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (4 samples, 0.12%)</title><rect x="95.5148%" y="517" width="0.1204%" height="15" fill="rgb(220,130,37)" fg:x="3173" fg:w="4"/><text x="95.7648%" y="527.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (4 samples, 0.12%)</title><rect x="95.5148%" y="501" width="0.1204%" height="15" fill="rgb(211,67,2)" fg:x="3173" fg:w="4"/><text x="95.7648%" y="511.50"></text></g><g><title>decision-tree`&lt;char as core::str::pattern::Pattern&gt;::into_searcher (13 samples, 0.39%)</title><rect x="95.2739%" y="549" width="0.3913%" height="15" fill="rgb(235,68,52)" fg:x="3165" fg:w="13"/><text x="95.5239%" y="559.50"></text></g><g><title>decision-tree`core::char::methods::encode_utf8_raw (9 samples, 0.27%)</title><rect x="95.3943%" y="533" width="0.2709%" height="15" fill="rgb(246,142,3)" fg:x="3169" fg:w="9"/><text x="95.6443%" y="543.50"></text></g><g><title>decision-tree`core::char::methods::len_utf8 (1 samples, 0.03%)</title><rect x="95.6352%" y="517" width="0.0301%" height="15" fill="rgb(241,25,7)" fg:x="3177" fg:w="1"/><text x="95.8852%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.15%)</title><rect x="95.6653%" y="549" width="0.1505%" height="15" fill="rgb(242,119,39)" fg:x="3178" fg:w="5"/><text x="95.9153%" y="559.50"></text></g><g><title>decision-tree`core::str::_&lt;impl str&gt;::split (22 samples, 0.66%)</title><rect x="95.1836%" y="565" width="0.6623%" height="15" fill="rgb(241,98,45)" fg:x="3162" fg:w="22"/><text x="95.4336%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="95.8158%" y="549" width="0.0301%" height="15" fill="rgb(254,28,30)" fg:x="3183" fg:w="1"/><text x="96.0658%" y="559.50"></text></g><g><title>decision-tree`csv::reader::Reader&lt;R&gt;::from_reader (1 samples, 0.03%)</title><rect x="95.8459%" y="565" width="0.0301%" height="15" fill="rgb(241,142,54)" fg:x="3184" fg:w="1"/><text x="96.0959%" y="575.50"></text></g><g><title>decision-tree`csv::reader::ReaderBuilder::from_reader (1 samples, 0.03%)</title><rect x="95.8459%" y="549" width="0.0301%" height="15" fill="rgb(222,85,15)" fg:x="3184" fg:w="1"/><text x="96.0959%" y="559.50"></text></g><g><title>decision-tree`csv::reader::Reader&lt;R&gt;::new (1 samples, 0.03%)</title><rect x="95.8459%" y="533" width="0.0301%" height="15" fill="rgb(210,85,47)" fg:x="3184" fg:w="1"/><text x="96.0959%" y="543.50"></text></g><g><title>decision-tree`csv_core::reader::ReaderBuilder::build (1 samples, 0.03%)</title><rect x="95.8459%" y="517" width="0.0301%" height="15" fill="rgb(224,206,25)" fg:x="3184" fg:w="1"/><text x="96.0959%" y="527.50"></text></g><g><title>decision-tree`csv_core::reader::Reader::build_dfa (1 samples, 0.03%)</title><rect x="95.8459%" y="501" width="0.0301%" height="15" fill="rgb(243,201,19)" fg:x="3184" fg:w="1"/><text x="96.0959%" y="511.50"></text></g><g><title>decision-tree`csv_core::reader::Dfa::new_state (1 samples, 0.03%)</title><rect x="95.8459%" y="485" width="0.0301%" height="15" fill="rgb(236,59,4)" fg:x="3184" fg:w="1"/><text x="96.0959%" y="495.50"></text></g><g><title>decision-tree`core::num::_&lt;impl u8&gt;::checked_mul (1 samples, 0.03%)</title><rect x="95.8459%" y="469" width="0.0301%" height="15" fill="rgb(254,179,45)" fg:x="3184" fg:w="1"/><text x="96.0959%" y="479.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::fold (2 samples, 0.06%)</title><rect x="95.8760%" y="549" width="0.0602%" height="15" fill="rgb(226,14,10)" fg:x="3185" fg:w="2"/><text x="96.1260%" y="559.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::fit::_{{closure}} (2 samples, 0.06%)</title><rect x="95.8760%" y="533" width="0.0602%" height="15" fill="rgb(244,27,41)" fg:x="3185" fg:w="2"/><text x="96.1260%" y="543.50"></text></g><g><title>decision-tree`core::slice::_&lt;impl [T]&gt;::contains (2 samples, 0.06%)</title><rect x="95.8760%" y="517" width="0.0602%" height="15" fill="rgb(235,35,32)" fg:x="3185" fg:w="2"/><text x="96.1260%" y="527.50"></text></g><g><title>decision-tree`&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (2 samples, 0.06%)</title><rect x="95.8760%" y="501" width="0.0602%" height="15" fill="rgb(218,68,31)" fg:x="3185" fg:w="2"/><text x="96.1260%" y="511.50"></text></g><g><title>decision-tree`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (2 samples, 0.06%)</title><rect x="95.8760%" y="485" width="0.0602%" height="15" fill="rgb(207,120,37)" fg:x="3185" fg:w="2"/><text x="96.1260%" y="495.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (1 samples, 0.03%)</title><rect x="95.9362%" y="293" width="0.0301%" height="15" fill="rgb(227,98,0)" fg:x="3187" fg:w="1"/><text x="96.1862%" y="303.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (1 samples, 0.03%)</title><rect x="95.9362%" y="277" width="0.0301%" height="15" fill="rgb(207,7,3)" fg:x="3187" fg:w="1"/><text x="96.1862%" y="287.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::get_best_split (1 samples, 0.03%)</title><rect x="95.9362%" y="261" width="0.0301%" height="15" fill="rgb(206,98,19)" fg:x="3187" fg:w="1"/><text x="96.1862%" y="271.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::split (1 samples, 0.03%)</title><rect x="95.9362%" y="245" width="0.0301%" height="15" fill="rgb(217,5,26)" fg:x="3187" fg:w="1"/><text x="96.1862%" y="255.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="95.9362%" y="229" width="0.0301%" height="15" fill="rgb(235,190,38)" fg:x="3187" fg:w="1"/><text x="96.1862%" y="239.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="95.9362%" y="213" width="0.0301%" height="15" fill="rgb(247,86,24)" fg:x="3187" fg:w="1"/><text x="96.1862%" y="223.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (2 samples, 0.06%)</title><rect x="95.9362%" y="309" width="0.0602%" height="15" fill="rgb(205,101,16)" fg:x="3187" fg:w="2"/><text x="96.1862%" y="319.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::get_best_split (1 samples, 0.03%)</title><rect x="95.9663%" y="293" width="0.0301%" height="15" fill="rgb(246,168,33)" fg:x="3188" fg:w="1"/><text x="96.2163%" y="303.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::split (1 samples, 0.03%)</title><rect x="95.9663%" y="277" width="0.0301%" height="15" fill="rgb(231,114,1)" fg:x="3188" fg:w="1"/><text x="96.2163%" y="287.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="95.9663%" y="261" width="0.0301%" height="15" fill="rgb(207,184,53)" fg:x="3188" fg:w="1"/><text x="96.2163%" y="271.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::information_gain (1 samples, 0.03%)</title><rect x="95.9964%" y="293" width="0.0301%" height="15" fill="rgb(224,95,51)" fg:x="3189" fg:w="1"/><text x="96.2464%" y="303.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (1 samples, 0.03%)</title><rect x="95.9964%" y="277" width="0.0301%" height="15" fill="rgb(212,188,45)" fg:x="3189" fg:w="1"/><text x="96.2464%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.03%)</title><rect x="95.9964%" y="261" width="0.0301%" height="15" fill="rgb(223,154,38)" fg:x="3189" fg:w="1"/><text x="96.2464%" y="271.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="96.0566%" y="165" width="0.0301%" height="15" fill="rgb(251,22,52)" fg:x="3191" fg:w="1"/><text x="96.3066%" y="175.50"></text></g><g><title>decision-tree`&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (1 samples, 0.03%)</title><rect x="96.0566%" y="149" width="0.0301%" height="15" fill="rgb(229,209,22)" fg:x="3191" fg:w="1"/><text x="96.3066%" y="159.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (6 samples, 0.18%)</title><rect x="95.9362%" y="325" width="0.1806%" height="15" fill="rgb(234,138,34)" fg:x="3187" fg:w="6"/><text x="96.1862%" y="335.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::get_best_split (4 samples, 0.12%)</title><rect x="95.9964%" y="309" width="0.1204%" height="15" fill="rgb(212,95,11)" fg:x="3189" fg:w="4"/><text x="96.2464%" y="319.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::split (3 samples, 0.09%)</title><rect x="96.0265%" y="293" width="0.0903%" height="15" fill="rgb(240,179,47)" fg:x="3190" fg:w="3"/><text x="96.2765%" y="303.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (3 samples, 0.09%)</title><rect x="96.0265%" y="277" width="0.0903%" height="15" fill="rgb(240,163,11)" fg:x="3190" fg:w="3"/><text x="96.2765%" y="287.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.09%)</title><rect x="96.0265%" y="261" width="0.0903%" height="15" fill="rgb(236,37,12)" fg:x="3190" fg:w="3"/><text x="96.2765%" y="271.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.09%)</title><rect x="96.0265%" y="245" width="0.0903%" height="15" fill="rgb(232,164,16)" fg:x="3190" fg:w="3"/><text x="96.2765%" y="255.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.09%)</title><rect x="96.0265%" y="229" width="0.0903%" height="15" fill="rgb(244,205,15)" fg:x="3190" fg:w="3"/><text x="96.2765%" y="239.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.09%)</title><rect x="96.0265%" y="213" width="0.0903%" height="15" fill="rgb(223,117,47)" fg:x="3190" fg:w="3"/><text x="96.2765%" y="223.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.09%)</title><rect x="96.0265%" y="197" width="0.0903%" height="15" fill="rgb(244,107,35)" fg:x="3190" fg:w="3"/><text x="96.2765%" y="207.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.09%)</title><rect x="96.0265%" y="181" width="0.0903%" height="15" fill="rgb(205,140,8)" fg:x="3190" fg:w="3"/><text x="96.2765%" y="191.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="96.0867%" y="165" width="0.0301%" height="15" fill="rgb(228,84,46)" fg:x="3192" fg:w="1"/><text x="96.3367%" y="175.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="96.0867%" y="149" width="0.0301%" height="15" fill="rgb(254,188,9)" fg:x="3192" fg:w="1"/><text x="96.3367%" y="159.50"></text></g><g><title>decision-tree`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="96.0867%" y="133" width="0.0301%" height="15" fill="rgb(206,112,54)" fg:x="3192" fg:w="1"/><text x="96.3367%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.03%)</title><rect x="96.0867%" y="117" width="0.0301%" height="15" fill="rgb(216,84,49)" fg:x="3192" fg:w="1"/><text x="96.3367%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.03%)</title><rect x="96.0867%" y="101" width="0.0301%" height="15" fill="rgb(214,194,35)" fg:x="3192" fg:w="1"/><text x="96.3367%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.03%)</title><rect x="96.0867%" y="85" width="0.0301%" height="15" fill="rgb(249,28,3)" fg:x="3192" fg:w="1"/><text x="96.3367%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.03%)</title><rect x="96.0867%" y="69" width="0.0301%" height="15" fill="rgb(222,56,52)" fg:x="3192" fg:w="1"/><text x="96.3367%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.03%)</title><rect x="96.0867%" y="53" width="0.0301%" height="15" fill="rgb(245,217,50)" fg:x="3192" fg:w="1"/><text x="96.3367%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.03%)</title><rect x="96.0867%" y="37" width="0.0301%" height="15" fill="rgb(213,201,24)" fg:x="3192" fg:w="1"/><text x="96.3367%" y="47.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::information_gain (1 samples, 0.03%)</title><rect x="96.1168%" y="309" width="0.0301%" height="15" fill="rgb(248,116,28)" fg:x="3193" fg:w="1"/><text x="96.3668%" y="319.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (1 samples, 0.03%)</title><rect x="96.1168%" y="293" width="0.0301%" height="15" fill="rgb(219,72,43)" fg:x="3193" fg:w="1"/><text x="96.3668%" y="303.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="96.1168%" y="277" width="0.0301%" height="15" fill="rgb(209,138,14)" fg:x="3193" fg:w="1"/><text x="96.3668%" y="287.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (8 samples, 0.24%)</title><rect x="95.9362%" y="341" width="0.2408%" height="15" fill="rgb(222,18,33)" fg:x="3187" fg:w="8"/><text x="96.1862%" y="351.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::get_best_split (2 samples, 0.06%)</title><rect x="96.1168%" y="325" width="0.0602%" height="15" fill="rgb(213,199,7)" fg:x="3193" fg:w="2"/><text x="96.3668%" y="335.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::split (1 samples, 0.03%)</title><rect x="96.1469%" y="309" width="0.0301%" height="15" fill="rgb(250,110,10)" fg:x="3194" fg:w="1"/><text x="96.3969%" y="319.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="96.1469%" y="293" width="0.0301%" height="15" fill="rgb(248,123,6)" fg:x="3194" fg:w="1"/><text x="96.3969%" y="303.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="96.1469%" y="277" width="0.0301%" height="15" fill="rgb(206,91,31)" fg:x="3194" fg:w="1"/><text x="96.3969%" y="287.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="96.1469%" y="261" width="0.0301%" height="15" fill="rgb(211,154,13)" fg:x="3194" fg:w="1"/><text x="96.3969%" y="271.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="96.1469%" y="245" width="0.0301%" height="15" fill="rgb(225,148,7)" fg:x="3194" fg:w="1"/><text x="96.3969%" y="255.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="96.1469%" y="229" width="0.0301%" height="15" fill="rgb(220,160,43)" fg:x="3194" fg:w="1"/><text x="96.3969%" y="239.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="96.1469%" y="213" width="0.0301%" height="15" fill="rgb(213,52,39)" fg:x="3194" fg:w="1"/><text x="96.3969%" y="223.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="96.1469%" y="197" width="0.0301%" height="15" fill="rgb(243,137,7)" fg:x="3194" fg:w="1"/><text x="96.3969%" y="207.50"></text></g><g><title>decision-tree`core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="96.1469%" y="181" width="0.0301%" height="15" fill="rgb(230,79,13)" fg:x="3194" fg:w="1"/><text x="96.3969%" y="191.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;decision_tree::dtree::Matrix&gt; (1 samples, 0.03%)</title><rect x="96.1770%" y="325" width="0.0301%" height="15" fill="rgb(247,105,23)" fg:x="3195" fg:w="1"/><text x="96.4270%" y="335.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (1 samples, 0.03%)</title><rect x="96.1770%" y="309" width="0.0301%" height="15" fill="rgb(223,179,41)" fg:x="3195" fg:w="1"/><text x="96.4270%" y="319.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (1 samples, 0.03%)</title><rect x="96.1770%" y="293" width="0.0301%" height="15" fill="rgb(218,9,34)" fg:x="3195" fg:w="1"/><text x="96.4270%" y="303.50"></text></g><g><title>decision-tree`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="96.1770%" y="277" width="0.0301%" height="15" fill="rgb(222,106,8)" fg:x="3195" fg:w="1"/><text x="96.4270%" y="287.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="96.1770%" y="261" width="0.0301%" height="15" fill="rgb(211,220,0)" fg:x="3195" fg:w="1"/><text x="96.4270%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.03%)</title><rect x="96.1770%" y="245" width="0.0301%" height="15" fill="rgb(229,52,16)" fg:x="3195" fg:w="1"/><text x="96.4270%" y="255.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::information_gain (1 samples, 0.03%)</title><rect x="96.2071%" y="325" width="0.0301%" height="15" fill="rgb(212,155,18)" fg:x="3196" fg:w="1"/><text x="96.4571%" y="335.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (1 samples, 0.03%)</title><rect x="96.2071%" y="309" width="0.0301%" height="15" fill="rgb(242,21,14)" fg:x="3196" fg:w="1"/><text x="96.4571%" y="319.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::sum (1 samples, 0.03%)</title><rect x="96.2071%" y="293" width="0.0301%" height="15" fill="rgb(222,19,48)" fg:x="3196" fg:w="1"/><text x="96.4571%" y="303.50"></text></g><g><title>decision-tree`&lt;f32 as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.03%)</title><rect x="96.2071%" y="277" width="0.0301%" height="15" fill="rgb(232,45,27)" fg:x="3196" fg:w="1"/><text x="96.4571%" y="287.50"></text></g><g><title>decision-tree`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="96.2071%" y="261" width="0.0301%" height="15" fill="rgb(249,103,42)" fg:x="3196" fg:w="1"/><text x="96.4571%" y="271.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="96.2071%" y="245" width="0.0301%" height="15" fill="rgb(246,81,33)" fg:x="3196" fg:w="1"/><text x="96.4571%" y="255.50"></text></g><g><title>decision-tree`core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.03%)</title><rect x="96.2071%" y="229" width="0.0301%" height="15" fill="rgb(252,33,42)" fg:x="3196" fg:w="1"/><text x="96.4571%" y="239.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index::_{{closure}} (1 samples, 0.03%)</title><rect x="96.2071%" y="213" width="0.0301%" height="15" fill="rgb(209,212,41)" fg:x="3196" fg:w="1"/><text x="96.4571%" y="223.50"></text></g><g><title>decision-tree`decision_tree::dtree::utils::count_vals (1 samples, 0.03%)</title><rect x="96.2071%" y="197" width="0.0301%" height="15" fill="rgb(207,154,6)" fg:x="3196" fg:w="1"/><text x="96.4571%" y="207.50"></text></g><g><title>decision-tree`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="96.2071%" y="181" width="0.0301%" height="15" fill="rgb(223,64,47)" fg:x="3196" fg:w="1"/><text x="96.4571%" y="191.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (11 samples, 0.33%)</title><rect x="95.9362%" y="357" width="0.3311%" height="15" fill="rgb(211,161,38)" fg:x="3187" fg:w="11"/><text x="96.1862%" y="367.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::get_best_split (3 samples, 0.09%)</title><rect x="96.1770%" y="341" width="0.0903%" height="15" fill="rgb(219,138,40)" fg:x="3195" fg:w="3"/><text x="96.4270%" y="351.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::split (1 samples, 0.03%)</title><rect x="96.2372%" y="325" width="0.0301%" height="15" fill="rgb(241,228,46)" fg:x="3197" fg:w="1"/><text x="96.4872%" y="335.50"></text></g><g><title>decision-tree`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="96.2372%" y="309" width="0.0301%" height="15" fill="rgb(223,209,38)" fg:x="3197" fg:w="1"/><text x="96.4872%" y="319.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="96.2372%" y="293" width="0.0301%" height="15" fill="rgb(236,164,45)" fg:x="3197" fg:w="1"/><text x="96.4872%" y="303.50"></text></g><g><title>decision-tree`core::mem::replace (1 samples, 0.03%)</title><rect x="96.2372%" y="277" width="0.0301%" height="15" fill="rgb(231,15,5)" fg:x="3197" fg:w="1"/><text x="96.4872%" y="287.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::sum (1 samples, 0.03%)</title><rect x="96.2673%" y="309" width="0.0301%" height="15" fill="rgb(252,35,15)" fg:x="3198" fg:w="1"/><text x="96.5173%" y="319.50"></text></g><g><title>decision-tree`&lt;f32 as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.03%)</title><rect x="96.2673%" y="293" width="0.0301%" height="15" fill="rgb(248,181,18)" fg:x="3198" fg:w="1"/><text x="96.5173%" y="303.50"></text></g><g><title>decision-tree`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="96.2673%" y="277" width="0.0301%" height="15" fill="rgb(233,39,42)" fg:x="3198" fg:w="1"/><text x="96.5173%" y="287.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="96.2673%" y="261" width="0.0301%" height="15" fill="rgb(238,110,33)" fg:x="3198" fg:w="1"/><text x="96.5173%" y="271.50"></text></g><g><title>decision-tree`core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.03%)</title><rect x="96.2673%" y="245" width="0.0301%" height="15" fill="rgb(233,195,10)" fg:x="3198" fg:w="1"/><text x="96.5173%" y="255.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index::_{{closure}} (1 samples, 0.03%)</title><rect x="96.2673%" y="229" width="0.0301%" height="15" fill="rgb(254,105,3)" fg:x="3198" fg:w="1"/><text x="96.5173%" y="239.50"></text></g><g><title>decision-tree`decision_tree::dtree::utils::count_vals (1 samples, 0.03%)</title><rect x="96.2673%" y="213" width="0.0301%" height="15" fill="rgb(221,225,9)" fg:x="3198" fg:w="1"/><text x="96.5173%" y="223.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::information_gain (2 samples, 0.06%)</title><rect x="96.2673%" y="341" width="0.0602%" height="15" fill="rgb(224,227,45)" fg:x="3198" fg:w="2"/><text x="96.5173%" y="351.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (2 samples, 0.06%)</title><rect x="96.2673%" y="325" width="0.0602%" height="15" fill="rgb(229,198,43)" fg:x="3198" fg:w="2"/><text x="96.5173%" y="335.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;i32&gt;&gt; (1 samples, 0.03%)</title><rect x="96.2974%" y="309" width="0.0301%" height="15" fill="rgb(206,209,35)" fg:x="3199" fg:w="1"/><text x="96.5474%" y="319.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;i32&gt;&gt; (1 samples, 0.03%)</title><rect x="96.2974%" y="293" width="0.0301%" height="15" fill="rgb(245,195,53)" fg:x="3199" fg:w="1"/><text x="96.5474%" y="303.50"></text></g><g><title>decision-tree`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="96.2974%" y="277" width="0.0301%" height="15" fill="rgb(240,92,26)" fg:x="3199" fg:w="1"/><text x="96.5474%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="96.2974%" y="261" width="0.0301%" height="15" fill="rgb(207,40,23)" fg:x="3199" fg:w="1"/><text x="96.5474%" y="271.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (2 samples, 0.06%)</title><rect x="96.3275%" y="325" width="0.0602%" height="15" fill="rgb(223,111,35)" fg:x="3200" fg:w="2"/><text x="96.5775%" y="335.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.06%)</title><rect x="96.3275%" y="309" width="0.0602%" height="15" fill="rgb(229,147,28)" fg:x="3200" fg:w="2"/><text x="96.5775%" y="319.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.06%)</title><rect x="96.3275%" y="293" width="0.0602%" height="15" fill="rgb(211,29,28)" fg:x="3200" fg:w="2"/><text x="96.5775%" y="303.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.06%)</title><rect x="96.3275%" y="277" width="0.0602%" height="15" fill="rgb(228,72,33)" fg:x="3200" fg:w="2"/><text x="96.5775%" y="287.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.06%)</title><rect x="96.3275%" y="261" width="0.0602%" height="15" fill="rgb(205,214,31)" fg:x="3200" fg:w="2"/><text x="96.5775%" y="271.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.06%)</title><rect x="96.3275%" y="245" width="0.0602%" height="15" fill="rgb(224,111,15)" fg:x="3200" fg:w="2"/><text x="96.5775%" y="255.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.06%)</title><rect x="96.3275%" y="229" width="0.0602%" height="15" fill="rgb(253,21,26)" fg:x="3200" fg:w="2"/><text x="96.5775%" y="239.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="96.3576%" y="213" width="0.0301%" height="15" fill="rgb(245,139,43)" fg:x="3201" fg:w="1"/><text x="96.6076%" y="223.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="96.3576%" y="197" width="0.0301%" height="15" fill="rgb(252,170,7)" fg:x="3201" fg:w="1"/><text x="96.6076%" y="207.50"></text></g><g><title>decision-tree`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="96.3576%" y="181" width="0.0301%" height="15" fill="rgb(231,118,14)" fg:x="3201" fg:w="1"/><text x="96.6076%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.03%)</title><rect x="96.3576%" y="165" width="0.0301%" height="15" fill="rgb(238,83,0)" fg:x="3201" fg:w="1"/><text x="96.6076%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.03%)</title><rect x="96.3576%" y="149" width="0.0301%" height="15" fill="rgb(221,39,39)" fg:x="3201" fg:w="1"/><text x="96.6076%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.03%)</title><rect x="96.3576%" y="133" width="0.0301%" height="15" fill="rgb(222,119,46)" fg:x="3201" fg:w="1"/><text x="96.6076%" y="143.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="96.3877%" y="325" width="0.0301%" height="15" fill="rgb(222,165,49)" fg:x="3202" fg:w="1"/><text x="96.6377%" y="335.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.03%)</title><rect x="96.3877%" y="309" width="0.0301%" height="15" fill="rgb(219,113,52)" fg:x="3202" fg:w="1"/><text x="96.6377%" y="319.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="96.3877%" y="293" width="0.0301%" height="15" fill="rgb(214,7,15)" fg:x="3202" fg:w="1"/><text x="96.6377%" y="303.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="96.3877%" y="277" width="0.0301%" height="15" fill="rgb(235,32,4)" fg:x="3202" fg:w="1"/><text x="96.6377%" y="287.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="96.3877%" y="261" width="0.0301%" height="15" fill="rgb(238,90,54)" fg:x="3202" fg:w="1"/><text x="96.6377%" y="271.50"></text></g><g><title>decision-tree`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="96.3877%" y="245" width="0.0301%" height="15" fill="rgb(213,208,19)" fg:x="3202" fg:w="1"/><text x="96.6377%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.03%)</title><rect x="96.3877%" y="229" width="0.0301%" height="15" fill="rgb(233,156,4)" fg:x="3202" fg:w="1"/><text x="96.6377%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.03%)</title><rect x="96.3877%" y="213" width="0.0301%" height="15" fill="rgb(207,194,5)" fg:x="3202" fg:w="1"/><text x="96.6377%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.03%)</title><rect x="96.3877%" y="197" width="0.0301%" height="15" fill="rgb(206,111,30)" fg:x="3202" fg:w="1"/><text x="96.6377%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.03%)</title><rect x="96.3877%" y="181" width="0.0301%" height="15" fill="rgb(243,70,54)" fg:x="3202" fg:w="1"/><text x="96.6377%" y="191.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (17 samples, 0.51%)</title><rect x="95.9362%" y="373" width="0.5117%" height="15" fill="rgb(242,28,8)" fg:x="3187" fg:w="17"/><text x="96.1862%" y="383.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::get_best_split (6 samples, 0.18%)</title><rect x="96.2673%" y="357" width="0.1806%" height="15" fill="rgb(219,106,18)" fg:x="3198" fg:w="6"/><text x="96.5173%" y="367.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::split (4 samples, 0.12%)</title><rect x="96.3275%" y="341" width="0.1204%" height="15" fill="rgb(244,222,10)" fg:x="3200" fg:w="4"/><text x="96.5775%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.03%)</title><rect x="96.4178%" y="325" width="0.0301%" height="15" fill="rgb(236,179,52)" fg:x="3203" fg:w="1"/><text x="96.6678%" y="335.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.06%)</title><rect x="96.4479%" y="309" width="0.0602%" height="15" fill="rgb(213,23,39)" fg:x="3204" fg:w="2"/><text x="96.6979%" y="319.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.06%)</title><rect x="96.4479%" y="293" width="0.0602%" height="15" fill="rgb(238,48,10)" fg:x="3204" fg:w="2"/><text x="96.6979%" y="303.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.06%)</title><rect x="96.4479%" y="277" width="0.0602%" height="15" fill="rgb(251,196,23)" fg:x="3204" fg:w="2"/><text x="96.6979%" y="287.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="96.4780%" y="261" width="0.0301%" height="15" fill="rgb(250,152,24)" fg:x="3205" fg:w="1"/><text x="96.7280%" y="271.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="96.4780%" y="245" width="0.0301%" height="15" fill="rgb(209,150,17)" fg:x="3205" fg:w="1"/><text x="96.7280%" y="255.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (3 samples, 0.09%)</title><rect x="96.4479%" y="341" width="0.0903%" height="15" fill="rgb(234,202,34)" fg:x="3204" fg:w="3"/><text x="96.6979%" y="351.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.09%)</title><rect x="96.4479%" y="325" width="0.0903%" height="15" fill="rgb(253,148,53)" fg:x="3204" fg:w="3"/><text x="96.6979%" y="335.50"></text></g><g><title>decision-tree`core::slice::iter::Iter&lt;T&gt;::as_slice (1 samples, 0.03%)</title><rect x="96.5081%" y="309" width="0.0301%" height="15" fill="rgb(218,129,16)" fg:x="3206" fg:w="1"/><text x="96.7581%" y="319.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="96.5382%" y="341" width="0.0301%" height="15" fill="rgb(216,85,19)" fg:x="3207" fg:w="1"/><text x="96.7882%" y="351.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.03%)</title><rect x="96.5382%" y="325" width="0.0301%" height="15" fill="rgb(235,228,7)" fg:x="3207" fg:w="1"/><text x="96.7882%" y="335.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="96.5382%" y="309" width="0.0301%" height="15" fill="rgb(245,175,0)" fg:x="3207" fg:w="1"/><text x="96.7882%" y="319.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="96.5382%" y="293" width="0.0301%" height="15" fill="rgb(208,168,36)" fg:x="3207" fg:w="1"/><text x="96.7882%" y="303.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (22 samples, 0.66%)</title><rect x="95.9362%" y="389" width="0.6623%" height="15" fill="rgb(246,171,24)" fg:x="3187" fg:w="22"/><text x="96.1862%" y="399.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::get_best_split (5 samples, 0.15%)</title><rect x="96.4479%" y="373" width="0.1505%" height="15" fill="rgb(215,142,24)" fg:x="3204" fg:w="5"/><text x="96.6979%" y="383.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::split (5 samples, 0.15%)</title><rect x="96.4479%" y="357" width="0.1505%" height="15" fill="rgb(250,187,7)" fg:x="3204" fg:w="5"/><text x="96.6979%" y="367.50"></text></g><g><title>decision-tree`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.03%)</title><rect x="96.5683%" y="341" width="0.0301%" height="15" fill="rgb(228,66,33)" fg:x="3208" fg:w="1"/><text x="96.8183%" y="351.50"></text></g><g><title>decision-tree`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="96.5683%" y="325" width="0.0301%" height="15" fill="rgb(234,215,21)" fg:x="3208" fg:w="1"/><text x="96.8183%" y="335.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;decision_tree::dtree::Matrix&gt; (1 samples, 0.03%)</title><rect x="96.5984%" y="373" width="0.0301%" height="15" fill="rgb(222,191,20)" fg:x="3209" fg:w="1"/><text x="96.8484%" y="383.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (1 samples, 0.03%)</title><rect x="96.5984%" y="357" width="0.0301%" height="15" fill="rgb(245,79,54)" fg:x="3209" fg:w="1"/><text x="96.8484%" y="367.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (1 samples, 0.03%)</title><rect x="96.5984%" y="341" width="0.0301%" height="15" fill="rgb(240,10,37)" fg:x="3209" fg:w="1"/><text x="96.8484%" y="351.50"></text></g><g><title>decision-tree`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="96.5984%" y="325" width="0.0301%" height="15" fill="rgb(214,192,32)" fg:x="3209" fg:w="1"/><text x="96.8484%" y="335.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="96.5984%" y="309" width="0.0301%" height="15" fill="rgb(209,36,54)" fg:x="3209" fg:w="1"/><text x="96.8484%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="96.5984%" y="293" width="0.0301%" height="15" fill="rgb(220,10,11)" fg:x="3209" fg:w="1"/><text x="96.8484%" y="303.50"></text></g><g><title>decision-tree`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="96.6285%" y="229" width="0.0301%" height="15" fill="rgb(221,106,17)" fg:x="3210" fg:w="1"/><text x="96.8785%" y="239.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::information_gain (2 samples, 0.06%)</title><rect x="96.6285%" y="373" width="0.0602%" height="15" fill="rgb(251,142,44)" fg:x="3210" fg:w="2"/><text x="96.8785%" y="383.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (2 samples, 0.06%)</title><rect x="96.6285%" y="357" width="0.0602%" height="15" fill="rgb(238,13,15)" fg:x="3210" fg:w="2"/><text x="96.8785%" y="367.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::sum (2 samples, 0.06%)</title><rect x="96.6285%" y="341" width="0.0602%" height="15" fill="rgb(208,107,27)" fg:x="3210" fg:w="2"/><text x="96.8785%" y="351.50"></text></g><g><title>decision-tree`&lt;f32 as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.06%)</title><rect x="96.6285%" y="325" width="0.0602%" height="15" fill="rgb(205,136,37)" fg:x="3210" fg:w="2"/><text x="96.8785%" y="335.50"></text></g><g><title>decision-tree`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="96.6285%" y="309" width="0.0602%" height="15" fill="rgb(250,205,27)" fg:x="3210" fg:w="2"/><text x="96.8785%" y="319.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::fold (2 samples, 0.06%)</title><rect x="96.6285%" y="293" width="0.0602%" height="15" fill="rgb(210,80,43)" fg:x="3210" fg:w="2"/><text x="96.8785%" y="303.50"></text></g><g><title>decision-tree`core::iter::adapters::map::map_fold::_{{closure}} (2 samples, 0.06%)</title><rect x="96.6285%" y="277" width="0.0602%" height="15" fill="rgb(247,160,36)" fg:x="3210" fg:w="2"/><text x="96.8785%" y="287.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index::_{{closure}} (2 samples, 0.06%)</title><rect x="96.6285%" y="261" width="0.0602%" height="15" fill="rgb(234,13,49)" fg:x="3210" fg:w="2"/><text x="96.8785%" y="271.50"></text></g><g><title>decision-tree`decision_tree::dtree::utils::count_vals (2 samples, 0.06%)</title><rect x="96.6285%" y="245" width="0.0602%" height="15" fill="rgb(234,122,0)" fg:x="3210" fg:w="2"/><text x="96.8785%" y="255.50"></text></g><g><title>decision-tree`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.03%)</title><rect x="96.6586%" y="229" width="0.0301%" height="15" fill="rgb(207,146,38)" fg:x="3211" fg:w="1"/><text x="96.9086%" y="239.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="96.7188%" y="309" width="0.0301%" height="15" fill="rgb(207,177,25)" fg:x="3213" fg:w="1"/><text x="96.9688%" y="319.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="96.7188%" y="293" width="0.0301%" height="15" fill="rgb(211,178,42)" fg:x="3213" fg:w="1"/><text x="96.9688%" y="303.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="96.7188%" y="277" width="0.0301%" height="15" fill="rgb(230,69,54)" fg:x="3213" fg:w="1"/><text x="96.9688%" y="287.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="96.7188%" y="261" width="0.0301%" height="15" fill="rgb(214,135,41)" fg:x="3213" fg:w="1"/><text x="96.9688%" y="271.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="96.7188%" y="245" width="0.0301%" height="15" fill="rgb(237,67,25)" fg:x="3213" fg:w="1"/><text x="96.9688%" y="255.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="96.7188%" y="229" width="0.0301%" height="15" fill="rgb(222,189,50)" fg:x="3213" fg:w="1"/><text x="96.9688%" y="239.50"></text></g><g><title>decision-tree`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="96.7188%" y="213" width="0.0301%" height="15" fill="rgb(245,148,34)" fg:x="3213" fg:w="1"/><text x="96.9688%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.03%)</title><rect x="96.7188%" y="197" width="0.0301%" height="15" fill="rgb(222,29,6)" fg:x="3213" fg:w="1"/><text x="96.9688%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.03%)</title><rect x="96.7188%" y="181" width="0.0301%" height="15" fill="rgb(221,189,43)" fg:x="3213" fg:w="1"/><text x="96.9688%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.03%)</title><rect x="96.7188%" y="165" width="0.0301%" height="15" fill="rgb(207,36,27)" fg:x="3213" fg:w="1"/><text x="96.9688%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.03%)</title><rect x="96.7188%" y="149" width="0.0301%" height="15" fill="rgb(217,90,24)" fg:x="3213" fg:w="1"/><text x="96.9688%" y="159.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (2 samples, 0.06%)</title><rect x="96.7188%" y="357" width="0.0602%" height="15" fill="rgb(224,66,35)" fg:x="3213" fg:w="2"/><text x="96.9688%" y="367.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.06%)</title><rect x="96.7188%" y="341" width="0.0602%" height="15" fill="rgb(221,13,50)" fg:x="3213" fg:w="2"/><text x="96.9688%" y="351.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.06%)</title><rect x="96.7188%" y="325" width="0.0602%" height="15" fill="rgb(236,68,49)" fg:x="3213" fg:w="2"/><text x="96.9688%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="96.7489%" y="309" width="0.0301%" height="15" fill="rgb(229,146,28)" fg:x="3214" fg:w="1"/><text x="96.9989%" y="319.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="96.7790%" y="357" width="0.0301%" height="15" fill="rgb(225,31,38)" fg:x="3215" fg:w="1"/><text x="97.0290%" y="367.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.03%)</title><rect x="96.7790%" y="341" width="0.0301%" height="15" fill="rgb(250,208,3)" fg:x="3215" fg:w="1"/><text x="97.0290%" y="351.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="96.7790%" y="325" width="0.0301%" height="15" fill="rgb(246,54,23)" fg:x="3215" fg:w="1"/><text x="97.0290%" y="335.50"></text></g><g><title>decision-tree`core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="96.7790%" y="309" width="0.0301%" height="15" fill="rgb(243,76,11)" fg:x="3215" fg:w="1"/><text x="97.0290%" y="319.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (30 samples, 0.90%)</title><rect x="95.9362%" y="405" width="0.9031%" height="15" fill="rgb(245,21,50)" fg:x="3187" fg:w="30"/><text x="96.1862%" y="415.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::get_best_split (8 samples, 0.24%)</title><rect x="96.5984%" y="389" width="0.2408%" height="15" fill="rgb(228,9,43)" fg:x="3209" fg:w="8"/><text x="96.8484%" y="399.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::split (5 samples, 0.15%)</title><rect x="96.6887%" y="373" width="0.1505%" height="15" fill="rgb(208,100,47)" fg:x="3212" fg:w="5"/><text x="96.9387%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.03%)</title><rect x="96.8092%" y="357" width="0.0301%" height="15" fill="rgb(232,26,8)" fg:x="3216" fg:w="1"/><text x="97.0592%" y="367.50"></text></g><g><title>decision-tree`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="96.8393%" y="357" width="0.0301%" height="15" fill="rgb(216,166,38)" fg:x="3217" fg:w="1"/><text x="97.0893%" y="367.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="96.8393%" y="341" width="0.0301%" height="15" fill="rgb(251,202,51)" fg:x="3217" fg:w="1"/><text x="97.0893%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.03%)</title><rect x="96.8393%" y="325" width="0.0301%" height="15" fill="rgb(254,216,34)" fg:x="3217" fg:w="1"/><text x="97.0893%" y="335.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;i32&gt;&gt; (2 samples, 0.06%)</title><rect x="96.8393%" y="389" width="0.0602%" height="15" fill="rgb(251,32,27)" fg:x="3217" fg:w="2"/><text x="97.0893%" y="399.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;i32&gt;&gt; (2 samples, 0.06%)</title><rect x="96.8393%" y="373" width="0.0602%" height="15" fill="rgb(208,127,28)" fg:x="3217" fg:w="2"/><text x="97.0893%" y="383.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="96.8694%" y="357" width="0.0301%" height="15" fill="rgb(224,137,22)" fg:x="3218" fg:w="1"/><text x="97.1194%" y="367.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;decision_tree::dtree::Matrix&gt; (2 samples, 0.06%)</title><rect x="96.8995%" y="389" width="0.0602%" height="15" fill="rgb(254,70,32)" fg:x="3219" fg:w="2"/><text x="97.1495%" y="399.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (2 samples, 0.06%)</title><rect x="96.8995%" y="373" width="0.0602%" height="15" fill="rgb(229,75,37)" fg:x="3219" fg:w="2"/><text x="97.1495%" y="383.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (2 samples, 0.06%)</title><rect x="96.8995%" y="357" width="0.0602%" height="15" fill="rgb(252,64,23)" fg:x="3219" fg:w="2"/><text x="97.1495%" y="367.50"></text></g><g><title>decision-tree`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="96.8995%" y="341" width="0.0602%" height="15" fill="rgb(232,162,48)" fg:x="3219" fg:w="2"/><text x="97.1495%" y="351.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="96.9296%" y="325" width="0.0301%" height="15" fill="rgb(246,160,12)" fg:x="3220" fg:w="1"/><text x="97.1796%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.03%)</title><rect x="96.9296%" y="309" width="0.0301%" height="15" fill="rgb(247,166,0)" fg:x="3220" fg:w="1"/><text x="97.1796%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.03%)</title><rect x="96.9296%" y="293" width="0.0301%" height="15" fill="rgb(249,219,21)" fg:x="3220" fg:w="1"/><text x="97.1796%" y="303.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="96.9597%" y="357" width="0.0301%" height="15" fill="rgb(205,209,3)" fg:x="3221" fg:w="1"/><text x="97.2097%" y="367.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index::_{{closure}} (1 samples, 0.03%)</title><rect x="96.9597%" y="341" width="0.0301%" height="15" fill="rgb(243,44,1)" fg:x="3221" fg:w="1"/><text x="97.2097%" y="351.50"></text></g><g><title>decision-tree`core::slice::_&lt;impl [T]&gt;::contains (1 samples, 0.03%)</title><rect x="96.9597%" y="325" width="0.0301%" height="15" fill="rgb(206,159,16)" fg:x="3221" fg:w="1"/><text x="97.2097%" y="335.50"></text></g><g><title>decision-tree`&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.03%)</title><rect x="96.9597%" y="309" width="0.0301%" height="15" fill="rgb(244,77,30)" fg:x="3221" fg:w="1"/><text x="97.2097%" y="319.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::information_gain (2 samples, 0.06%)</title><rect x="96.9597%" y="389" width="0.0602%" height="15" fill="rgb(218,69,12)" fg:x="3221" fg:w="2"/><text x="97.2097%" y="399.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (2 samples, 0.06%)</title><rect x="96.9597%" y="373" width="0.0602%" height="15" fill="rgb(212,87,7)" fg:x="3221" fg:w="2"/><text x="97.2097%" y="383.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::sum (1 samples, 0.03%)</title><rect x="96.9898%" y="357" width="0.0301%" height="15" fill="rgb(245,114,25)" fg:x="3222" fg:w="1"/><text x="97.2398%" y="367.50"></text></g><g><title>decision-tree`&lt;f32 as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.03%)</title><rect x="96.9898%" y="341" width="0.0301%" height="15" fill="rgb(210,61,42)" fg:x="3222" fg:w="1"/><text x="97.2398%" y="351.50"></text></g><g><title>decision-tree`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="96.9898%" y="325" width="0.0301%" height="15" fill="rgb(211,52,33)" fg:x="3222" fg:w="1"/><text x="97.2398%" y="335.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="96.9898%" y="309" width="0.0301%" height="15" fill="rgb(234,58,33)" fg:x="3222" fg:w="1"/><text x="97.2398%" y="319.50"></text></g><g><title>decision-tree`core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.03%)</title><rect x="96.9898%" y="293" width="0.0301%" height="15" fill="rgb(220,115,36)" fg:x="3222" fg:w="1"/><text x="97.2398%" y="303.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index::_{{closure}} (1 samples, 0.03%)</title><rect x="96.9898%" y="277" width="0.0301%" height="15" fill="rgb(243,153,54)" fg:x="3222" fg:w="1"/><text x="97.2398%" y="287.50"></text></g><g><title>decision-tree`decision_tree::dtree::utils::count_vals (1 samples, 0.03%)</title><rect x="96.9898%" y="261" width="0.0301%" height="15" fill="rgb(251,47,18)" fg:x="3222" fg:w="1"/><text x="97.2398%" y="271.50"></text></g><g><title>decision-tree`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="96.9898%" y="245" width="0.0301%" height="15" fill="rgb(242,102,42)" fg:x="3222" fg:w="1"/><text x="97.2398%" y="255.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="97.0199%" y="325" width="0.0301%" height="15" fill="rgb(234,31,38)" fg:x="3223" fg:w="1"/><text x="97.2699%" y="335.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (2 samples, 0.06%)</title><rect x="97.0199%" y="373" width="0.0602%" height="15" fill="rgb(221,117,51)" fg:x="3223" fg:w="2"/><text x="97.2699%" y="383.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.06%)</title><rect x="97.0199%" y="357" width="0.0602%" height="15" fill="rgb(212,20,18)" fg:x="3223" fg:w="2"/><text x="97.2699%" y="367.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.06%)</title><rect x="97.0199%" y="341" width="0.0602%" height="15" fill="rgb(245,133,36)" fg:x="3223" fg:w="2"/><text x="97.2699%" y="351.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="97.0500%" y="325" width="0.0301%" height="15" fill="rgb(212,6,19)" fg:x="3224" fg:w="1"/><text x="97.3000%" y="335.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="97.0500%" y="309" width="0.0301%" height="15" fill="rgb(218,1,36)" fg:x="3224" fg:w="1"/><text x="97.3000%" y="319.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.03%)</title><rect x="97.0500%" y="293" width="0.0301%" height="15" fill="rgb(246,84,54)" fg:x="3224" fg:w="1"/><text x="97.3000%" y="303.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="97.0801%" y="357" width="0.0301%" height="15" fill="rgb(242,110,6)" fg:x="3225" fg:w="1"/><text x="97.3301%" y="367.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.06%)</title><rect x="97.0801%" y="373" width="0.0602%" height="15" fill="rgb(214,47,5)" fg:x="3225" fg:w="2"/><text x="97.3301%" y="383.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="97.1102%" y="357" width="0.0301%" height="15" fill="rgb(218,159,25)" fg:x="3226" fg:w="1"/><text x="97.3602%" y="367.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="97.1403%" y="373" width="0.0301%" height="15" fill="rgb(215,211,28)" fg:x="3227" fg:w="1"/><text x="97.3903%" y="383.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.03%)</title><rect x="97.1403%" y="357" width="0.0301%" height="15" fill="rgb(238,59,32)" fg:x="3227" fg:w="1"/><text x="97.3903%" y="367.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="97.1403%" y="341" width="0.0301%" height="15" fill="rgb(226,82,3)" fg:x="3227" fg:w="1"/><text x="97.3903%" y="351.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="97.1403%" y="325" width="0.0301%" height="15" fill="rgb(240,164,32)" fg:x="3227" fg:w="1"/><text x="97.3903%" y="335.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="97.1403%" y="309" width="0.0301%" height="15" fill="rgb(232,46,7)" fg:x="3227" fg:w="1"/><text x="97.3903%" y="319.50"></text></g><g><title>decision-tree`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="97.1403%" y="293" width="0.0301%" height="15" fill="rgb(229,129,53)" fg:x="3227" fg:w="1"/><text x="97.3903%" y="303.50"></text></g><g><title>decision-tree`core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="97.1403%" y="277" width="0.0301%" height="15" fill="rgb(234,188,29)" fg:x="3227" fg:w="1"/><text x="97.3903%" y="287.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (42 samples, 1.26%)</title><rect x="95.9362%" y="421" width="1.2643%" height="15" fill="rgb(246,141,4)" fg:x="3187" fg:w="42"/><text x="96.1862%" y="431.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::get_best_split (12 samples, 0.36%)</title><rect x="96.8393%" y="405" width="0.3612%" height="15" fill="rgb(229,23,39)" fg:x="3217" fg:w="12"/><text x="97.0893%" y="415.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::split (6 samples, 0.18%)</title><rect x="97.0199%" y="389" width="0.1806%" height="15" fill="rgb(206,12,3)" fg:x="3223" fg:w="6"/><text x="97.2699%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.03%)</title><rect x="97.1704%" y="373" width="0.0301%" height="15" fill="rgb(252,226,20)" fg:x="3228" fg:w="1"/><text x="97.4204%" y="383.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;i32&gt;&gt; (1 samples, 0.03%)</title><rect x="97.2005%" y="405" width="0.0301%" height="15" fill="rgb(216,123,35)" fg:x="3229" fg:w="1"/><text x="97.4505%" y="415.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;i32&gt;&gt; (1 samples, 0.03%)</title><rect x="97.2005%" y="389" width="0.0301%" height="15" fill="rgb(212,68,40)" fg:x="3229" fg:w="1"/><text x="97.4505%" y="399.50"></text></g><g><title>decision-tree`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="97.2005%" y="373" width="0.0301%" height="15" fill="rgb(254,125,32)" fg:x="3229" fg:w="1"/><text x="97.4505%" y="383.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="97.2005%" y="357" width="0.0301%" height="15" fill="rgb(253,97,22)" fg:x="3229" fg:w="1"/><text x="97.4505%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (1 samples, 0.03%)</title><rect x="97.2005%" y="341" width="0.0301%" height="15" fill="rgb(241,101,14)" fg:x="3229" fg:w="1"/><text x="97.4505%" y="351.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;decision_tree::dtree::Matrix&gt; (1 samples, 0.03%)</title><rect x="97.2306%" y="405" width="0.0301%" height="15" fill="rgb(238,103,29)" fg:x="3230" fg:w="1"/><text x="97.4806%" y="415.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (1 samples, 0.03%)</title><rect x="97.2306%" y="389" width="0.0301%" height="15" fill="rgb(233,195,47)" fg:x="3230" fg:w="1"/><text x="97.4806%" y="399.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (1 samples, 0.03%)</title><rect x="97.2306%" y="373" width="0.0301%" height="15" fill="rgb(246,218,30)" fg:x="3230" fg:w="1"/><text x="97.4806%" y="383.50"></text></g><g><title>decision-tree`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="97.2306%" y="357" width="0.0301%" height="15" fill="rgb(219,145,47)" fg:x="3230" fg:w="1"/><text x="97.4806%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.03%)</title><rect x="97.2306%" y="341" width="0.0301%" height="15" fill="rgb(243,12,26)" fg:x="3230" fg:w="1"/><text x="97.4806%" y="351.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="97.2607%" y="373" width="0.0301%" height="15" fill="rgb(214,87,16)" fg:x="3231" fg:w="1"/><text x="97.5107%" y="383.50"></text></g><g><title>decision-tree`core::slice::_&lt;impl [T]&gt;::contains (1 samples, 0.03%)</title><rect x="97.2607%" y="357" width="0.0301%" height="15" fill="rgb(208,99,42)" fg:x="3231" fg:w="1"/><text x="97.5107%" y="367.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::information_gain (2 samples, 0.06%)</title><rect x="97.2607%" y="405" width="0.0602%" height="15" fill="rgb(253,99,2)" fg:x="3231" fg:w="2"/><text x="97.5107%" y="415.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (2 samples, 0.06%)</title><rect x="97.2607%" y="389" width="0.0602%" height="15" fill="rgb(220,168,23)" fg:x="3231" fg:w="2"/><text x="97.5107%" y="399.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;i32&gt;&gt; (1 samples, 0.03%)</title><rect x="97.2908%" y="373" width="0.0301%" height="15" fill="rgb(242,38,24)" fg:x="3232" fg:w="1"/><text x="97.5408%" y="383.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;i32&gt;&gt; (1 samples, 0.03%)</title><rect x="97.2908%" y="357" width="0.0301%" height="15" fill="rgb(225,182,9)" fg:x="3232" fg:w="1"/><text x="97.5408%" y="367.50"></text></g><g><title>decision-tree`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="97.2908%" y="341" width="0.0301%" height="15" fill="rgb(243,178,37)" fg:x="3232" fg:w="1"/><text x="97.5408%" y="351.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="97.2908%" y="325" width="0.0301%" height="15" fill="rgb(232,139,19)" fg:x="3232" fg:w="1"/><text x="97.5408%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="97.2908%" y="309" width="0.0301%" height="15" fill="rgb(225,201,24)" fg:x="3232" fg:w="1"/><text x="97.5408%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.03%)</title><rect x="97.2908%" y="293" width="0.0301%" height="15" fill="rgb(221,47,46)" fg:x="3232" fg:w="1"/><text x="97.5408%" y="303.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (2 samples, 0.06%)</title><rect x="97.3209%" y="389" width="0.0602%" height="15" fill="rgb(249,23,13)" fg:x="3233" fg:w="2"/><text x="97.5709%" y="399.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.06%)</title><rect x="97.3209%" y="373" width="0.0602%" height="15" fill="rgb(219,9,5)" fg:x="3233" fg:w="2"/><text x="97.5709%" y="383.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.06%)</title><rect x="97.3209%" y="357" width="0.0602%" height="15" fill="rgb(254,171,16)" fg:x="3233" fg:w="2"/><text x="97.5709%" y="367.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.06%)</title><rect x="97.3209%" y="341" width="0.0602%" height="15" fill="rgb(230,171,20)" fg:x="3233" fg:w="2"/><text x="97.5709%" y="351.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.06%)</title><rect x="97.3209%" y="325" width="0.0602%" height="15" fill="rgb(210,71,41)" fg:x="3233" fg:w="2"/><text x="97.5709%" y="335.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.06%)</title><rect x="97.3209%" y="309" width="0.0602%" height="15" fill="rgb(206,173,20)" fg:x="3233" fg:w="2"/><text x="97.5709%" y="319.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.06%)</title><rect x="97.3209%" y="293" width="0.0602%" height="15" fill="rgb(233,88,34)" fg:x="3233" fg:w="2"/><text x="97.5709%" y="303.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (2 samples, 0.06%)</title><rect x="97.3209%" y="277" width="0.0602%" height="15" fill="rgb(223,209,46)" fg:x="3233" fg:w="2"/><text x="97.5709%" y="287.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="97.3510%" y="261" width="0.0301%" height="15" fill="rgb(250,43,18)" fg:x="3234" fg:w="1"/><text x="97.6010%" y="271.50"></text></g><g><title>decision-tree`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="97.3510%" y="245" width="0.0301%" height="15" fill="rgb(208,13,10)" fg:x="3234" fg:w="1"/><text x="97.6010%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.03%)</title><rect x="97.3510%" y="229" width="0.0301%" height="15" fill="rgb(212,200,36)" fg:x="3234" fg:w="1"/><text x="97.6010%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.03%)</title><rect x="97.3510%" y="213" width="0.0301%" height="15" fill="rgb(225,90,30)" fg:x="3234" fg:w="1"/><text x="97.6010%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.03%)</title><rect x="97.3510%" y="197" width="0.0301%" height="15" fill="rgb(236,182,39)" fg:x="3234" fg:w="1"/><text x="97.6010%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.03%)</title><rect x="97.3510%" y="181" width="0.0301%" height="15" fill="rgb(212,144,35)" fg:x="3234" fg:w="1"/><text x="97.6010%" y="191.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="97.3811%" y="389" width="0.0301%" height="15" fill="rgb(228,63,44)" fg:x="3235" fg:w="1"/><text x="97.6311%" y="399.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="97.3811%" y="373" width="0.0301%" height="15" fill="rgb(228,109,6)" fg:x="3235" fg:w="1"/><text x="97.6311%" y="383.50"></text></g><g><title>decision-tree`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="97.4112%" y="389" width="0.0301%" height="15" fill="rgb(238,117,24)" fg:x="3236" fg:w="1"/><text x="97.6612%" y="399.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="97.4112%" y="373" width="0.0301%" height="15" fill="rgb(242,26,26)" fg:x="3236" fg:w="1"/><text x="97.6612%" y="383.50"></text></g><g><title>decision-tree`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="97.4112%" y="357" width="0.0301%" height="15" fill="rgb(221,92,48)" fg:x="3236" fg:w="1"/><text x="97.6612%" y="367.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (51 samples, 1.54%)</title><rect x="95.9362%" y="437" width="1.5352%" height="15" fill="rgb(209,209,32)" fg:x="3187" fg:w="51"/><text x="96.1862%" y="447.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::get_best_split (9 samples, 0.27%)</title><rect x="97.2005%" y="421" width="0.2709%" height="15" fill="rgb(221,70,22)" fg:x="3229" fg:w="9"/><text x="97.4505%" y="431.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::split (5 samples, 0.15%)</title><rect x="97.3209%" y="405" width="0.1505%" height="15" fill="rgb(248,145,5)" fg:x="3233" fg:w="5"/><text x="97.5709%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.03%)</title><rect x="97.4413%" y="389" width="0.0301%" height="15" fill="rgb(226,116,26)" fg:x="3237" fg:w="1"/><text x="97.6913%" y="399.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;i32&gt;&gt; (1 samples, 0.03%)</title><rect x="97.4714%" y="421" width="0.0301%" height="15" fill="rgb(244,5,17)" fg:x="3238" fg:w="1"/><text x="97.7214%" y="431.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;i32&gt;&gt; (1 samples, 0.03%)</title><rect x="97.4714%" y="405" width="0.0301%" height="15" fill="rgb(252,159,33)" fg:x="3238" fg:w="1"/><text x="97.7214%" y="415.50"></text></g><g><title>decision-tree`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="97.4714%" y="389" width="0.0301%" height="15" fill="rgb(206,71,0)" fg:x="3238" fg:w="1"/><text x="97.7214%" y="399.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="97.4714%" y="373" width="0.0301%" height="15" fill="rgb(233,118,54)" fg:x="3238" fg:w="1"/><text x="97.7214%" y="383.50"></text></g><g><title>decision-tree`core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="97.4714%" y="357" width="0.0301%" height="15" fill="rgb(234,83,48)" fg:x="3238" fg:w="1"/><text x="97.7214%" y="367.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;decision_tree::dtree::Matrix&gt; (1 samples, 0.03%)</title><rect x="97.5015%" y="421" width="0.0301%" height="15" fill="rgb(228,3,54)" fg:x="3239" fg:w="1"/><text x="97.7515%" y="431.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (1 samples, 0.03%)</title><rect x="97.5015%" y="405" width="0.0301%" height="15" fill="rgb(226,155,13)" fg:x="3239" fg:w="1"/><text x="97.7515%" y="415.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (1 samples, 0.03%)</title><rect x="97.5015%" y="389" width="0.0301%" height="15" fill="rgb(241,28,37)" fg:x="3239" fg:w="1"/><text x="97.7515%" y="399.50"></text></g><g><title>decision-tree`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="97.5015%" y="373" width="0.0301%" height="15" fill="rgb(233,93,10)" fg:x="3239" fg:w="1"/><text x="97.7515%" y="383.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="97.5015%" y="357" width="0.0301%" height="15" fill="rgb(225,113,19)" fg:x="3239" fg:w="1"/><text x="97.7515%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.03%)</title><rect x="97.5015%" y="341" width="0.0301%" height="15" fill="rgb(241,2,18)" fg:x="3239" fg:w="1"/><text x="97.7515%" y="351.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="97.5316%" y="357" width="0.0301%" height="15" fill="rgb(228,207,21)" fg:x="3240" fg:w="1"/><text x="97.7816%" y="367.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="97.5617%" y="357" width="0.0301%" height="15" fill="rgb(213,211,35)" fg:x="3241" fg:w="1"/><text x="97.8117%" y="367.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::fold (3 samples, 0.09%)</title><rect x="97.5316%" y="389" width="0.0903%" height="15" fill="rgb(209,83,10)" fg:x="3240" fg:w="3"/><text x="97.7816%" y="399.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index::_{{closure}} (3 samples, 0.09%)</title><rect x="97.5316%" y="373" width="0.0903%" height="15" fill="rgb(209,164,1)" fg:x="3240" fg:w="3"/><text x="97.7816%" y="383.50"></text></g><g><title>decision-tree`core::slice::_&lt;impl [T]&gt;::contains (1 samples, 0.03%)</title><rect x="97.5918%" y="357" width="0.0301%" height="15" fill="rgb(213,184,43)" fg:x="3242" fg:w="1"/><text x="97.8418%" y="367.50"></text></g><g><title>decision-tree`&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.03%)</title><rect x="97.5918%" y="341" width="0.0301%" height="15" fill="rgb(231,61,34)" fg:x="3242" fg:w="1"/><text x="97.8418%" y="351.50"></text></g><g><title>decision-tree`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.03%)</title><rect x="97.5918%" y="325" width="0.0301%" height="15" fill="rgb(235,75,3)" fg:x="3242" fg:w="1"/><text x="97.8418%" y="335.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;i32&gt;&gt; (1 samples, 0.03%)</title><rect x="97.6219%" y="389" width="0.0301%" height="15" fill="rgb(220,106,47)" fg:x="3243" fg:w="1"/><text x="97.8719%" y="399.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="97.6219%" y="373" width="0.0301%" height="15" fill="rgb(210,196,33)" fg:x="3243" fg:w="1"/><text x="97.8719%" y="383.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::information_gain (5 samples, 0.15%)</title><rect x="97.5316%" y="421" width="0.1505%" height="15" fill="rgb(229,154,42)" fg:x="3240" fg:w="5"/><text x="97.7816%" y="431.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (5 samples, 0.15%)</title><rect x="97.5316%" y="405" width="0.1505%" height="15" fill="rgb(228,114,26)" fg:x="3240" fg:w="5"/><text x="97.7816%" y="415.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index::_{{closure}} (1 samples, 0.03%)</title><rect x="97.6520%" y="389" width="0.0301%" height="15" fill="rgb(208,144,1)" fg:x="3244" fg:w="1"/><text x="97.9020%" y="399.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.06%)</title><rect x="97.6821%" y="405" width="0.0602%" height="15" fill="rgb(239,112,37)" fg:x="3245" fg:w="2"/><text x="97.9321%" y="415.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.06%)</title><rect x="97.6821%" y="389" width="0.0602%" height="15" fill="rgb(210,96,50)" fg:x="3245" fg:w="2"/><text x="97.9321%" y="399.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.06%)</title><rect x="97.7423%" y="405" width="0.0602%" height="15" fill="rgb(222,178,2)" fg:x="3247" fg:w="2"/><text x="97.9923%" y="415.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.06%)</title><rect x="97.7423%" y="389" width="0.0602%" height="15" fill="rgb(226,74,18)" fg:x="3247" fg:w="2"/><text x="97.9923%" y="399.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.06%)</title><rect x="97.7423%" y="373" width="0.0602%" height="15" fill="rgb(225,67,54)" fg:x="3247" fg:w="2"/><text x="97.9923%" y="383.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.03%)</title><rect x="97.7724%" y="357" width="0.0301%" height="15" fill="rgb(251,92,32)" fg:x="3248" fg:w="1"/><text x="98.0224%" y="367.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (63 samples, 1.90%)</title><rect x="95.9362%" y="453" width="1.8964%" height="15" fill="rgb(228,149,22)" fg:x="3187" fg:w="63"/><text x="96.1862%" y="463.50">d..</text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::get_best_split (12 samples, 0.36%)</title><rect x="97.4714%" y="437" width="0.3612%" height="15" fill="rgb(243,54,13)" fg:x="3238" fg:w="12"/><text x="97.7214%" y="447.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::split (5 samples, 0.15%)</title><rect x="97.6821%" y="421" width="0.1505%" height="15" fill="rgb(243,180,28)" fg:x="3245" fg:w="5"/><text x="97.9321%" y="431.50"></text></g><g><title>decision-tree`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.03%)</title><rect x="97.8025%" y="405" width="0.0301%" height="15" fill="rgb(208,167,24)" fg:x="3249" fg:w="1"/><text x="98.0525%" y="415.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::fold (2 samples, 0.06%)</title><rect x="97.8326%" y="405" width="0.0602%" height="15" fill="rgb(245,73,45)" fg:x="3250" fg:w="2"/><text x="98.0826%" y="415.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index::_{{closure}} (2 samples, 0.06%)</title><rect x="97.8326%" y="389" width="0.0602%" height="15" fill="rgb(237,203,48)" fg:x="3250" fg:w="2"/><text x="98.0826%" y="399.50"></text></g><g><title>decision-tree`core::slice::_&lt;impl [T]&gt;::contains (1 samples, 0.03%)</title><rect x="97.8627%" y="373" width="0.0301%" height="15" fill="rgb(211,197,16)" fg:x="3251" fg:w="1"/><text x="98.1127%" y="383.50"></text></g><g><title>decision-tree`&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.03%)</title><rect x="97.8627%" y="357" width="0.0301%" height="15" fill="rgb(243,99,51)" fg:x="3251" fg:w="1"/><text x="98.1127%" y="367.50"></text></g><g><title>decision-tree`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.03%)</title><rect x="97.8627%" y="341" width="0.0301%" height="15" fill="rgb(215,123,29)" fg:x="3251" fg:w="1"/><text x="98.1127%" y="351.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::information_gain (4 samples, 0.12%)</title><rect x="97.8326%" y="437" width="0.1204%" height="15" fill="rgb(239,186,37)" fg:x="3250" fg:w="4"/><text x="98.0826%" y="447.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (4 samples, 0.12%)</title><rect x="97.8326%" y="421" width="0.1204%" height="15" fill="rgb(252,136,39)" fg:x="3250" fg:w="4"/><text x="98.0826%" y="431.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::sum (2 samples, 0.06%)</title><rect x="97.8928%" y="405" width="0.0602%" height="15" fill="rgb(223,213,32)" fg:x="3252" fg:w="2"/><text x="98.1428%" y="415.50"></text></g><g><title>decision-tree`&lt;f32 as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.06%)</title><rect x="97.8928%" y="389" width="0.0602%" height="15" fill="rgb(233,115,5)" fg:x="3252" fg:w="2"/><text x="98.1428%" y="399.50"></text></g><g><title>decision-tree`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="97.8928%" y="373" width="0.0602%" height="15" fill="rgb(207,226,44)" fg:x="3252" fg:w="2"/><text x="98.1428%" y="383.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::fold (2 samples, 0.06%)</title><rect x="97.8928%" y="357" width="0.0602%" height="15" fill="rgb(208,126,0)" fg:x="3252" fg:w="2"/><text x="98.1428%" y="367.50"></text></g><g><title>decision-tree`core::iter::adapters::map::map_fold::_{{closure}} (2 samples, 0.06%)</title><rect x="97.8928%" y="341" width="0.0602%" height="15" fill="rgb(244,66,21)" fg:x="3252" fg:w="2"/><text x="98.1428%" y="351.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index::_{{closure}} (1 samples, 0.03%)</title><rect x="97.9229%" y="325" width="0.0301%" height="15" fill="rgb(222,97,12)" fg:x="3253" fg:w="1"/><text x="98.1729%" y="335.50"></text></g><g><title>decision-tree`decision_tree::dtree::utils::count_vals (1 samples, 0.03%)</title><rect x="97.9229%" y="309" width="0.0301%" height="15" fill="rgb(219,213,19)" fg:x="3253" fg:w="1"/><text x="98.1729%" y="319.50"></text></g><g><title>decision-tree`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="97.9229%" y="293" width="0.0301%" height="15" fill="rgb(252,169,30)" fg:x="3253" fg:w="1"/><text x="98.1729%" y="303.50"></text></g><g><title>decision-tree`__rdl_realloc (1 samples, 0.03%)</title><rect x="97.9831%" y="261" width="0.0301%" height="15" fill="rgb(206,32,51)" fg:x="3255" fg:w="1"/><text x="98.2331%" y="271.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (3 samples, 0.09%)</title><rect x="97.9831%" y="421" width="0.0903%" height="15" fill="rgb(250,172,42)" fg:x="3255" fg:w="3"/><text x="98.2331%" y="431.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.09%)</title><rect x="97.9831%" y="405" width="0.0903%" height="15" fill="rgb(209,34,43)" fg:x="3255" fg:w="3"/><text x="98.2331%" y="415.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.09%)</title><rect x="97.9831%" y="389" width="0.0903%" height="15" fill="rgb(223,11,35)" fg:x="3255" fg:w="3"/><text x="98.2331%" y="399.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.09%)</title><rect x="97.9831%" y="373" width="0.0903%" height="15" fill="rgb(251,219,26)" fg:x="3255" fg:w="3"/><text x="98.2331%" y="383.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.09%)</title><rect x="97.9831%" y="357" width="0.0903%" height="15" fill="rgb(231,119,3)" fg:x="3255" fg:w="3"/><text x="98.2331%" y="367.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.09%)</title><rect x="97.9831%" y="341" width="0.0903%" height="15" fill="rgb(216,97,11)" fg:x="3255" fg:w="3"/><text x="98.2331%" y="351.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.09%)</title><rect x="97.9831%" y="325" width="0.0903%" height="15" fill="rgb(223,59,9)" fg:x="3255" fg:w="3"/><text x="98.2331%" y="335.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (3 samples, 0.09%)</title><rect x="97.9831%" y="309" width="0.0903%" height="15" fill="rgb(233,93,31)" fg:x="3255" fg:w="3"/><text x="98.2331%" y="319.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.09%)</title><rect x="97.9831%" y="293" width="0.0903%" height="15" fill="rgb(239,81,33)" fg:x="3255" fg:w="3"/><text x="98.2331%" y="303.50"></text></g><g><title>decision-tree`alloc::alloc::Global::grow_impl (3 samples, 0.09%)</title><rect x="97.9831%" y="277" width="0.0903%" height="15" fill="rgb(213,120,34)" fg:x="3255" fg:w="3"/><text x="98.2331%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.06%)</title><rect x="98.0132%" y="261" width="0.0602%" height="15" fill="rgb(243,49,53)" fg:x="3256" fg:w="2"/><text x="98.2632%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.03%)</title><rect x="98.0433%" y="245" width="0.0301%" height="15" fill="rgb(247,216,33)" fg:x="3257" fg:w="1"/><text x="98.2933%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.03%)</title><rect x="98.0433%" y="229" width="0.0301%" height="15" fill="rgb(226,26,14)" fg:x="3257" fg:w="1"/><text x="98.2933%" y="239.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="98.0734%" y="405" width="0.0301%" height="15" fill="rgb(215,49,53)" fg:x="3258" fg:w="1"/><text x="98.3234%" y="415.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.06%)</title><rect x="98.0734%" y="421" width="0.0602%" height="15" fill="rgb(245,162,40)" fg:x="3258" fg:w="2"/><text x="98.3234%" y="431.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="98.1036%" y="405" width="0.0301%" height="15" fill="rgb(229,68,17)" fg:x="3259" fg:w="1"/><text x="98.3536%" y="415.50"></text></g><g><title>decision-tree`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.03%)</title><rect x="98.1337%" y="421" width="0.0301%" height="15" fill="rgb(213,182,10)" fg:x="3260" fg:w="1"/><text x="98.3837%" y="431.50"></text></g><g><title>decision-tree`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="98.1337%" y="405" width="0.0301%" height="15" fill="rgb(245,125,30)" fg:x="3260" fg:w="1"/><text x="98.3837%" y="415.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (75 samples, 2.26%)</title><rect x="95.9362%" y="469" width="2.2577%" height="15" fill="rgb(232,202,2)" fg:x="3187" fg:w="75"/><text x="96.1862%" y="479.50">d..</text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::get_best_split (12 samples, 0.36%)</title><rect x="97.8326%" y="453" width="0.3612%" height="15" fill="rgb(237,140,51)" fg:x="3250" fg:w="12"/><text x="98.0826%" y="463.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::split (8 samples, 0.24%)</title><rect x="97.9530%" y="437" width="0.2408%" height="15" fill="rgb(236,157,25)" fg:x="3254" fg:w="8"/><text x="98.2030%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.03%)</title><rect x="98.1638%" y="421" width="0.0301%" height="15" fill="rgb(219,209,0)" fg:x="3261" fg:w="1"/><text x="98.4138%" y="431.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.03%)</title><rect x="98.1939%" y="389" width="0.0301%" height="15" fill="rgb(240,116,54)" fg:x="3262" fg:w="1"/><text x="98.4439%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.03%)</title><rect x="98.1939%" y="373" width="0.0301%" height="15" fill="rgb(216,10,36)" fg:x="3262" fg:w="1"/><text x="98.4439%" y="383.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;decision_tree::dtree::Matrix&gt; (2 samples, 0.06%)</title><rect x="98.1939%" y="453" width="0.0602%" height="15" fill="rgb(222,72,44)" fg:x="3262" fg:w="2"/><text x="98.4439%" y="463.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f32&gt;&gt; (2 samples, 0.06%)</title><rect x="98.1939%" y="437" width="0.0602%" height="15" fill="rgb(232,159,9)" fg:x="3262" fg:w="2"/><text x="98.4439%" y="447.50"></text></g><g><title>decision-tree`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f32&gt;&gt; (2 samples, 0.06%)</title><rect x="98.1939%" y="421" width="0.0602%" height="15" fill="rgb(210,39,32)" fg:x="3262" fg:w="2"/><text x="98.4439%" y="431.50"></text></g><g><title>decision-tree`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="98.1939%" y="405" width="0.0602%" height="15" fill="rgb(216,194,45)" fg:x="3262" fg:w="2"/><text x="98.4439%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (1 samples, 0.03%)</title><rect x="98.2240%" y="389" width="0.0301%" height="15" fill="rgb(218,18,35)" fg:x="3263" fg:w="1"/><text x="98.4740%" y="399.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::information_gain (3 samples, 0.09%)</title><rect x="98.2541%" y="453" width="0.0903%" height="15" fill="rgb(207,83,51)" fg:x="3264" fg:w="3"/><text x="98.5041%" y="463.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (3 samples, 0.09%)</title><rect x="98.2541%" y="437" width="0.0903%" height="15" fill="rgb(225,63,43)" fg:x="3264" fg:w="3"/><text x="98.5041%" y="447.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::fold (3 samples, 0.09%)</title><rect x="98.2541%" y="421" width="0.0903%" height="15" fill="rgb(207,57,36)" fg:x="3264" fg:w="3"/><text x="98.5041%" y="431.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index::_{{closure}} (3 samples, 0.09%)</title><rect x="98.2541%" y="405" width="0.0903%" height="15" fill="rgb(216,99,33)" fg:x="3264" fg:w="3"/><text x="98.5041%" y="415.50"></text></g><g><title>decision-tree`core::slice::_&lt;impl [T]&gt;::contains (3 samples, 0.09%)</title><rect x="98.2541%" y="389" width="0.0903%" height="15" fill="rgb(225,42,16)" fg:x="3264" fg:w="3"/><text x="98.5041%" y="399.50"></text></g><g><title>decision-tree`&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (3 samples, 0.09%)</title><rect x="98.2541%" y="373" width="0.0903%" height="15" fill="rgb(220,201,45)" fg:x="3264" fg:w="3"/><text x="98.5041%" y="383.50"></text></g><g><title>decision-tree`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (3 samples, 0.09%)</title><rect x="98.2541%" y="357" width="0.0903%" height="15" fill="rgb(225,33,4)" fg:x="3264" fg:w="3"/><text x="98.5041%" y="367.50"></text></g><g><title>decision-tree`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.09%)</title><rect x="98.2541%" y="341" width="0.0903%" height="15" fill="rgb(224,33,50)" fg:x="3264" fg:w="3"/><text x="98.5041%" y="351.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="98.3444%" y="437" width="0.0301%" height="15" fill="rgb(246,198,51)" fg:x="3267" fg:w="1"/><text x="98.5944%" y="447.50"></text></g><g><title>decision-tree`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="98.3745%" y="437" width="0.0301%" height="15" fill="rgb(205,22,4)" fg:x="3268" fg:w="1"/><text x="98.6245%" y="447.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="98.3745%" y="421" width="0.0301%" height="15" fill="rgb(206,3,8)" fg:x="3268" fg:w="1"/><text x="98.6245%" y="431.50"></text></g><g><title>decision-tree`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.03%)</title><rect x="98.4046%" y="437" width="0.0301%" height="15" fill="rgb(251,23,15)" fg:x="3269" fg:w="1"/><text x="98.6546%" y="447.50"></text></g><g><title>decision-tree`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="98.4046%" y="421" width="0.0301%" height="15" fill="rgb(252,88,28)" fg:x="3269" fg:w="1"/><text x="98.6546%" y="431.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (84 samples, 2.53%)</title><rect x="95.9362%" y="485" width="2.5286%" height="15" fill="rgb(212,127,14)" fg:x="3187" fg:w="84"/><text x="96.1862%" y="495.50">de..</text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::get_best_split (9 samples, 0.27%)</title><rect x="98.1939%" y="469" width="0.2709%" height="15" fill="rgb(247,145,37)" fg:x="3262" fg:w="9"/><text x="98.4439%" y="479.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::split (4 samples, 0.12%)</title><rect x="98.3444%" y="453" width="0.1204%" height="15" fill="rgb(209,117,53)" fg:x="3267" fg:w="4"/><text x="98.5944%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.03%)</title><rect x="98.4347%" y="437" width="0.0301%" height="15" fill="rgb(212,90,42)" fg:x="3270" fg:w="1"/><text x="98.6847%" y="447.50"></text></g><g><title>decision-tree`&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (1 samples, 0.03%)</title><rect x="98.4949%" y="373" width="0.0301%" height="15" fill="rgb(218,164,37)" fg:x="3272" fg:w="1"/><text x="98.7449%" y="383.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::fold (3 samples, 0.09%)</title><rect x="98.4648%" y="437" width="0.0903%" height="15" fill="rgb(246,65,34)" fg:x="3271" fg:w="3"/><text x="98.7148%" y="447.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index::_{{closure}} (3 samples, 0.09%)</title><rect x="98.4648%" y="421" width="0.0903%" height="15" fill="rgb(231,100,33)" fg:x="3271" fg:w="3"/><text x="98.7148%" y="431.50"></text></g><g><title>decision-tree`core::slice::_&lt;impl [T]&gt;::contains (2 samples, 0.06%)</title><rect x="98.4949%" y="405" width="0.0602%" height="15" fill="rgb(228,126,14)" fg:x="3272" fg:w="2"/><text x="98.7449%" y="415.50"></text></g><g><title>decision-tree`&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (2 samples, 0.06%)</title><rect x="98.4949%" y="389" width="0.0602%" height="15" fill="rgb(215,173,21)" fg:x="3272" fg:w="2"/><text x="98.7449%" y="399.50"></text></g><g><title>decision-tree`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.03%)</title><rect x="98.5250%" y="373" width="0.0301%" height="15" fill="rgb(210,6,40)" fg:x="3273" fg:w="1"/><text x="98.7750%" y="383.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::information_gain (5 samples, 0.15%)</title><rect x="98.4648%" y="469" width="0.1505%" height="15" fill="rgb(212,48,18)" fg:x="3271" fg:w="5"/><text x="98.7148%" y="479.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (5 samples, 0.15%)</title><rect x="98.4648%" y="453" width="0.1505%" height="15" fill="rgb(230,214,11)" fg:x="3271" fg:w="5"/><text x="98.7148%" y="463.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::sum (2 samples, 0.06%)</title><rect x="98.5551%" y="437" width="0.0602%" height="15" fill="rgb(254,105,39)" fg:x="3274" fg:w="2"/><text x="98.8051%" y="447.50"></text></g><g><title>decision-tree`&lt;f32 as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.06%)</title><rect x="98.5551%" y="421" width="0.0602%" height="15" fill="rgb(245,158,5)" fg:x="3274" fg:w="2"/><text x="98.8051%" y="431.50"></text></g><g><title>decision-tree`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="98.5551%" y="405" width="0.0602%" height="15" fill="rgb(249,208,11)" fg:x="3274" fg:w="2"/><text x="98.8051%" y="415.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::fold (2 samples, 0.06%)</title><rect x="98.5551%" y="389" width="0.0602%" height="15" fill="rgb(210,39,28)" fg:x="3274" fg:w="2"/><text x="98.8051%" y="399.50"></text></g><g><title>decision-tree`core::iter::adapters::map::map_fold::_{{closure}} (2 samples, 0.06%)</title><rect x="98.5551%" y="373" width="0.0602%" height="15" fill="rgb(211,56,53)" fg:x="3274" fg:w="2"/><text x="98.8051%" y="383.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index::_{{closure}} (2 samples, 0.06%)</title><rect x="98.5551%" y="357" width="0.0602%" height="15" fill="rgb(226,201,30)" fg:x="3274" fg:w="2"/><text x="98.8051%" y="367.50"></text></g><g><title>decision-tree`decision_tree::dtree::utils::count_vals (2 samples, 0.06%)</title><rect x="98.5551%" y="341" width="0.0602%" height="15" fill="rgb(239,101,34)" fg:x="3274" fg:w="2"/><text x="98.8051%" y="351.50"></text></g><g><title>decision-tree`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="98.5852%" y="325" width="0.0301%" height="15" fill="rgb(226,209,5)" fg:x="3275" fg:w="1"/><text x="98.8352%" y="335.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (2 samples, 0.06%)</title><rect x="98.6153%" y="453" width="0.0602%" height="15" fill="rgb(250,105,47)" fg:x="3276" fg:w="2"/><text x="98.8653%" y="463.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.06%)</title><rect x="98.6153%" y="437" width="0.0602%" height="15" fill="rgb(230,72,3)" fg:x="3276" fg:w="2"/><text x="98.8653%" y="447.50"></text></g><g><title>decision-tree`core::slice::iter::Iter&lt;T&gt;::as_slice (2 samples, 0.06%)</title><rect x="98.6153%" y="421" width="0.0602%" height="15" fill="rgb(232,218,39)" fg:x="3276" fg:w="2"/><text x="98.8653%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.03%)</title><rect x="98.6755%" y="325" width="0.0301%" height="15" fill="rgb(248,166,6)" fg:x="3278" fg:w="1"/><text x="98.9255%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.03%)</title><rect x="98.6755%" y="309" width="0.0301%" height="15" fill="rgb(247,89,20)" fg:x="3278" fg:w="1"/><text x="98.9255%" y="319.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.06%)</title><rect x="98.6755%" y="389" width="0.0602%" height="15" fill="rgb(248,130,54)" fg:x="3278" fg:w="2"/><text x="98.9255%" y="399.50"></text></g><g><title>decision-tree`alloc::alloc::Global::grow_impl (2 samples, 0.06%)</title><rect x="98.6755%" y="373" width="0.0602%" height="15" fill="rgb(234,196,4)" fg:x="3278" fg:w="2"/><text x="98.9255%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.06%)</title><rect x="98.6755%" y="357" width="0.0602%" height="15" fill="rgb(250,143,31)" fg:x="3278" fg:w="2"/><text x="98.9255%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.06%)</title><rect x="98.6755%" y="341" width="0.0602%" height="15" fill="rgb(211,110,34)" fg:x="3278" fg:w="2"/><text x="98.9255%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.03%)</title><rect x="98.7056%" y="325" width="0.0301%" height="15" fill="rgb(215,124,48)" fg:x="3279" fg:w="1"/><text x="98.9556%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="98.7056%" y="309" width="0.0301%" height="15" fill="rgb(216,46,13)" fg:x="3279" fg:w="1"/><text x="98.9556%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.03%)</title><rect x="98.7056%" y="293" width="0.0301%" height="15" fill="rgb(205,184,25)" fg:x="3279" fg:w="1"/><text x="98.9556%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.03%)</title><rect x="98.7056%" y="277" width="0.0301%" height="15" fill="rgb(228,1,10)" fg:x="3279" fg:w="1"/><text x="98.9556%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.03%)</title><rect x="98.7056%" y="261" width="0.0301%" height="15" fill="rgb(213,116,27)" fg:x="3279" fg:w="1"/><text x="98.9556%" y="271.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.09%)</title><rect x="98.6755%" y="453" width="0.0903%" height="15" fill="rgb(241,95,50)" fg:x="3278" fg:w="3"/><text x="98.9255%" y="463.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.09%)</title><rect x="98.6755%" y="437" width="0.0903%" height="15" fill="rgb(238,48,32)" fg:x="3278" fg:w="3"/><text x="98.9255%" y="447.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.09%)</title><rect x="98.6755%" y="421" width="0.0903%" height="15" fill="rgb(235,113,49)" fg:x="3278" fg:w="3"/><text x="98.9255%" y="431.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (3 samples, 0.09%)</title><rect x="98.6755%" y="405" width="0.0903%" height="15" fill="rgb(205,127,43)" fg:x="3278" fg:w="3"/><text x="98.9255%" y="415.50"></text></g><g><title>decision-tree`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="98.7357%" y="389" width="0.0301%" height="15" fill="rgb(250,162,2)" fg:x="3280" fg:w="1"/><text x="98.9857%" y="399.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (96 samples, 2.89%)</title><rect x="95.9362%" y="501" width="2.8898%" height="15" fill="rgb(220,13,41)" fg:x="3187" fg:w="96"/><text x="96.1862%" y="511.50">de..</text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::get_best_split (12 samples, 0.36%)</title><rect x="98.4648%" y="485" width="0.3612%" height="15" fill="rgb(249,221,25)" fg:x="3271" fg:w="12"/><text x="98.7148%" y="495.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::split (7 samples, 0.21%)</title><rect x="98.6153%" y="469" width="0.2107%" height="15" fill="rgb(215,208,19)" fg:x="3276" fg:w="7"/><text x="98.8653%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (2 samples, 0.06%)</title><rect x="98.7658%" y="453" width="0.0602%" height="15" fill="rgb(236,175,2)" fg:x="3281" fg:w="2"/><text x="99.0158%" y="463.50"></text></g><g><title>decision-tree`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="98.8260%" y="485" width="0.0301%" height="15" fill="rgb(241,52,2)" fg:x="3283" fg:w="1"/><text x="99.0760%" y="495.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="98.8561%" y="421" width="0.0301%" height="15" fill="rgb(248,140,14)" fg:x="3284" fg:w="1"/><text x="99.1061%" y="431.50"></text></g><g><title>decision-tree`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.03%)</title><rect x="98.9163%" y="389" width="0.0301%" height="15" fill="rgb(253,22,42)" fg:x="3286" fg:w="1"/><text x="99.1663%" y="399.50"></text></g><g><title>decision-tree`&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (1 samples, 0.03%)</title><rect x="98.9163%" y="373" width="0.0301%" height="15" fill="rgb(234,61,47)" fg:x="3286" fg:w="1"/><text x="99.1663%" y="383.50"></text></g><g><title>decision-tree`core::cmp::impls::_&lt;impl core::cmp::PartialEq for i32&gt;::eq (1 samples, 0.03%)</title><rect x="98.9163%" y="357" width="0.0301%" height="15" fill="rgb(208,226,15)" fg:x="3286" fg:w="1"/><text x="99.1663%" y="367.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::fold (4 samples, 0.12%)</title><rect x="98.8561%" y="453" width="0.1204%" height="15" fill="rgb(217,221,4)" fg:x="3284" fg:w="4"/><text x="99.1061%" y="463.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index::_{{closure}} (4 samples, 0.12%)</title><rect x="98.8561%" y="437" width="0.1204%" height="15" fill="rgb(212,174,34)" fg:x="3284" fg:w="4"/><text x="99.1061%" y="447.50"></text></g><g><title>decision-tree`core::slice::_&lt;impl [T]&gt;::contains (3 samples, 0.09%)</title><rect x="98.8862%" y="421" width="0.0903%" height="15" fill="rgb(253,83,4)" fg:x="3285" fg:w="3"/><text x="99.1362%" y="431.50"></text></g><g><title>decision-tree`&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (2 samples, 0.06%)</title><rect x="98.9163%" y="405" width="0.0602%" height="15" fill="rgb(250,195,49)" fg:x="3286" fg:w="2"/><text x="99.1663%" y="415.50"></text></g><g><title>decision-tree`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="98.9464%" y="389" width="0.0301%" height="15" fill="rgb(241,192,25)" fg:x="3287" fg:w="1"/><text x="99.1964%" y="399.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::information_gain (5 samples, 0.15%)</title><rect x="98.8561%" y="485" width="0.1505%" height="15" fill="rgb(208,124,10)" fg:x="3284" fg:w="5"/><text x="99.1061%" y="495.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (5 samples, 0.15%)</title><rect x="98.8561%" y="469" width="0.1505%" height="15" fill="rgb(222,33,0)" fg:x="3284" fg:w="5"/><text x="99.1061%" y="479.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::sum (1 samples, 0.03%)</title><rect x="98.9765%" y="453" width="0.0301%" height="15" fill="rgb(234,209,28)" fg:x="3288" fg:w="1"/><text x="99.2265%" y="463.50"></text></g><g><title>decision-tree`&lt;f32 as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.03%)</title><rect x="98.9765%" y="437" width="0.0301%" height="15" fill="rgb(224,11,23)" fg:x="3288" fg:w="1"/><text x="99.2265%" y="447.50"></text></g><g><title>decision-tree`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="98.9765%" y="421" width="0.0301%" height="15" fill="rgb(232,99,1)" fg:x="3288" fg:w="1"/><text x="99.2265%" y="431.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="98.9765%" y="405" width="0.0301%" height="15" fill="rgb(237,95,45)" fg:x="3288" fg:w="1"/><text x="99.2265%" y="415.50"></text></g><g><title>decision-tree`core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.03%)</title><rect x="98.9765%" y="389" width="0.0301%" height="15" fill="rgb(208,109,11)" fg:x="3288" fg:w="1"/><text x="99.2265%" y="399.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index::_{{closure}} (1 samples, 0.03%)</title><rect x="98.9765%" y="373" width="0.0301%" height="15" fill="rgb(216,190,48)" fg:x="3288" fg:w="1"/><text x="99.2265%" y="383.50"></text></g><g><title>decision-tree`decision_tree::dtree::utils::count_vals (1 samples, 0.03%)</title><rect x="98.9765%" y="357" width="0.0301%" height="15" fill="rgb(251,171,36)" fg:x="3288" fg:w="1"/><text x="99.2265%" y="367.50"></text></g><g><title>decision-tree`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="98.9765%" y="341" width="0.0301%" height="15" fill="rgb(230,62,22)" fg:x="3288" fg:w="1"/><text x="99.2265%" y="351.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.03%)</title><rect x="99.0066%" y="469" width="0.0301%" height="15" fill="rgb(225,114,35)" fg:x="3289" fg:w="1"/><text x="99.2566%" y="479.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="99.0367%" y="469" width="0.0301%" height="15" fill="rgb(215,118,42)" fg:x="3290" fg:w="1"/><text x="99.2867%" y="479.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.03%)</title><rect x="99.0367%" y="453" width="0.0301%" height="15" fill="rgb(243,119,21)" fg:x="3290" fg:w="1"/><text x="99.2867%" y="463.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="99.0367%" y="437" width="0.0301%" height="15" fill="rgb(252,177,53)" fg:x="3290" fg:w="1"/><text x="99.2867%" y="447.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="99.0367%" y="421" width="0.0301%" height="15" fill="rgb(237,209,29)" fg:x="3290" fg:w="1"/><text x="99.2867%" y="431.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="99.0367%" y="405" width="0.0301%" height="15" fill="rgb(212,65,23)" fg:x="3290" fg:w="1"/><text x="99.2867%" y="415.50"></text></g><g><title>decision-tree`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="99.0367%" y="389" width="0.0301%" height="15" fill="rgb(230,222,46)" fg:x="3290" fg:w="1"/><text x="99.2867%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="99.0367%" y="373" width="0.0301%" height="15" fill="rgb(215,135,32)" fg:x="3290" fg:w="1"/><text x="99.2867%" y="383.50"></text></g><g><title>decision-tree`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="99.0668%" y="469" width="0.0301%" height="15" fill="rgb(246,101,22)" fg:x="3291" fg:w="1"/><text x="99.3168%" y="479.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="99.0668%" y="453" width="0.0301%" height="15" fill="rgb(206,107,13)" fg:x="3291" fg:w="1"/><text x="99.3168%" y="463.50"></text></g><g><title>decision-tree`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.03%)</title><rect x="99.0969%" y="469" width="0.0301%" height="15" fill="rgb(250,100,44)" fg:x="3292" fg:w="1"/><text x="99.3469%" y="479.50"></text></g><g><title>decision-tree`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="99.0969%" y="453" width="0.0301%" height="15" fill="rgb(231,147,38)" fg:x="3292" fg:w="1"/><text x="99.3469%" y="463.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (108 samples, 3.25%)</title><rect x="95.9362%" y="517" width="3.2511%" height="15" fill="rgb(229,8,40)" fg:x="3187" fg:w="108"/><text x="96.1862%" y="527.50">dec..</text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::get_best_split (12 samples, 0.36%)</title><rect x="98.8260%" y="501" width="0.3612%" height="15" fill="rgb(221,135,30)" fg:x="3283" fg:w="12"/><text x="99.0760%" y="511.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::split (6 samples, 0.18%)</title><rect x="99.0066%" y="485" width="0.1806%" height="15" fill="rgb(249,193,18)" fg:x="3289" fg:w="6"/><text x="99.2566%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (2 samples, 0.06%)</title><rect x="99.1270%" y="469" width="0.0602%" height="15" fill="rgb(209,133,39)" fg:x="3293" fg:w="2"/><text x="99.3770%" y="479.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::information_gain (1 samples, 0.03%)</title><rect x="99.1872%" y="501" width="0.0301%" height="15" fill="rgb(232,100,14)" fg:x="3295" fg:w="1"/><text x="99.4372%" y="511.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (1 samples, 0.03%)</title><rect x="99.1872%" y="485" width="0.0301%" height="15" fill="rgb(224,185,1)" fg:x="3295" fg:w="1"/><text x="99.4372%" y="495.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::sum (1 samples, 0.03%)</title><rect x="99.1872%" y="469" width="0.0301%" height="15" fill="rgb(223,139,8)" fg:x="3295" fg:w="1"/><text x="99.4372%" y="479.50"></text></g><g><title>decision-tree`&lt;f32 as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.03%)</title><rect x="99.1872%" y="453" width="0.0301%" height="15" fill="rgb(232,213,38)" fg:x="3295" fg:w="1"/><text x="99.4372%" y="463.50"></text></g><g><title>decision-tree`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="99.1872%" y="437" width="0.0301%" height="15" fill="rgb(207,94,22)" fg:x="3295" fg:w="1"/><text x="99.4372%" y="447.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="99.1872%" y="421" width="0.0301%" height="15" fill="rgb(219,183,54)" fg:x="3295" fg:w="1"/><text x="99.4372%" y="431.50"></text></g><g><title>decision-tree`core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.03%)</title><rect x="99.1872%" y="405" width="0.0301%" height="15" fill="rgb(216,185,54)" fg:x="3295" fg:w="1"/><text x="99.4372%" y="415.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index::_{{closure}} (1 samples, 0.03%)</title><rect x="99.1872%" y="389" width="0.0301%" height="15" fill="rgb(254,217,39)" fg:x="3295" fg:w="1"/><text x="99.4372%" y="399.50"></text></g><g><title>decision-tree`decision_tree::dtree::utils::count_vals (1 samples, 0.03%)</title><rect x="99.1872%" y="373" width="0.0301%" height="15" fill="rgb(240,178,23)" fg:x="3295" fg:w="1"/><text x="99.4372%" y="383.50"></text></g><g><title>decision-tree`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.03%)</title><rect x="99.1872%" y="357" width="0.0301%" height="15" fill="rgb(218,11,47)" fg:x="3295" fg:w="1"/><text x="99.4372%" y="367.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (2 samples, 0.06%)</title><rect x="99.2173%" y="485" width="0.0602%" height="15" fill="rgb(218,51,51)" fg:x="3296" fg:w="2"/><text x="99.4673%" y="495.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.06%)</title><rect x="99.2173%" y="469" width="0.0602%" height="15" fill="rgb(238,126,27)" fg:x="3296" fg:w="2"/><text x="99.4673%" y="479.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.06%)</title><rect x="99.2173%" y="453" width="0.0602%" height="15" fill="rgb(249,202,22)" fg:x="3296" fg:w="2"/><text x="99.4673%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="99.2474%" y="437" width="0.0301%" height="15" fill="rgb(254,195,49)" fg:x="3297" fg:w="1"/><text x="99.4974%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.03%)</title><rect x="99.3377%" y="373" width="0.0301%" height="15" fill="rgb(208,123,14)" fg:x="3300" fg:w="1"/><text x="99.5877%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.03%)</title><rect x="99.3377%" y="357" width="0.0301%" height="15" fill="rgb(224,200,8)" fg:x="3300" fg:w="1"/><text x="99.5877%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="99.3377%" y="341" width="0.0301%" height="15" fill="rgb(217,61,36)" fg:x="3300" fg:w="1"/><text x="99.5877%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="99.3377%" y="325" width="0.0301%" height="15" fill="rgb(206,35,45)" fg:x="3300" fg:w="1"/><text x="99.5877%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="99.3377%" y="309" width="0.0301%" height="15" fill="rgb(217,65,33)" fg:x="3300" fg:w="1"/><text x="99.5877%" y="319.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.12%)</title><rect x="99.2775%" y="485" width="0.1204%" height="15" fill="rgb(222,158,48)" fg:x="3298" fg:w="4"/><text x="99.5275%" y="495.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.06%)</title><rect x="99.3377%" y="469" width="0.0602%" height="15" fill="rgb(254,2,54)" fg:x="3300" fg:w="2"/><text x="99.5877%" y="479.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.06%)</title><rect x="99.3377%" y="453" width="0.0602%" height="15" fill="rgb(250,143,38)" fg:x="3300" fg:w="2"/><text x="99.5877%" y="463.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (2 samples, 0.06%)</title><rect x="99.3377%" y="437" width="0.0602%" height="15" fill="rgb(248,25,0)" fg:x="3300" fg:w="2"/><text x="99.5877%" y="447.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.06%)</title><rect x="99.3377%" y="421" width="0.0602%" height="15" fill="rgb(206,152,27)" fg:x="3300" fg:w="2"/><text x="99.5877%" y="431.50"></text></g><g><title>decision-tree`alloc::alloc::Global::grow_impl (2 samples, 0.06%)</title><rect x="99.3377%" y="405" width="0.0602%" height="15" fill="rgb(240,77,30)" fg:x="3300" fg:w="2"/><text x="99.5877%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.06%)</title><rect x="99.3377%" y="389" width="0.0602%" height="15" fill="rgb(231,5,3)" fg:x="3300" fg:w="2"/><text x="99.5877%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.03%)</title><rect x="99.3679%" y="373" width="0.0301%" height="15" fill="rgb(207,226,32)" fg:x="3301" fg:w="1"/><text x="99.6179%" y="383.50"></text></g><g><title>decision-tree`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="99.3980%" y="485" width="0.0301%" height="15" fill="rgb(222,207,47)" fg:x="3302" fg:w="1"/><text x="99.6480%" y="495.50"></text></g><g><title>decision-tree`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="99.3980%" y="469" width="0.0301%" height="15" fill="rgb(229,115,45)" fg:x="3302" fg:w="1"/><text x="99.6480%" y="479.50"></text></g><g><title>decision-tree`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.03%)</title><rect x="99.4281%" y="485" width="0.0301%" height="15" fill="rgb(224,191,6)" fg:x="3303" fg:w="1"/><text x="99.6781%" y="495.50"></text></g><g><title>decision-tree`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="99.4281%" y="469" width="0.0301%" height="15" fill="rgb(230,227,24)" fg:x="3303" fg:w="1"/><text x="99.6781%" y="479.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (118 samples, 3.55%)</title><rect x="95.9362%" y="533" width="3.5521%" height="15" fill="rgb(228,80,19)" fg:x="3187" fg:w="118"/><text x="96.1862%" y="543.50">deci..</text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::get_best_split (10 samples, 0.30%)</title><rect x="99.1872%" y="517" width="0.3010%" height="15" fill="rgb(247,229,0)" fg:x="3295" fg:w="10"/><text x="99.4372%" y="527.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::split (9 samples, 0.27%)</title><rect x="99.2173%" y="501" width="0.2709%" height="15" fill="rgb(237,194,15)" fg:x="3296" fg:w="9"/><text x="99.4673%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.03%)</title><rect x="99.4582%" y="485" width="0.0301%" height="15" fill="rgb(219,203,20)" fg:x="3304" fg:w="1"/><text x="99.7082%" y="495.50"></text></g><g><title>decision-tree`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="99.4883%" y="469" width="0.0301%" height="15" fill="rgb(234,128,8)" fg:x="3305" fg:w="1"/><text x="99.7383%" y="479.50"></text></g><g><title>decision-tree`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (3 samples, 0.09%)</title><rect x="99.5184%" y="421" width="0.0903%" height="15" fill="rgb(248,202,8)" fg:x="3306" fg:w="3"/><text x="99.7684%" y="431.50"></text></g><g><title>decision-tree`&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (2 samples, 0.06%)</title><rect x="99.5485%" y="405" width="0.0602%" height="15" fill="rgb(206,104,37)" fg:x="3307" fg:w="2"/><text x="99.7985%" y="415.50"></text></g><g><title>decision-tree`core::cmp::impls::_&lt;impl core::cmp::PartialEq for i32&gt;::eq (1 samples, 0.03%)</title><rect x="99.5786%" y="389" width="0.0301%" height="15" fill="rgb(223,8,27)" fg:x="3308" fg:w="1"/><text x="99.8286%" y="399.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::fold (5 samples, 0.15%)</title><rect x="99.4883%" y="485" width="0.1505%" height="15" fill="rgb(216,217,28)" fg:x="3305" fg:w="5"/><text x="99.7383%" y="495.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index::_{{closure}} (4 samples, 0.12%)</title><rect x="99.5184%" y="469" width="0.1204%" height="15" fill="rgb(249,199,1)" fg:x="3306" fg:w="4"/><text x="99.7684%" y="479.50"></text></g><g><title>decision-tree`core::slice::_&lt;impl [T]&gt;::contains (4 samples, 0.12%)</title><rect x="99.5184%" y="453" width="0.1204%" height="15" fill="rgb(240,85,17)" fg:x="3306" fg:w="4"/><text x="99.7684%" y="463.50"></text></g><g><title>decision-tree`&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (4 samples, 0.12%)</title><rect x="99.5184%" y="437" width="0.1204%" height="15" fill="rgb(206,108,45)" fg:x="3306" fg:w="4"/><text x="99.7684%" y="447.50"></text></g><g><title>decision-tree`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="99.6087%" y="421" width="0.0301%" height="15" fill="rgb(245,210,41)" fg:x="3309" fg:w="1"/><text x="99.8587%" y="431.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::information_gain (7 samples, 0.21%)</title><rect x="99.4883%" y="517" width="0.2107%" height="15" fill="rgb(206,13,37)" fg:x="3305" fg:w="7"/><text x="99.7383%" y="527.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index (7 samples, 0.21%)</title><rect x="99.4883%" y="501" width="0.2107%" height="15" fill="rgb(250,61,18)" fg:x="3305" fg:w="7"/><text x="99.7383%" y="511.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::sum (2 samples, 0.06%)</title><rect x="99.6388%" y="485" width="0.0602%" height="15" fill="rgb(235,172,48)" fg:x="3310" fg:w="2"/><text x="99.8888%" y="495.50"></text></g><g><title>decision-tree`&lt;f32 as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.06%)</title><rect x="99.6388%" y="469" width="0.0602%" height="15" fill="rgb(249,201,17)" fg:x="3310" fg:w="2"/><text x="99.8888%" y="479.50"></text></g><g><title>decision-tree`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="99.6388%" y="453" width="0.0602%" height="15" fill="rgb(219,208,6)" fg:x="3310" fg:w="2"/><text x="99.8888%" y="463.50"></text></g><g><title>decision-tree`core::iter::traits::iterator::Iterator::fold (2 samples, 0.06%)</title><rect x="99.6388%" y="437" width="0.0602%" height="15" fill="rgb(248,31,23)" fg:x="3310" fg:w="2"/><text x="99.8888%" y="447.50"></text></g><g><title>decision-tree`core::iter::adapters::map::map_fold::_{{closure}} (2 samples, 0.06%)</title><rect x="99.6388%" y="421" width="0.0602%" height="15" fill="rgb(245,15,42)" fg:x="3310" fg:w="2"/><text x="99.8888%" y="431.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::gini_index::_{{closure}} (2 samples, 0.06%)</title><rect x="99.6388%" y="405" width="0.0602%" height="15" fill="rgb(222,217,39)" fg:x="3310" fg:w="2"/><text x="99.8888%" y="415.50"></text></g><g><title>decision-tree`decision_tree::dtree::utils::count_vals (2 samples, 0.06%)</title><rect x="99.6388%" y="389" width="0.0602%" height="15" fill="rgb(210,219,27)" fg:x="3310" fg:w="2"/><text x="99.8888%" y="399.50"></text></g><g><title>decision-tree`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="99.6689%" y="373" width="0.0301%" height="15" fill="rgb(252,166,36)" fg:x="3311" fg:w="1"/><text x="99.9189%" y="383.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="99.6990%" y="501" width="0.0301%" height="15" fill="rgb(245,132,34)" fg:x="3312" fg:w="1"/><text x="99.9490%" y="511.50"></text></g><g><title>decision-tree`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="99.6990%" y="485" width="0.0301%" height="15" fill="rgb(236,54,3)" fg:x="3312" fg:w="1"/><text x="99.9490%" y="495.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.03%)</title><rect x="99.6990%" y="469" width="0.0301%" height="15" fill="rgb(241,173,43)" fg:x="3312" fg:w="1"/><text x="99.9490%" y="479.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="99.6990%" y="453" width="0.0301%" height="15" fill="rgb(215,190,9)" fg:x="3312" fg:w="1"/><text x="99.9490%" y="463.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="99.6990%" y="437" width="0.0301%" height="15" fill="rgb(242,101,16)" fg:x="3312" fg:w="1"/><text x="99.9490%" y="447.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="99.6990%" y="421" width="0.0301%" height="15" fill="rgb(223,190,21)" fg:x="3312" fg:w="1"/><text x="99.9490%" y="431.50"></text></g><g><title>decision-tree`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="99.6990%" y="405" width="0.0301%" height="15" fill="rgb(215,228,25)" fg:x="3312" fg:w="1"/><text x="99.9490%" y="415.50"></text></g><g><title>decision-tree`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="99.6990%" y="389" width="0.0301%" height="15" fill="rgb(225,36,22)" fg:x="3312" fg:w="1"/><text x="99.9490%" y="399.50"></text></g><g><title>decision-tree`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.03%)</title><rect x="99.6990%" y="373" width="0.0301%" height="15" fill="rgb(251,106,46)" fg:x="3312" fg:w="1"/><text x="99.9490%" y="383.50"></text></g><g><title>decision-tree`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="99.6990%" y="357" width="0.0301%" height="15" fill="rgb(208,90,1)" fg:x="3312" fg:w="1"/><text x="99.9490%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.03%)</title><rect x="99.6990%" y="341" width="0.0301%" height="15" fill="rgb(243,10,4)" fg:x="3312" fg:w="1"/><text x="99.9490%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.03%)</title><rect x="99.6990%" y="325" width="0.0301%" height="15" fill="rgb(212,137,27)" fg:x="3312" fg:w="1"/><text x="99.9490%" y="335.50"></text></g><g><title>decision-tree`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="99.7291%" y="501" width="0.0301%" height="15" fill="rgb(231,220,49)" fg:x="3313" fg:w="1"/><text x="99.9791%" y="511.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::fit (130 samples, 3.91%)</title><rect x="95.8760%" y="565" width="3.9133%" height="15" fill="rgb(237,96,20)" fg:x="3185" fg:w="130"/><text x="96.1260%" y="575.50">deci..</text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::build_tree (128 samples, 3.85%)</title><rect x="95.9362%" y="549" width="3.8531%" height="15" fill="rgb(239,229,30)" fg:x="3187" fg:w="128"/><text x="96.1862%" y="559.50">deci..</text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::get_best_split (10 samples, 0.30%)</title><rect x="99.4883%" y="533" width="0.3010%" height="15" fill="rgb(219,65,33)" fg:x="3305" fg:w="10"/><text x="99.7383%" y="543.50"></text></g><g><title>decision-tree`decision_tree::dtree::DecisionTreeClassifier::split (3 samples, 0.09%)</title><rect x="99.6990%" y="517" width="0.0903%" height="15" fill="rgb(243,134,7)" fg:x="3312" fg:w="3"/><text x="99.9490%" y="527.50"></text></g><g><title>decision-tree`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.03%)</title><rect x="99.7592%" y="501" width="0.0301%" height="15" fill="rgb(216,177,54)" fg:x="3314" fg:w="1"/><text x="100.0092%" y="511.50"></text></g><g><title>decision-tree`core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="99.7592%" y="485" width="0.0301%" height="15" fill="rgb(211,160,20)" fg:x="3314" fg:w="1"/><text x="100.0092%" y="495.50"></text></g><g><title>decision-tree`std::env::args (1 samples, 0.03%)</title><rect x="99.7893%" y="565" width="0.0301%" height="15" fill="rgb(239,85,39)" fg:x="3315" fg:w="1"/><text x="100.0393%" y="575.50"></text></g><g><title>decision-tree`core::ffi::c_str::CStr::from_ptr::strlen_rt (1 samples, 0.03%)</title><rect x="99.7893%" y="549" width="0.0301%" height="15" fill="rgb(232,125,22)" fg:x="3315" fg:w="1"/><text x="100.0393%" y="559.50"></text></g><g><title>decision-tree`main (3,317 samples, 99.85%)</title><rect x="0.0000%" y="677" width="99.8495%" height="15" fill="rgb(244,57,34)" fg:x="0" fg:w="3317"/><text x="0.2500%" y="687.50">decision-tree`main</text></g><g><title>decision-tree`std::rt::lang_start (3,317 samples, 99.85%)</title><rect x="0.0000%" y="661" width="99.8495%" height="15" fill="rgb(214,203,32)" fg:x="0" fg:w="3317"/><text x="0.2500%" y="671.50">decision-tree`std::rt::lang_start</text></g><g><title>decision-tree`std::rt::lang_start_internal (3,317 samples, 99.85%)</title><rect x="0.0000%" y="645" width="99.8495%" height="15" fill="rgb(207,58,43)" fg:x="0" fg:w="3317"/><text x="0.2500%" y="655.50">decision-tree`std::rt::lang_start_internal</text></g><g><title>decision-tree`std::rt::lang_start::_{{closure}} (3,317 samples, 99.85%)</title><rect x="0.0000%" y="629" width="99.8495%" height="15" fill="rgb(215,193,15)" fg:x="0" fg:w="3317"/><text x="0.2500%" y="639.50">decision-tree`std::rt::lang_start::_{{closure}}</text></g><g><title>decision-tree`std::sys_common::backtrace::__rust_begin_short_backtrace (3,317 samples, 99.85%)</title><rect x="0.0000%" y="613" width="99.8495%" height="15" fill="rgb(232,15,44)" fg:x="0" fg:w="3317"/><text x="0.2500%" y="623.50">decision-tree`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>decision-tree`core::ops::function::FnOnce::call_once (3,317 samples, 99.85%)</title><rect x="0.0000%" y="597" width="99.8495%" height="15" fill="rgb(212,3,48)" fg:x="0" fg:w="3317"/><text x="0.2500%" y="607.50">decision-tree`core::ops::function::FnOnce::call_once</text></g><g><title>decision-tree`decision_tree::main (3,308 samples, 99.58%)</title><rect x="0.2709%" y="581" width="99.5786%" height="15" fill="rgb(218,128,7)" fg:x="9" fg:w="3308"/><text x="0.5209%" y="591.50">decision-tree`decision_tree::main</text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.03%)</title><rect x="99.8194%" y="565" width="0.0301%" height="15" fill="rgb(226,216,39)" fg:x="3316" fg:w="1"/><text x="100.0694%" y="575.50"></text></g><g><title>dyld`start (3,319 samples, 99.91%)</title><rect x="0.0000%" y="693" width="99.9097%" height="15" fill="rgb(243,47,51)" fg:x="0" fg:w="3319"/><text x="0.2500%" y="703.50">dyld`start</text></g><g><title>libdyld.dylib`dyld4::LibSystemHelpers::exit (2 samples, 0.06%)</title><rect x="99.8495%" y="677" width="0.0602%" height="15" fill="rgb(241,183,40)" fg:x="3317" fg:w="2"/><text x="100.0995%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__exit (2 samples, 0.06%)</title><rect x="99.8495%" y="661" width="0.0602%" height="15" fill="rgb(231,217,32)" fg:x="3317" fg:w="2"/><text x="100.0995%" y="671.50"></text></g><g><title>all (3,322 samples, 100%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(229,61,38)" fg:x="0" fg:w="3322"/><text x="0.2500%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__exit (3 samples, 0.09%)</title><rect x="99.9097%" y="693" width="0.0903%" height="15" fill="rgb(225,210,5)" fg:x="3319" fg:w="3"/><text x="100.1597%" y="703.50"></text></g></svg></svg>